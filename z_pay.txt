----------------------------------------------------------------
z_pay2:--z_pay2付款月報表
declare @t_accy nvarchar(10) 
declare @t_cno nvarchar(20)
declare @t_part nvarchar(20)
declare @t_bdate nvarchar(20)
declare @t_edate nvarchar(20)
declare @t_btggno nvarchar(20)
declare @t_etggno nvarchar(20)
set @t_accy = '[1]'
set @t_cno = case when '#non' = [2] then '' else [2] end
set @t_part = case when '#non' = [3] then '' else [3] end
set @t_bdate = case when '#non' = [4] then '' else [4] end
set @t_edate = case when '#non' = [5] then CHAR(255) else [5] end
set @t_btggno = case when '#non' = [6] then '' else [6] end
set @t_etggno = case when '#non' = [7] then CHAR(255) else [7] end
declare @tmp table(
		gno nvarchar(1),
		noa nvarchar(30),
		noq nvarchar(20),
		datea nvarchar(10),
		typea nvarchar(10),
		[money] int,
		chgs int,
		paysale int,
		mon nvarchar(6),
		part nvarchar(20),
		rc2no nvarchar(20),
		unpay int,
		checkno nvarchar(20),
		account nvarchar(20),
		bank nvarchar(20),
		indate nvarchar(20),
		memo nvarchar(200),
		comp2 nvarchar(50),
		custno nvarchar(20),
		comp nvarchar(50),
		cno nvarchar(20),
		acomp nvarchar(50),
		title nvarchar(20),
		acc1 nvarchar(20),
		ctotal int,
		btotal int
)
insert into @tmp
select '0' gno,b.noa,b.noq,a.datea,b.acc2,b.money,b.chgs,b.paysale,b.mon,b.part,b.rc2no,a.unpay,
b.checkno,b.account,b.bank,b.indate,b.memo,a.tggno2,a.tggno,left(a.comp,4),a.cno,left(a.acomp,3),case when @t_bdate = @t_edate  then '日' else '月' end,b.acc1,0,0
from pay a
left join pays b on b.noa = a.noa
where (LEN(@t_cno) = 0 or a.cno = @t_cno) and
(LEN(@t_part)= 0 or b.part = @t_part) and
(a.datea between @t_bdate and @t_edate) 
and (a.tggno between @t_btggno and @t_etggno)
union
select '0' gno,'','',a.accc2,b.accc6,b.cmoney,0,0,'','','','','','','','','','','',substring(b.accc7,0,CHARINDEX(' ',b.accc7)),'','',case when @t_bdate = @t_edate  then '日' else '月' end,b.accc5,0,0
from accc[1] a
left join acccs[1] b on a.accc3 = b.accc3
where (b.zno ='tre' or b.zno ='chgcashacc') and 
(b.accc5='1112' or b.accc5='2121') and
(a.accc2 between right(@t_bdate,5) and right(@t_edate,5))

insert into @tmp
select '1' gno,'','','','',0,0,0,'','','','','','','','','','','','','','','','',SUM(case when left(acc1,4) = '1112' then money end),SUM(case when left(acc1,4) = '2121' then money end)
from @tmp

UPDATE @tmp
   SET typea=substring([typea],3,len([typea]))
 WHERE typea like '　　%'

if(LEN(@t_part) > 0) 
begin
select gno,noa,noq,datea,left(typea,4) typea, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,money),1)),4,12)) money, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,chgs),1)),4,12)) chgs, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,paysale),1)),4,12)) paysale, 
mon,part,rc2no,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,unpay),1)),4,12)) unpay, 
checkno,account,bank,indate,memo,comp2,custno,comp,cno,acomp,acc1,title, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,ctotal),1)),4,12)) ctotal, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,btotal),1)),4,12)) btotal,'部門：'+part tpart
from @tmp 
end
else
begin
select gno,noa,noq,datea,left(typea,4) typea, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,money),1)),4,12)) money, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,chgs),1)),4,12)) chgs, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,paysale),1)),4,12)) paysale, 
mon,part,rc2no,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,unpay),1)),4,12)) unpay, 
checkno,account,bank,indate,memo,comp2,custno,comp,cno,acomp,acc1,title, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,ctotal),1)),4,12)) ctotal, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,btotal),1)),4,12)) btotal,'' tpart 
from @tmp 
end;
----------------------------------------------------------------------------------
z_pay7:--z_pay7 
declare @t_bpartno nvarchar(20) 
declare @t_epartno nvarchar(20) 
declare @t_btggno nvarchar(20) 
declare @t_etggno nvarchar(20) 
declare @t_bsmon nvarchar(20)
declare @t_esmon nvarchar(20)
set @t_bpartno = case when '#non' = [12] then '' else [12] end 
set @t_epartno = case when '#non' = [13] then CHAR(255) else [13] end 
set @t_btggno = case when '#non' = [6] then '' else [6] end
set @t_etggno = case when '#non' = [7] then CHAR(255) else [7] end
set @t_bsmon = case when '#non' = [15] then '' else [15] end
set @t_esmon = case when '#non' = [16] then CHAR(255) else [16] end
--*******************************************************************
declare @tmp table( 
	gno nvarchar(1),
	partno nvarchar(20), 
	part nvarchar(50),
	total float, 
	payed float, 
	unpay float 
) 
insert into @tmp 
	select '0'gno,a.partno,b.part,total,payed+(select sum(paysale) from pays where left(right(memo2,9),6) between @t_bsmon and @t_esmon and partno=a.partno),unpay-(select sum(paysale) from pays where left(right(memo2,9),6) between @t_bsmon and @t_esmon and partno=a.partno) from(
		select partno,SUM(total)total,SUM(payed)payed,SUM(unpay)unpay from (
			select '08'partno,total,0 payed,total unpay
			from view_tre[14] where (left(datea,6) between @t_bsmon and @t_esmon) and driverno!='' and total!=0 and len(checkno) =0
			and ('08' between @t_bpartno and @t_epartno) and (tggno between @t_btggno and @t_etggno)
			union all
			select partno,total,payed,unpay
			from payb where (left(datea,6) between @t_bsmon and @t_esmon) and (payed=0 or unpay!=0)
			and (partno between @t_bpartno and @t_epartno) and (tggno between @t_btggno and @t_etggno)
			union all --如果dc有問題請將以下註解(st勿刪)
			select partno,(case when typea='1' then 1 else -1 end)*total,isnull((select sum(paysale) from pays where rc2no=a.noa),0),(case when typea='1' then 1 else -1 end)*total-isnull((select sum(paysale) from pays where rc2no=a.noa),0)
			from view_rc2[14] a where (left(datea,6) between @t_bsmon and @t_esmon) and (payed=0 or unpay!=0)
			and (partno between @t_bpartno and @t_epartno) and (tggno between @t_btggno and @t_etggno)
			union all
			select partno,total,isnull((select sum(paysale) from pays where rc2no=a.noa),0),unpay-isnull((select sum(paysale) from pays where rc2no=a.noa),0)
			from view_workd[14] a where (left(datea,6) between @t_bsmon and @t_esmon) and (payed=0 or unpay!=0)
			and (partno between @t_bpartno and @t_epartno) and (tggno between @t_btggno and @t_etggno)
		)tmp	group by partno
	) a left join part b on a.partno=b.noa
	order by partno


insert into @tmp
select '1' gno,'','',SUM(total)total,SUM(payed)payed,SUM(unpay)unpay
from @tmp

 select gno,partno,part,
 reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,total),1)),4,12)) total,
 reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,payed),1)),4,12)) payed,
 reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,unpay),1)),4,12)) unpay from @tmp
 ;
----------------------------------------------------------------------------------------------
z_pay6:--z_pay6
declare @t_bpartno nvarchar(20) 
declare @t_epartno nvarchar(20) 
declare @t_btggno nvarchar(20) 
declare @t_etggno nvarchar(20) 
declare @t_bsmon nvarchar(20)
declare @t_esmon nvarchar(20)
set @t_bpartno = case when '#non' = [12] then '' else [12] end 
set @t_epartno = case when '#non' = [13] then CHAR(255) else [13] end 
set @t_btggno = case when '#non' = [6] then '' else [6] end
set @t_etggno = case when '#non' = [7] then CHAR(255) else [7] end
set @t_bsmon = case when '#non' = [15] then '' else [15] end
set @t_esmon = case when '#non' = [16] then CHAR(255) else [16] end
--******************************************************************
declare @tmp table( 
	gno nvarchar(1),
	partno nvarchar(20), 
	part nvarchar(50),
	datea nvarchar(20),
	noa nvarchar(50),
	typea nvarchar(50),
	tgg nvarchar(100),
	total float, 
	payed float, 
	unpay float 
) 

insert into @tmp 
select '0'gno,a.partno,b.part,'','','','',total,payed+(select sum(paysale) from pays where left(right(memo2,9),6) between @t_bsmon and @t_esmon and partno=a.partno),unpay-(select sum(paysale) from pays where left(right(memo2,9),6) between @t_bsmon and @t_esmon and partno=a.partno) from(
	select partno,SUM(total)total,SUM(payed)payed,SUM(unpay)unpay from (
		select '08'partno,total,0 payed,total unpay
		from view_tre[14] where (left(datea,6) between @t_bsmon and @t_esmon) and driverno!='' and total!=0 and len(checkno) =0 and ('08' between @t_bpartno and @t_epartno)
		and (tggno between @t_btggno and @t_etggno)
	union all
	select partno,total,payed,unpay
		from payb where (left(datea,6) between @t_bsmon and @t_esmon) and (payed=0 or unpay!=0) and (partno between @t_bpartno and @t_epartno)
		and (tggno between @t_btggno and @t_etggno)
	union all --如果dc有問題請將以下註解(st勿刪)
	select partno,(case when a.typea='1' then 1 else -1 end)*total,isnull((select sum(paysale) from pays where rc2no=a.noa),0),(case when a.typea='1' then 1 else -1 end)*total -isnull((select sum(paysale) from pays where rc2no=a.noa),0)
		from view_rc2[14] a where (left(datea,6) between @t_bsmon and @t_esmon) and (payed=0 or unpay!=0) and (partno between @t_bpartno and @t_epartno) 
		and (tggno between @t_btggno and @t_etggno) 
	union all 
	select partno,total,isnull((select sum(paysale) from pays where rc2no=a.noa),0),total-isnull((select sum(paysale) from pays where rc2no=a.noa),0)
		from view_workd[14] a where (left(datea,6) between @t_bsmon and @t_esmon) and (payed=0 or unpay!=0) and (partno between @t_bpartno and @t_epartno) 
		and (tggno between @t_btggno and @t_etggno) 
	)tmp	group by partno 
) a left join part b on a.partno=b.noa


insert into @tmp 
select '1'gno,'08'partno,''part,datea,noa,'司機立帳'typea,driver,total,0 payed,total unpay
from view_tre102 where (left(datea,6) between @t_bsmon and @t_esmon) and driverno!='' and total!=0 and len(checkno) =0
and ('08' between @t_bpartno and @t_epartno)and (tggno between @t_btggno and @t_etggno)
union all
select '1'gno,partno,''part,datea,noa,'應付立帳'typea,comp,total,payed,unpay
from payb where (left(datea,6) between @t_bsmon and @t_esmon) and (payed=0 or unpay!=0) and (partno between @t_bpartno and @t_epartno)and (tggno between @t_btggno and @t_etggno)
union all --如果dc有問題請將以下註解(st勿刪)
select '1'gno,partno,''part,datea,noa,(case when typea='1' then '進貨立帳' else '退貨立帳' end)typea,tgg,(case when typea='1' then 1 else -1 end)*total,isnull((select sum(paysale) from pays where rc2no=a.noa),0),(case when typea='1' then 1 else -1 end)*total-isnull((select sum(paysale) from pays where rc2no=a.noa),0) 
from view_rc2102 a where (left(datea,6) between @t_bsmon and @t_esmon) and (payed=0 or unpay!=0) and (partno between @t_bpartno and @t_epartno)and (tggno between @t_btggno and @t_etggno)
union all 
select '1'gno,partno,''part,datea,noa,'委外立帳'typea,tgg,total,isnull((select sum(paysale) from pays where rc2no=a.noa),0),total-isnull((select sum(paysale) from pays where rc2no=a.noa),0) 
from view_workd102 a where (left(datea,6) between @t_bsmon and @t_esmon) and (payed=0 or unpay!=0) and (partno between @t_bpartno and @t_epartno)and (tggno between @t_btggno and @t_etggno) 
 


insert into @tmp
select '2'gno,'zz'partno,'','','',''typea,'',SUM(total)total,SUM(payed)payed,SUM(unpay)unpay
from @tmp
where gno='0'

select gno,partno,part,datea,noa,typea,tgg,
 reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,total),1)),4,12)) total,
 reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,payed),1)),4,12)) payed,
 reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,unpay),1)),4,12)) unpay,
 left(datea,6) mon
from @tmp
order by partno,gno,datea;
----------------------------------------------------------------------------------------------

z_pay5:--z_pay5
declare @t_accy nvarchar(20)
declare @t_bxdate nvarchar(20)
declare @t_exdate nvarchar(20)
declare @t_partno nvarchar(20)
set @t_accy = '[1]'
set @t_bxdate = case when '#non' = [8] then '' else [8] end
set @t_exdate = case when '#non' = [9] then CHAR(255) else [9] end
set @t_partno = case when '#non' =[3] then '' else [3] end
declare @tmp table( 
gno nvarchar(1), 
accc3 nvarchar(20), 
accc2 nvarchar(20), 
accc6 nvarchar(40),
part nvarchar(20), 
memo nvarchar(max), 
dmoney int, 
amoney int, 
bmoney int, 
cmoney int, 
atotal int, 
btotal int, 
ctotal int, 
title nvarchar(20) 
) 
insert into @tmp 
select '0' gno,b.accc3,isnull(a.accc2,''), 
b.accc6,c.part +'－'+ a.worker, 
b.accc7,b.cmoney, 
case when left(b.accc5,4) = '1111' then b.cmoney else 0 end, 
case when left(b.accc5,4) = '1112' then b.cmoney else 0 end, 
case when left(b.accc5,4) = '2121' then b.cmoney else 0 end,0,0,0,(case when @t_bxdate = @t_exdate then '日' else '月' end) 
from acccs[1] b 
left join accc[1] a on a.accc3 = b.accc3
left join acpart[1] c on a.part = c.noa 
where 
(left(b.accc5,4) = '1111' or left(b.accc5,4) = '1112' or left(b.accc5,4) = '2121' ) 
and (a.accc2 between @t_bxdate and @t_exdate) and not(b.cmoney = 0)
and(len(@t_partno) = 0 or @t_partno = c.part) 

insert into @tmp 
select'1' gno,CHAR(255),CHAR(255),'','',CHAR(255),0,0,0,0,SUM(amoney),SUM(bmoney),SUM(cmoney),(case when @t_bxdate = @t_exdate then '日' else '月' end)  
from @tmp 

if(LEN(@t_partno) > 0)
begin
select gno,accc3,accc2,accc6,memo,part, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,dmoney),1)),4,12)) dmoney, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,atotal),1)),4,12)) atotal, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,btotal),1)),4,12)) btotal, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,ctotal),1)),4,12)) ctotal,title,
'部門：'+part tpart
from @tmp 
order by accc3,accc2,gno
end
else 
begin
select gno,accc3,accc2,accc6,memo,part, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,dmoney),1)),4,12)) dmoney, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,atotal),1)),4,12)) atotal, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,btotal),1)),4,12)) btotal, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,ctotal),1)),4,12)) ctotal,title,
'' tpart
from @tmp
order by accc3,accc2,gno 
end;

--************************************************************************************************
z_pay3:--z_pay3廠商付款明細表
declare @t_cno nvarchar(20)
declare @t_part nvarchar(20)
declare @t_bdate nvarchar(20)
declare @t_edate nvarchar(20)
declare @t_btggno nvarchar(20)
declare @t_etggno nvarchar(20)
set @t_cno = case when '#non' = [2] then '' else [2] end
set @t_part = case when '#non' = [3] then '' else [3] end
set @t_bdate = case when '#non' = [4] then '' else [4] end
set @t_edate = case when '#non' = [5] then CHAR(255) else [5] end
set @t_btggno = case when '#non' = [6] then '' else [6] end
set @t_etggno = case when '#non' = [7] then CHAR(255) else [7] end
declare @tmp table( 
gno nvarchar(1), 
noa nvarchar(30), 
noq nvarchar(20), 
datea nvarchar(10), 
typea nvarchar(40), 
[money] int, 
chgs int, 
paysale int, 
mon nvarchar(6), 
part nvarchar(20), 
rc2no nvarchar(20), 
unpay int, 
checkno nvarchar(20), 
account nvarchar(40), 
bank nvarchar(40), 
indate nvarchar(20), 
memo nvarchar(200), 
comp2 nvarchar(50), 
tggno nvarchar(20), 
comp nvarchar(50), 
cno nvarchar(20), 
acomp nvarchar(50), 
opay int, 
unopay int, 
textopay int 

) 
insert into @tmp 
select '0' gno,b.noa,b.noq,a.datea,case when PATINDEX('%[0-9]%',b.acc2) = 0 then b.acc2 else left(b.acc2,PATINDEX('%[0-9]%',b.acc2)-1) end,b.money,b.chgs,b.paysale,a.mon,b.part
--,b.rc2no
,(case when charindex('月結',memo2)>0 then right(memo2,9) else b.rc2no end) --如果dc有問題請將這行註解用上行(st勿刪)
,a.unpay,b.checkno,b.account,b.bank,b.indate,b.memo,b.comp2,a.tggno,case when len(c.nick)>0 then c.nick else left(a.comp,4) end,a.cno,acomp, 
a.opay,a.unopay,0 
from pay a 
left join pays b on b.noa = a.noa 
left join tgg  c on a.tggno = c.noa
where (LEN(@t_cno) = 0 or a.cno = @t_cno) and 
(LEN(@t_part)= 0 or b.part = @t_part) and 
(a.datea between @t_bdate and @t_edate) and 
(a.tggno between @t_btggno and @t_etggno) 

insert into @tmp 
select '1' gno,'','','','',SUM(money),sum(chgs),sum(paysale),'','','',0,'','','','', 
'','',tggno,'','',acomp,SUM(opay),SUM(unopay),SUM(textopay) 
from @tmp 
group by acomp,tggno 

insert into @tmp 
select '2' gno,'','','','',SUM(money),sum(chgs),sum(paysale),'','','',0,'','','','', 
'','',CHAR(255),'','',acomp,SUM(opay),SUM(unopay),SUM(textopay) 
from @tmp 
where gno = 1
group by acomp

if(LEN(@t_part) > 0) 
begin
select gno,noa,noq,datea,typea, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,money),1)),4,12)) money, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,chgs),1)),4,12)) chgs, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,paysale),1)),4,12)) paysale, 
mon,part,rc2no, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,unpay),1)),4,12)) unpay, 
checkno,account,bank,indate,memo,comp2,tggno,comp,cno,acomp, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,opay),1)),4,12)) opay, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,unopay),1)),4,12)) unopay, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,textopay),1)),4,12)) textopay,
'部門：'+part tpart 
from @tmp 
order by acomp,tggno,gno 
end
else 
begin
select gno,noa,noq,datea,typea, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,money),1)),4,12)) money, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,chgs),1)),4,12)) chgs, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,paysale),1)),4,12)) paysale, 
mon,part,rc2no, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,unpay),1)),4,12)) unpay, 
checkno,account,bank,indate,memo,comp2,tggno,comp,cno,acomp, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,opay),1)),4,12)) opay, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,unopay),1)),4,12)) unopay, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,textopay),1)),4,12)) textopay,
'' tpart 
from @tmp 
order by acomp,tggno,gno 
end;
--******************************************************************************************
z_pay4:--z-pay4
declare @t_bdate nvarchar(20)
declare @t_edate nvarchar(20)
set @t_bdate = case when '#non' = [4] then '' else [4] end
set @t_edate = case when '#non' = [5] then CHAR(255) else [5] end
declare @tmp table(
		gno nvarchar(1),
		tggno nvarchar(20),
		tgg nvarchar(30),
		bmoney float,
		opay float,
		unopay float
)
insert into @tmp 
select '0' gno,a.tggno,
MAX(case when len(b.nick)>0 then b.nick else left(a.comp,4) end),
isnull((select sum(opay-unopay) from pay where datea<@t_bdate and tggno=a.tggno),0)
,sum(a.opay),sum(a.unopay)
from pay a 
left join tgg b on a.tggno = b.noa
where a.datea between @t_bdate and @t_edate
group by a.tggno

select gno,tggno,tgg,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,bmoney),1)),4,12)) bmoney,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,opay),1)),4,12)) opay,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,unopay),1)),4,12)) unopay,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,bmoney+opay-unopay),1)),4,12)) opbalance
from @tmp;
----------------------------------------------------------------------------------------------
z_pay8:--z_pay8
declare @t_btggno nvarchar(20)
declare @t_etggno nvarchar(20)
declare @t_xmon nvarchar(20)
set @t_btggno = case when '#non' = [6] then '' else [6] end
set @t_etggno = case when '#non' = [7] then CHAR(255) else [7] end
set @t_xmon = case when '#non' = [10] then '' else [10] end
declare @tmpa table(
		gno nvarchar(1),
		n nvarchar(20),
		datea nvarchar(10),
		mon nvarchar(10),
		tggno nvarchar(20),
		comp nvarchar(50),
		money1 float,--前期未付
		tax float,--稅額
		money3 float,--本期應付
		money4 float,--已付
		total float,--應付總計
		textopay float,--預收餘額
		noa nvarchar(20),
		cno nvarchar(20),
		driverno nvarchar(20)
)
insert into @tmpa
select '0' gno,'',b.datea,c.mon,b.tggno,
case when len(d.nick) >0 then d.nick else LEFT(b.comp,4) end,c.unpay,c.tax,b.sale,b.total,c.payed-c.unpay,b.opay-b.unopay,b.noa,c.cno,''
from pays a
left join pay b on a.noa = b.noa
left join payb c on a.rc2no = c.noa
left join tgg d on b.tggno = d.noa
union
select '0' gno,'',b.datea,b.mon,b.tggno,case when len(d.nick) >0 then d.nick else LEFT(b.comp,4) end,c.unpay,c.tax,b.sale,b.total,c.payed-c.unpay,b.opay-b.unopay,b.noa,'',c.driverno
from pays a
left join pay b on a.noa = b.noa
left join tre102 c on a.rc2no = c.noa
left join tgg d on b.tggno = d.noa
declare @tmp table(
		gno nvarchar(1),
		n int,
		datea nvarchar(10),
		mon nvarchar(10),
		tggno nvarchar(20),
		comp nvarchar(50),
		money1 float,--前期未付
		tax float,--稅額
		money3 float,--本期應付
		money4 float,--已付
		total float,--應付總計
		textopay float--預付餘額
)
insert into @tmp
select gno,ROW_NUMBER()over(order by noa,datea)as n,datea,mon,tggno,comp,money1,tax,money3,money4,total,textopay
from @tmpa
where 
(tggno between  @t_btggno and @t_etggno) and
(LEN(@t_xmon) = 0 or @t_xmon = mon)
select gno,n,datea,mon,tggno,comp,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,money1),1)),4,12)) money1,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,tax),1)),4,12)) tax,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,money3),1)),4,12)) money3,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,money4),1)),4,12)) money4,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,total),1)),4,12)) total,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,textopay),1)),4,12)) textopay
from @tmp;
----------------------------------------------------------------------------------------------------
z_pay9:--z_pay9
declare @t_btggno nvarchar(20)
declare @t_etggno nvarchar(20)
declare @t_xmon nvarchar(20)
set @t_btggno = case when '#non' = [6] then '' else [6] end
set @t_etggno = case when '#non' = [7] then CHAR(255) else [7] end
set @t_xmon = case when '#non' = [10] then '' else [10] end
declare @tmpa table(
		gno nvarchar(1),
		n nvarchar(20),
		datea nvarchar(10),
		mon nvarchar(10),
		tggno nvarchar(20),
		comp nvarchar(50),
		money1 float,--前期未付
		tax float,--稅額
		money3 float,--本期應付
		money4 float,--已付
		total float,--應付總計
		textopay float,--預收餘額
		noa nvarchar(20),
		cno nvarchar(20),
		driverno nvarchar(20)
)
insert into @tmpa
select '0' gno,'',b.datea,c.mon,b.tggno,
case when len(d.nick) >0 then d.nick else LEFT(b.comp,4) end,c.unpay,c.tax,b.sale,b.total,c.payed-c.unpay,b.opay-b.unopay,b.noa,c.cno,''
from pays a
left join pay b on a.noa = b.noa
left join payb c on a.rc2no = c.noa
left join tgg d on b.tggno = d.noa
union
select '0' gno,'',b.datea,b.mon,b.tggno,case when len(d.nick) >0 then d.nick else LEFT(b.comp,4) end,c.unpay,c.tax,b.sale,b.total,c.payed-c.unpay,b.opay-b.unopay,b.noa,'',c.driverno
from pays a
left join pay b on a.noa = b.noa
left join tre102 c on a.rc2no = c.noa
left join tgg d on b.tggno = d.noa
declare @tmp table(
		gno nvarchar(1),
		mon nvarchar(10),
		tggno nvarchar(20),
		comp nvarchar(50),
		money1 float,--前期未付
		tax float,--稅額
		money3 float,--本期應付
		money4 float,--已付
		total float,--應付總計
		textopay float--預付餘額
)
insert into @tmp
select '0'gno,mon,tggno,comp,sum(money1),sum(tax),sum(money3),sum(money4),sum(total),sum(textopay)
from @tmpa
where 
(tggno between  @t_btggno and @t_etggno) and
(LEN(@t_xmon) = 0 or @t_xmon = mon)
group by mon,tggno,comp

select gno,
ROW_NUMBER()over(order by mon,tggno)as n,mon,tggno,comp,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,money1),1)),4,12)) money1,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,tax),1)),4,12)) tax,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,money3),1)),4,12)) money3,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,money4),1)),4,12)) money4,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,total),1)),4,12)) total,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,textopay),1)),4,12)) textopay
from @tmp;
----------------------------------------------------------------------------------------------------
z_rc24:--z_rc24
	declare @t_accy nvarchar(10)
	declare @t_bdate nvarchar(10)
	declare @t_edate nvarchar(10)
	declare @t_bmon nvarchar(7)
	declare @t_emon nvarchar(7)
	declare @t_btggno nvarchar(20)
	declare @t_etggno nvarchar(20)
	declare @t_bsalesno nvarchar(20)
	declare @t_esalesno nvarchar(20)
	declare @t_bproductno nvarchar(30)
	declare @t_eproductno nvarchar(30)
	set @t_accy = '[14]'
	set @t_bdate = case when '#non'=[4] then '' else [4] end
	set @t_edate = case when '#non'=[5] then char(255) else [5] end
	set @t_bmon = case when '#non'=[15] then '' else [15] end
	set @t_emon = case when '#non'=[16] then char(255) else [16] end
	set @t_btggno = case when '#non'=[6] then '' else [6] end
	set @t_etggno = case when '#non'=[7] then char(255) else [7] end
	set @t_bsalesno = case when '#non'=[17] then '' else [17] end
	set @t_esalesno = case when '#non'=[18] then char(255) else [18] end
	set @t_bproductno = case when '#non'=[19] then '' else [19] end
	set @t_eproductno = case when '#non'=[20] then char(255) else [20] end
	--***********************************************************************************
	declare @result table(
		gno nvarchar(1),
		type nvarchar(4),
		noa nvarchar(15),
		noq nvarchar(3),
		datea nvarchar(10),
		mon nvarchar(7),
		tggno nvarchar(20),
		comp nvarchar(40),
		addr_invo nvarchar(90),
		tel nvarchar(90),
		productno nvarchar(30),
		xproduct nvarchar(40),
		unit nvarchar(8),
		mount float,
		weight float,
		price float,
		total float,
		money float,
		back float,
		tax float,
		total1 float,
		pay float,
		unpay float,
		total2 float,
		pcount int
		primary key (tggno,gno,mon,datea,noa,noq) 
	)
	
	insert into @result
	select '0' gno, a.typea, a.noa noa, b.noq noq, a.datea datea, (case when a.mon='' then left(a.datea,6) else a.mon end) mon, 
		   a.tggno tggno, isnull(c.comp,''), isnull(c.addr_invo,''), isnull(c.tel,''), b.productno, b.product, b.unit, 
	       b.mount, b.weight, b.price, b.total, 0 money, 0 back, 0 tax, 0 total1, 0 pay, 0 unpay, 0 total2, 0 pcount
	from rc2s[14] b
	left join rc2[14] a on a.noa = b.noa
	left join tgg c on  a.tggno = c.noa
	where (a.datea between @t_bdate and @t_edate) and
		  ((case when a.mon='' then left(a.datea,6) else a.mon end) between @t_bmon and @t_emon) and
		  (a.tggno between @t_btggno and @t_etggno) and
		  (a.salesno between @t_bsalesno and @t_esalesno) and
		  (b.productno between @t_bproductno and @t_eproductno) 
	union  all
	select '0' gno,'1' typea,a.noa noa,b.noq,a.datea datea,left(a.datea,6) mon,
		   a.tggno tggno,a.tgg comp,'' addr_invo,'' tel,b.productno,b.product,b.unit,
		   mount,weight,price,b.total,0,0,0,0,0,0,0,0
	from workd[14] a
	left join workds[14] b on a.noa = b.noa
	where (a.datea between @t_bdate and @t_edate)and
		  (a.tggno between @t_btggno and @t_etggno)
	union all
	select '0' gno, typea, noa, CHAR(255) noq, datea, (case when mon='' then left(datea,6) else mon end), 
		   tggno, '稅' comp, '' addr_invo, '' tel, '' productno, '進貨稅額' product, '' unit, 
		   0 mount, 0 weight, 0 price, tax, 0 money, 0 back, 0 tax, 0 total1, 0 pay, 0 unpay, 0 total2, 0 pcount
	from rc2[14]
	where tax > 0 and
		  (datea between @t_bdate and @t_edate)and
		  ((case when mon='' then left(datea,6) else mon end) between @t_bmon and @t_emon) and
		  (tggno between @t_btggno and @t_etggno)
	union all
	select '0' gno, '稅' typea, noa, '' noq, datea, (case when mon='' then left(datea,6) else mon end), 
		   tggno, '' comp, '' addr_invo, '' tel, '' productno, '發票稅額' product, '' unit, 
		   0 mount, 0 weight, 0 price, tax, 0 money, 0 back, 0 tax, 0 total1, 0 pay, 0 unpay, 0 total2, 0 pcount	 
	from rc2a
	where tax > 0 and
		  ((case when mon='' then left(datea,6) else mon end) between @t_bmon and @t_emon) and
		  (tggno between @t_btggno and @t_etggno)	  	    	  
	order by tggno,gno,mon,datea,noa,noq
	update @result set type = '進' where type='1'
	update @result set type = '退' where type='2'
	--***********************************************************************
	declare @gno nvarchar(1)
	declare @type nvarchar(4)
	declare @noa nvarchar(15)
	declare @total float
	declare @mon nvarchar(7)
	declare @tggno nvarchar(20)
	declare @comp nvarchar(40)
	declare @t_tggno nvarchar(20)
	declare @t_comp nvarchar(40)
	declare @t_money float
	declare @t_back float
	declare @t_tax float
	declare @t_total1 float
	declare @t_pay float
	declare @t_unpay float
	declare @t_total2 float
	declare @t_pcount int
	set @t_tggno = '#zzzz#zzzz'
	set @t_comp = ''
	set @t_money = 0
	set @t_back = 0
	set @t_tax = 0
	set @t_total1 = 0
	set @t_pay = 0
	set @t_unpay = 0
	set @t_total2 = 0
	set @t_pcount = 0
	--***********************************************************************
	declare cursor_table cursor for
	select gno,type,tggno,comp,mon,total from @result
	open cursor_table
	fetch next from cursor_table
	into @gno,@type,@tggno,@comp,@mon,@total
	while(@@FETCH_STATUS <> -1)
	begin
		if @t_tggno != @tggno
		begin
			if @t_tggno != '#zzzz#zzzz'
			begin
				set @t_total1 = @t_money - @t_back + @t_tax
				insert into @result
				select '1' gno, '' type, '' noa, '' noq, '' datea, '' mon, @t_tggno, @t_comp comp, '' addr_invo, '' tel, 
				       '' productno, '' product, '' unit, 0 mount, 0 weight, 0 price, 0 total, 
					   @t_money, @t_back, @t_tax, @t_total1, 0 pay, 0 unpay, 0 total2, @t_pcount
			end
			set @t_tggno = @tggno
			set @t_comp = @comp
			set @t_money = case when @type = '進' then @total else 0 end
			set @t_back = case when @type = '退' then @total else 0 end
			set @t_tax = case when @type = '稅' then @total else 0 end
			set @t_pcount = 1
		end
		else
		begin
			set @t_money = @t_money + case when @type = '進' then @total else 0 end
			set @t_back = @t_back + case when @type = '退' then @total else 0 end
			set @t_tax = @t_tax + case when @type = '稅' then @total else 0 end
			set @t_pcount = @t_pcount + 1
		end
		fetch next from cursor_table
		into @gno,@type,@tggno,@comp,@mon,@total
	end
	close cursor_table
	deallocate cursor_table
	
	if @t_tggno != '#zzzz#zzzz'
	begin
		set @t_total1 = @t_money - @t_back + @t_tax
		insert into @result
		select '1' gno, '' type, '' noa, '' noq, '' datea, '' mon, @t_tggno, @t_comp comp, '' addr_invo, '' tel, 
		       '' productno, '' product, '' unit, 0 mount, 0 weight, 0 price, 0 total, 
			   @t_money, @t_back, @t_tax, @t_total1, 0 pay, 0 unpay, 0 total2, @t_pcount
	end
	
	--已付款
	update a
	set pay=isnull((select SUM(paysale) from pays where rc2no in(select noa from @result where tggno=a.tggno)),0)
	+isnull((select SUM(pb.paysale) from pay pa left join pays pb on pa.noa=pb.noa where pb.rc2no=a.tggno and pa.datea  between @t_bdate and @t_edate),0)
	from @result a where a.gno='1'
	--***********************************************************************
	--前期未付
	declare @tmp table(
		gno nvarchar(1),
		type nvarchar(4),
		noa nvarchar(15),
		noq nvarchar(3),
		datea nvarchar(10),
		mon nvarchar(7),
		tggno nvarchar(20),
		comp nvarchar(40),
		addr_invo nvarchar(90),
		tel nvarchar(90),
		productno nvarchar(30),
		xproduct nvarchar(40),
		unit nvarchar(8),
		mount float,
		weight float,
		price float,
		total float,
		money float,
		back float,
		tax float,
		total1 float,
		pay float,
		unpay float,
		total2 float,
		pcount int
		primary key (tggno,gno,mon,datea,noa,noq) 
	)
	
	insert into @tmp
	select '0' gno, a.typea, a.noa noa, b.noq noq, a.datea datea, (case when a.mon='' then left(a.datea,6) else a.mon end) mon, 
		   a.tggno tggno, isnull(c.comp,''), isnull(c.addr_invo,''), isnull(c.tel,''), b.productno, b.product, b.unit, 
	       b.mount, b.weight, b.price, b.total, 0 money, 0 back, 0 tax, 0 total1, 0 pay, 0 unpay, 0 total2, 0 pcount
	from rc2s[14] b
	left join rc2[14] a on a.noa = b.noa
	left join tgg c on  a.tggno = c.noa
	where (a.datea < @t_bdate) and
		  ((case when a.mon='' then left(a.datea,6) else a.mon end) < @t_bmon ) and
		  (a.tggno between @t_btggno and @t_etggno) and
		  (a.salesno between @t_bsalesno and @t_esalesno) and
		  (b.productno between @t_bproductno and @t_eproductno) 
	union  all
	select '0' gno,'1' typea,a.noa noa,b.noq,a.datea datea,left(a.datea,6) mon,
		   a.tggno tggno,a.tgg comp,'' addr_invo,'' tel,b.productno,b.product,b.unit,
		   mount,weight,price,b.total,0,0,0,0,0,0,0,0
	from workd[14] a
	left join workds[14] b on a.noa = b.noa
	where (a.datea < @t_bdate)and
		  (a.tggno between @t_btggno and @t_etggno)
	union all
	select '0' gno, typea, noa, CHAR(255) noq, datea, (case when mon='' then left(datea,6) else mon end), 
		   tggno, '稅' comp, '' addr_invo, '' tel, '' productno, '進貨稅額' product, '' unit, 
		   0 mount, 0 weight, 0 price, tax, 0 money, 0 back, 0 tax, 0 total1, 0 pay, 0 unpay, 0 total2, 0 pcount
	from rc2[14]
	where tax > 0 and
		  (datea < @t_bdate )and
		  ((case when mon='' then left(datea,6) else mon end) < @t_bmon ) and
		  (tggno between @t_btggno and @t_etggno)
	union all 
	select '0' gno, '稅' typea, noa, '' noq, datea, (case when mon='' then left(datea,6) else mon end), 
		   tggno, '' comp, '' addr_invo, '' tel, '' productno, '發票稅額' product, '' unit, 
		   0 mount, 0 weight, 0 price, tax, 0 money, 0 back, 0 tax, 0 total1, 0 pay, 0 unpay, 0 total2, 0 pcount	 
	from rc2a
	where tax > 0 and
		  ((case when mon='' then left(datea,6) else mon end) < @t_bmon ) and
		  (tggno between @t_btggno and @t_etggno)	  	    	  
	order by tggno,gno,mon,datea,noa,noq
	update @tmp set type = '進' where type='1'
	update @tmp set type = '退' where type='2'
	
----------------------------------------------------------------------------------------------------	
	set @t_tggno = '#zzzz#zzzz'
	set @t_comp = ''
	set @t_money = 0
	set @t_back = 0
	set @t_tax = 0
	set @t_total1 = 0
	set @t_pay = 0
	set @t_unpay = 0
	set @t_total2 = 0
	set @t_pcount = 0
	--***********************************************************************
	declare cursor_table cursor for
	select gno,type,tggno,comp,mon,total from @tmp
	open cursor_table
	fetch next from cursor_table
	into @gno,@type,@tggno,@comp,@mon,@total
	while(@@FETCH_STATUS <> -1)
	begin
		if @t_tggno != @tggno
		begin
			if @t_tggno != '#zzzz#zzzz'
			begin
				set @t_total1 = @t_money - @t_back + @t_tax
				insert into @tmp
				select '1' gno, '' type, '' noa, '' noq, '' datea, '' mon, @t_tggno, @t_comp comp, '' addr_invo, '' tel, 
				       '' productno, '' product, '' unit, 0 mount, 0 weight, 0 price, 0 total, 
					   @t_money, @t_back, @t_tax, @t_total1, 0 pay, 0 unpay, 0 total2, @t_pcount
			end
			set @t_tggno = @tggno
			set @t_comp = @comp
			set @t_money = case when @type = '進' then @total else 0 end
			set @t_back = case when @type = '退' then @total else 0 end
			set @t_tax = case when @type = '稅' then @total else 0 end
			set @t_pcount = 1
		end
		else
		begin
			set @t_money = @t_money + case when @type = '進' then @total else 0 end
			set @t_back = @t_back + case when @type = '退' then @total else 0 end
			set @t_tax = @t_tax + case when @type = '稅' then @total else 0 end
			set @t_pcount = @t_pcount + 1
		end
		fetch next from cursor_table
		into @gno,@type,@tggno,@comp,@mon,@total
	end
	close cursor_table
	deallocate cursor_table
	
	if @t_tggno != '#zzzz#zzzz'
	begin
		set @t_total1 = @t_money - @t_back + @t_tax
		insert into @tmp
		select '1' gno, '' type, '' noa, '' noq, '' datea, '' mon, @t_tggno, @t_comp comp, '' addr_invo, '' tel, 
		       '' productno, '' product, '' unit, 0 mount, 0 weight, 0 price, 0 total, 
			   @t_money, @t_back, @t_tax, @t_total1, 0 pay, 0 unpay, 0 total2, @t_pcount
	end
	
	--已付款
	update a
	set pay=isnull((select SUM(paysale) from pays where rc2no in(select noa from @result where tggno=a.tggno)),0)
	+isnull((select SUM(pb.paysale) from pay pa left join pays pb on pa.noa=pb.noa where pb.rc2no=a.tggno and pa.datea  between @t_bdate and @t_edate),0)
	from @tmp a where a.gno='1'
	
	update a
	set unpay=isnull((select total1-pay from @tmp where tggno=a.tggno and gno='1'),0)
	from @result a where a.gno='1'
	
	update @result
	set total2=total1+unpay-pay 
	where gno='1'
	
	select gno,type,noa,noq,datea,mon,tggno,comp,
	addr_invo,tel,productno,xproduct,unit
	,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,mount),1)),0,30)) mount
	,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,weight),1)),0,30)) weight
	,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,price),1)),0,30)) price
	,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,total),1)),4,30)) total
	,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,money),1)),4,30)) money
	,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,back),1)),4,30)) back
	,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,tax),1)),4,30)) tax
	,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,total1),1)),4,30)) total1 
	,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,pay),1)),4,30)) pay
	,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,unpay),1)),4,30)) unpay
	,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,total2),1)),4,30)) total2
	,pcount
	from @result order by tggno,gno,mon,datea,noa,noq;
----------------------------------------------------------------------------------------------------
z_rc28:--z_rc28
	declare @t_accy nvarchar(10)
	declare @t_bdate nvarchar(10)
	declare @t_edate nvarchar(10)
	declare @t_bmon nvarchar(7)
	declare @t_emon nvarchar(7)
	declare @t_btggno nvarchar(20)
	declare @t_etggno nvarchar(20)
	declare @t_bsalesno nvarchar(20)
	declare @t_esalesno nvarchar(20)
	declare @t_bproductno nvarchar(30)
	declare @t_eproductno nvarchar(30)
	set @t_accy = '[14]'
	set @t_bdate = case when '#non'=[4] then '' else [4] end
	set @t_edate = case when '#non'=[5] then char(255) else [5] end
	set @t_bmon = case when '#non'=[15] then '' else [15] end
	set @t_emon = case when '#non'=[16] then char(255) else [16] end
	set @t_btggno = case when '#non'=[6] then '' else [6] end
	set @t_etggno = case when '#non'=[7] then char(255) else [7] end
	set @t_bsalesno = case when '#non'=[17] then '' else [17] end
	set @t_esalesno = case when '#non'=[18] then char(255) else [18] end
	set @t_bproductno = case when '#non'=[19] then '' else [19] end
	set @t_eproductno = case when '#non'=[20] then char(255) else [20] end
	--***********************************************************************************
	declare @result table(
		gno nvarchar(1),
		type nvarchar(4),
		noa nvarchar(15),
		noq nvarchar(3),
		datea nvarchar(10),
		mon nvarchar(7),
		tggno nvarchar(20),
		comp nvarchar(40),
		addr_invo nvarchar(90),
		tel nvarchar(90),
		productno nvarchar(30),
		xproduct nvarchar(40),
		unit nvarchar(8),
		mount float,
		weight float,
		price float,
		total float,
		money float,
		back float,
		tax float,
		total1 float,
		pay float,
		unpay float,
		total2 float,
		pcount int
		primary key (tggno,gno,mon,datea,noa,noq) 
	)
	
	insert into @result
	select '0' gno, a.typea, a.noa noa, b.noq noq, a.datea datea, (case when a.mon='' then left(a.datea,6) else a.mon end) mon, 
		   a.tggno tggno, isnull(c.comp,''), isnull(c.addr_invo,''), isnull(c.tel,''), b.productno, b.product, b.unit, 
	       b.mount, b.weight, b.price, b.total, 0 money, 0 back, 0 tax, 0 total1, 0 pay, 0 unpay, 0 total2, 0 pcount
	from rc2s[14] b
	left join rc2[14] a on a.noa = b.noa
	left join tgg c on  a.tggno = c.noa
	where (a.datea between @t_bdate and @t_edate) and
		  ((case when a.mon='' then left(a.datea,6) else a.mon end) between @t_bmon and @t_emon) and
		  (a.tggno between @t_btggno and @t_etggno) and
		  (a.salesno between @t_bsalesno and @t_esalesno) and
		  (b.productno between @t_bproductno and @t_eproductno) 
	union  all
	select '0' gno,'1' typea,a.noa noa,b.noq,a.datea datea,left(a.datea,6) mon,
		   a.tggno tggno,a.tgg comp,'' addr_invo,'' tel,b.productno,b.product,b.unit,
		   mount,weight,price,b.total,0,0,0,0,0,0,0,0
	from workd[14] a
	left join workds[14] b on a.noa = b.noa
	where (a.datea between @t_bdate and @t_edate)and
		  (a.tggno between @t_btggno and @t_etggno)
	union all
	select '0' gno, typea, noa, CHAR(255) noq, datea, (case when mon='' then left(datea,6) else mon end), 
		   tggno, '稅' comp, '' addr_invo, '' tel, '' productno, '進貨稅額' product, '' unit, 
		   0 mount, 0 weight, 0 price, tax, 0 money, 0 back, 0 tax, 0 total1, 0 pay, 0 unpay, 0 total2, 0 pcount
	from rc2[14]
	where tax > 0 and
		  (datea between @t_bdate and @t_edate)and
		  ((case when mon='' then left(datea,6) else mon end) between @t_bmon and @t_emon) and
		  (tggno between @t_btggno and @t_etggno)
	union all
	select '0' gno, '稅' typea, noa, '' noq, datea, (case when mon='' then left(datea,6) else mon end), 
		   tggno, '' comp, '' addr_invo, '' tel, '' productno, '發票稅額' product, '' unit, 
		   0 mount, 0 weight, 0 price, tax, 0 money, 0 back, 0 tax, 0 total1, 0 pay, 0 unpay, 0 total2, 0 pcount	 
	from rc2a
	where tax > 0 and
		  ((case when mon='' then left(datea,6) else mon end) between @t_bmon and @t_emon) and
		  (tggno between @t_btggno and @t_etggno)	  	    	  
	order by tggno,gno,mon,datea,noa,noq
	update @result set type = '進' where type='1'
	update @result set type = '退' where type='2'
	--***********************************************************************
	declare @gno nvarchar(1)
	declare @type nvarchar(4)
	declare @noa nvarchar(15)
	declare @total float
	declare @mon nvarchar(7)
	declare @tggno nvarchar(20)
	declare @comp nvarchar(40)
	declare @t_tggno nvarchar(20)
	declare @t_comp nvarchar(40)
	declare @t_money float
	declare @t_back float
	declare @t_tax float
	declare @t_total1 float
	declare @t_pay float
	declare @t_unpay float
	declare @t_total2 float
	declare @t_pcount int
	set @t_tggno = '#zzzz#zzzz'
	set @t_comp = ''
	set @t_money = 0
	set @t_back = 0
	set @t_tax = 0
	set @t_total1 = 0
	set @t_pay = 0
	set @t_unpay = 0
	set @t_total2 = 0
	set @t_pcount = 0
	--***********************************************************************
	declare cursor_table cursor for
	select gno,type,tggno,comp,mon,total from @result
	open cursor_table
	fetch next from cursor_table
	into @gno,@type,@tggno,@comp,@mon,@total
	while(@@FETCH_STATUS <> -1)
	begin
		if @t_tggno != @tggno
		begin
			if @t_tggno != '#zzzz#zzzz'
			begin
				set @t_total1 = @t_money - @t_back + @t_tax
				insert into @result
				select '1' gno, '' type, '' noa, '' noq, '' datea, '' mon, @t_tggno, @t_comp comp, '' addr_invo, '' tel, 
				       '' productno, '' product, '' unit, 0 mount, 0 weight, 0 price, 0 total, 
					   @t_money, @t_back, @t_tax, @t_total1, 0 pay, 0 unpay, 0 total2, @t_pcount
			end
			set @t_tggno = @tggno
			set @t_comp = @comp
			set @t_money = case when @type = '進' then @total else 0 end
			set @t_back = case when @type = '退' then @total else 0 end
			set @t_tax = case when @type = '稅' then @total else 0 end
			set @t_pcount = 1
		end
		else
		begin
			set @t_money = @t_money + case when @type = '進' then @total else 0 end
			set @t_back = @t_back + case when @type = '退' then @total else 0 end
			set @t_tax = @t_tax + case when @type = '稅' then @total else 0 end
			set @t_pcount = @t_pcount + 1
		end
		fetch next from cursor_table
		into @gno,@type,@tggno,@comp,@mon,@total
	end
	close cursor_table
	deallocate cursor_table
	
	if @t_tggno != '#zzzz#zzzz'
	begin
		set @t_total1 = @t_money - @t_back + @t_tax
		insert into @result
		select '1' gno, '' type, '' noa, '' noq, '' datea, '' mon, @t_tggno, @t_comp comp, '' addr_invo, '' tel, 
		       '' productno, '' product, '' unit, 0 mount, 0 weight, 0 price, 0 total, 
			   @t_money, @t_back, @t_tax, @t_total1, 0 pay, 0 unpay, 0 total2, @t_pcount
	end
	
	--已付款
	update a
	set pay=isnull((select SUM(paysale) from pays where rc2no in(select noa from @result where tggno=a.tggno)),0)
	+isnull((select SUM(pb.paysale) from pay pa left join pays pb on pa.noa=pb.noa where pb.rc2no=a.tggno and pa.datea  between @t_bdate and @t_edate),0)
	from @result a where a.gno='1'
	--***********************************************************************
	--前期未付
	declare @tmp table(
		gno nvarchar(1),
		type nvarchar(4),
		noa nvarchar(15),
		noq nvarchar(3),
		datea nvarchar(10),
		mon nvarchar(7),
		tggno nvarchar(20),
		comp nvarchar(40),
		addr_invo nvarchar(90),
		tel nvarchar(90),
		productno nvarchar(30),
		xproduct nvarchar(40),
		unit nvarchar(8),
		mount float,
		weight float,
		price float,
		total float,
		money float,
		back float,
		tax float,
		total1 float,
		pay float,
		unpay float,
		total2 float,
		pcount int
		primary key (tggno,gno,mon,datea,noa,noq) 
	)
	
	insert into @tmp
	select '0' gno, a.typea, a.noa noa, b.noq noq, a.datea datea, (case when a.mon='' then left(a.datea,6) else a.mon end) mon, 
		   a.tggno tggno, isnull(c.comp,''), isnull(c.addr_invo,''), isnull(c.tel,''), b.productno, b.product, b.unit, 
	       b.mount, b.weight, b.price, b.total, 0 money, 0 back, 0 tax, 0 total1, 0 pay, 0 unpay, 0 total2, 0 pcount
	from rc2s[14] b
	left join rc2[14] a on a.noa = b.noa
	left join tgg c on  a.tggno = c.noa
	where (a.datea < @t_bdate) and
		  ((case when a.mon='' then left(a.datea,6) else a.mon end) < @t_bmon ) and
		  (a.tggno between @t_btggno and @t_etggno) and
		  (a.salesno between @t_bsalesno and @t_esalesno) and
		  (b.productno between @t_bproductno and @t_eproductno) 
	union  all
	select '0' gno,'1' typea,a.noa noa,b.noq,a.datea datea,left(a.datea,6) mon,
		   a.tggno tggno,a.tgg comp,'' addr_invo,'' tel,b.productno,b.product,b.unit,
		   mount,weight,price,b.total,0,0,0,0,0,0,0,0
	from workd[14] a
	left join workds[14] b on a.noa = b.noa
	where (a.datea < @t_bdate)and
		  (a.tggno between @t_btggno and @t_etggno)
	union all
	select '0' gno, typea, noa, CHAR(255) noq, datea, (case when mon='' then left(datea,6) else mon end), 
		   tggno, '稅' comp, '' addr_invo, '' tel, '' productno, '進貨稅額' product, '' unit, 
		   0 mount, 0 weight, 0 price, tax, 0 money, 0 back, 0 tax, 0 total1, 0 pay, 0 unpay, 0 total2, 0 pcount
	from rc2[14]
	where tax > 0 and
		  (datea < @t_bdate )and
		  ((case when mon='' then left(datea,6) else mon end) < @t_bmon ) and
		  (tggno between @t_btggno and @t_etggno)
	union all 
	select '0' gno, '稅' typea, noa, '' noq, datea, (case when mon='' then left(datea,6) else mon end), 
		   tggno, '' comp, '' addr_invo, '' tel, '' productno, '發票稅額' product, '' unit, 
		   0 mount, 0 weight, 0 price, tax, 0 money, 0 back, 0 tax, 0 total1, 0 pay, 0 unpay, 0 total2, 0 pcount	 
	from rc2a
	where tax > 0 and
		  ((case when mon='' then left(datea,6) else mon end) < @t_bmon ) and
		  (tggno between @t_btggno and @t_etggno)	  	    	  
	order by tggno,gno,mon,datea,noa,noq
	update @tmp set type = '進' where type='1'
	update @tmp set type = '退' where type='2'
	
----------------------------------------------------------------------------------------------------	
	set @t_tggno = '#zzzz#zzzz'
	set @t_comp = ''
	set @t_money = 0
	set @t_back = 0
	set @t_tax = 0
	set @t_total1 = 0
	set @t_pay = 0
	set @t_unpay = 0
	set @t_total2 = 0
	set @t_pcount = 0
	--***********************************************************************
	declare cursor_table cursor for
	select gno,type,tggno,comp,mon,total from @tmp
	open cursor_table
	fetch next from cursor_table
	into @gno,@type,@tggno,@comp,@mon,@total
	while(@@FETCH_STATUS <> -1)
	begin
		if @t_tggno != @tggno
		begin
			if @t_tggno != '#zzzz#zzzz'
			begin
				set @t_total1 = @t_money - @t_back + @t_tax
				insert into @tmp
				select '1' gno, '' type, '' noa, '' noq, '' datea, '' mon, @t_tggno, @t_comp comp, '' addr_invo, '' tel, 
				       '' productno, '' product, '' unit, 0 mount, 0 weight, 0 price, 0 total, 
					   @t_money, @t_back, @t_tax, @t_total1, 0 pay, 0 unpay, 0 total2, @t_pcount
			end
			set @t_tggno = @tggno
			set @t_comp = @comp
			set @t_money = case when @type = '進' then @total else 0 end
			set @t_back = case when @type = '退' then @total else 0 end
			set @t_tax = case when @type = '稅' then @total else 0 end
			set @t_pcount = 1
		end
		else
		begin
			set @t_money = @t_money + case when @type = '進' then @total else 0 end
			set @t_back = @t_back + case when @type = '退' then @total else 0 end
			set @t_tax = @t_tax + case when @type = '稅' then @total else 0 end
			set @t_pcount = @t_pcount + 1
		end
		fetch next from cursor_table
		into @gno,@type,@tggno,@comp,@mon,@total
	end
	close cursor_table
	deallocate cursor_table
	
	if @t_tggno != '#zzzz#zzzz'
	begin
		set @t_total1 = @t_money - @t_back + @t_tax
		insert into @tmp
		select '1' gno, '' type, '' noa, '' noq, '' datea, '' mon, @t_tggno, @t_comp comp, '' addr_invo, '' tel, 
		       '' productno, '' product, '' unit, 0 mount, 0 weight, 0 price, 0 total, 
			   @t_money, @t_back, @t_tax, @t_total1, 0 pay, 0 unpay, 0 total2, @t_pcount
	end
	
	--已付款
	update a
	set pay=isnull((select SUM(paysale) from pays where rc2no in(select noa from @result where tggno=a.tggno)),0)
	+isnull((select SUM(pb.paysale) from pay pa left join pays pb on pa.noa=pb.noa where pb.rc2no=a.tggno and pa.datea  between @t_bdate and @t_edate),0)
	from @tmp a where a.gno='1'
	
	update a
	set unpay=isnull((select total1-pay from @tmp where tggno=a.tggno and gno='1'),0)
	from @result a where a.gno='1'
	
	update @result
	set total2=total1+unpay-pay 
	where gno='1'
	
	select '0'gno,type,noa,noq,datea,mon,tggno,comp,
	addr_invo,tel,productno,xproduct,unit,mount,weight,price,total,money,back,tax
	,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,total1),1)),4,30)) total1 
	,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,pay),1)),4,30)) pay
	,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,unpay),1)),4,30)) unpay
	,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,total2),1)),4,30)) total2
	,pcount
	from @result where gno='1' order by tggno,gno,mon,datea,noa,noq;