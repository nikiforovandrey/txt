z_pay5:--z_pay5
declare @t_accy nvarchar(20)
declare @t_bxdate nvarchar(20)
declare @t_exdate nvarchar(20)
set @t_accy = '[1]'
set @t_bxdate = case when '#non' = [8] then '' else [8] end
set @t_exdate = case when '#non' = [9] then CHAR(255) else [9] end
declare @tmp table(
		gno nvarchar(1),
		accc3 nvarchar(20),
		accc2 nvarchar(20),
		accc6 nvarchar(40),
		memo nvarchar(max),
		dmoney int,
		amoney int,
		bmoney int,
		cmoney int,
		atotal int,
		btotal int,
		ctotal int,
		title nvarchar(20)
)
insert into @tmp
select '0' gno,b.accc3,isnull(a.accc2,''),
b.accc6,
b.accc7,b.cmoney,
case when left(b.accc5,4) = '1111' then b.cmoney else 0 end,
case when left(b.accc5,4) = '1112' then b.cmoney else 0 end,
case when left(b.accc5,4) = '2121' then b.cmoney else 0 end,0,0,0,(case when @t_bxdate = @t_exdate  then '日' else '月' end)
from acccs[1] b
left join accc[1] a on a.accc3 = b.accc3
where 
(left(b.accc5,4) = '1111' or left(b.accc5,4) = '1112' or left(b.accc5,4) = '2121' )
 and (a.accc2 between @t_bxdate and @t_exdate) and not(b.cmoney = 0)
 
insert into @tmp
select'1' gno,'','','','',0,0,0,0,SUM(amoney),SUM(bmoney),SUM(cmoney),(case when @t_bxdate = @t_exdate  then '日' else '月' end)
from @tmp


select gno,accc3,accc2,accc6,memo,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,dmoney),1)),4,12)) dmoney,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,atotal),1)),4,12)) atotal,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,btotal),1)),4,12)) btotal,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,ctotal),1)),4,12)) ctotal,title
from @tmp;
----------------------------------------------------------------
z_pay2:--z_pay2付款月報表
declare @t_accy nvarchar(10) 
declare @t_cno nvarchar(20)
declare @t_part nvarchar(20)
declare @t_bdate nvarchar(20)
declare @t_edate nvarchar(20)
declare @t_btggno nvarchar(20)
declare @t_etggno nvarchar(20)
set @t_accy = '[1]'
set @t_cno = case when '#non' = [2] then '' else [2] end
set @t_part = case when '#non' = [3] then '' else [3] end
set @t_bdate = case when '#non' = [4] then '' else [4] end
set @t_edate = case when '#non' = [5] then CHAR(255) else [5] end
set @t_btggno = case when '#non' = [6] then '' else [6] end
set @t_etggno = case when '#non' = [7] then CHAR(255) else [7] end
declare @tmp table(
		gno nvarchar(1),
		noa nvarchar(30),
		noq nvarchar(20),
		datea nvarchar(10),
		typea nvarchar(10),
		[money] int,
		chgs int,
		paysale int,
		mon nvarchar(6),
		part nvarchar(20),
		rc2no nvarchar(20),
		unpay int,
		checkno nvarchar(20),
		account nvarchar(20),
		bank nvarchar(20),
		indate nvarchar(20),
		memo nvarchar(200),
		comp2 nvarchar(50),
		custno nvarchar(20),
		comp nvarchar(50),
		cno nvarchar(20),
		acomp nvarchar(50),
		title nvarchar(20),
		acc1 nvarchar(20),
		ctotal int,
		btotal int
)
insert into @tmp
select '0' gno,b.noa,b.noq,a.datea,b.acc2,b.money,b.chgs,b.paysale,b.mon,b.part,b.rc2no,a.unpay,
b.checkno,b.account,b.bank,b.indate,b.memo,b.comp2,a.custno,left(a.comp,4),a.cno,left(a.acomp,3),case when @t_bdate = @t_edate  then '日' else '月' end,b.acc1,0,0
from pay a
left join pays b on b.noa = a.noa
where (LEN(@t_cno) = 0 or a.cno = @t_cno) and
(LEN(@t_part)= 0 or b.part = @t_part) and
(a.datea between @t_bdate and @t_edate) 

union
select '0' gno,'','',a.accc2,b.accc6,b.cmoney,0,0,'','','','','','','','','','','',substring(b.accc7,0,CHARINDEX(' ',b.accc7)),'','',case when @t_bdate = @t_edate  then '日' else '月' end,b.accc5,0,0
from accc[1] a
left join acccs[1] b on a.accc3 = b.accc3
where (b.zno ='tre' or b.zno ='chgcashacc') and 
(b.accc5='1112' or b.accc5='2121') and
(a.accc2 between right(@t_bdate,5) and right(@t_edate,5))

insert into @tmp
select '1' gno,'','','','',0,0,0,'','','','','','','','','','','','','','','','',SUM(case when left(acc1,4) = '1112' then money end),SUM(case when left(acc1,4) = '2121' then money end)
from @tmp

UPDATE @tmp
   SET typea=substring([typea],3,len([typea]))
 WHERE typea like '　　%'

select gno,noa,noq,datea,left(typea,4) typea,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,money),1)),4,12)) money,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,chgs),1)),4,12)) chgs,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,paysale),1)),4,12)) paysale,
mon,part,rc2no,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,unpay),1)),4,12)) unpay,
checkno,account,bank,indate,memo,comp2,custno,comp,cno,acomp,acc1,title,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,ctotal),1)),4,12)) ctotal,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,btotal),1)),4,12)) btotal
from @tmp;
--************************************************************************************************
z_pay3:--z_pay3廠商付款明細表
declare @t_cno nvarchar(20)
declare @t_part nvarchar(20)
declare @t_bdate nvarchar(20)
declare @t_edate nvarchar(20)
declare @t_btggno nvarchar(20)
declare @t_etggno nvarchar(20)
set @t_cno = case when '#non' = [2] then '' else [2] end
set @t_part = case when '#non' = [3] then '' else [3] end
set @t_bdate = case when '#non' = [4] then '' else [4] end
set @t_edate = case when '#non' = [5] then CHAR(255) else [5] end
set @t_btggno = case when '#non' = [6] then '' else [6] end
set @t_etggno = case when '#non' = [7] then CHAR(255) else [7] end
declare @tmp table( 
gno nvarchar(1), 
noa nvarchar(30), 
noq nvarchar(20), 
datea nvarchar(10), 
typea nvarchar(40), 
[money] int, 
chgs int, 
paysale int, 
mon nvarchar(6), 
part nvarchar(20), 
rc2no nvarchar(20), 
unpay int, 
checkno nvarchar(20), 
account nvarchar(40), 
bank nvarchar(40), 
indate nvarchar(20), 
memo nvarchar(200), 
comp2 nvarchar(50), 
tggno nvarchar(20), 
comp nvarchar(50), 
cno nvarchar(20), 
acomp nvarchar(50), 
opay int, 
unopay int, 
textopay int 

) 
insert into @tmp 
select '0' gno,b.noa,b.noq,a.datea,case when PATINDEX('%[0-9]%',b.acc2) = 0 then b.acc2 else left(b.acc2,PATINDEX('%[0-9]%',b.acc2)-1) end,b.money,b.chgs,b.paysale,b.mon,b.part,b.rc2no,a.unpay, 
b.checkno,b.account,b.bank,b.indate,b.memo,b.comp2,a.tggno,case when len(c.nick)>0 then c.nick else left(a.comp,4) end,a.cno,acomp, 
a.opay,a.unopay,0 
from pay a 
left join pays b on b.noa = a.noa 
left join tgg  c on a.tggno = c.noa
where (LEN(@t_cno) = 0 or a.cno = @t_cno) and 
(LEN(@t_part)= 0 or b.part = @t_part) and 
(a.datea between @t_bdate and @t_edate) and 
(a.tggno between @t_btggno and @t_etggno) 

insert into @tmp 
select '1' gno,'','','','',SUM(money),sum(chgs),sum(paysale),'','','',0,'','','','', 
'','',tggno,'','',acomp,SUM(opay),SUM(unopay),SUM(textopay) 
from @tmp 
group by acomp,tggno 

insert into @tmp 
select '2' gno,'','','','',SUM(money),sum(chgs),sum(paysale),'','','',0,'','','','', 
'','',CHAR(255),'','',acomp,SUM(opay),SUM(unopay),SUM(textopay) 
from @tmp 
where gno = 1
group by acomp

select gno,noa,noq,datea,typea, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,money),1)),4,12)) money, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,chgs),1)),4,12)) chgs, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,paysale),1)),4,12)) paysale, 
mon,part,rc2no, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,unpay),1)),4,12)) unpay, 
checkno,account,bank,indate,memo,comp2,tggno,comp,cno,acomp, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,opay),1)),4,12)) opay, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,unopay),1)),4,12)) unopay, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,textopay),1)),4,12)) textopay 
from @tmp 
order by acomp,tggno,gno;
--******************************************************************************************
z_pay4:--z-pay4
declare @t_bdate nvarchar(20)
declare @t_edate nvarchar(20)
set @t_bdate = case when '#non' = [4] then '' else [4] end
set @t_edate = case when '#non' = [5] then CHAR(255) else [5] end
declare @tmp table(
		gno nvarchar(1),
		noa nvarchar(30),
		datea nvarchar(10),
		tggno nvarchar(20),
		tgg nvarchar(30),
		bmoney float,
		opay float,
		unopay float,
		opbalance float
)
insert into @tmp 
select '0' gno,a.noa,a.datea,a.tggno,
case when len(b.nick)>0 then b.nick else left(a.comp,4) end,0,a.opay,a.unopay,a.opay-a.unopay 
from pay a 
left join tgg b on a.tggno = b.noa


select gno,noa,datea,tggno,tgg,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,bmoney),1)),4,12)) bmoney,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,opay),1)),4,12)) opay,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,unopay),1)),4,12)) unopay,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,opbalance),1)),4,12)) opbalance
from @tmp;
----------------------------------------------------------------------------------------------
z_pay6:--z_pay6
declare @t_btggno nvarchar(20)
declare @t_etggno nvarchar(20)
declare @t_xmon nvarchar(20)
set @t_btggno = case when '#non' = [6] then '' else [6] end
set @t_etggno = case when '#non' = [7] then CHAR(255) else [7] end
set @t_xmon = case when '#non' = [10] then '' else [10] end
declare @tmpa table(
		gno nvarchar(1),
		n nvarchar(20),
		datea nvarchar(10),
		mon nvarchar(10),
		tggno nvarchar(20),
		comp nvarchar(50),
		money1 float,--前期未付
		tax float,--稅額
		money3 float,--本期應付
		money4 float,--已付
		total float,--應付總計
		textopay float,--預收餘額
		noa nvarchar(20),
		cno nvarchar(20),
		driverno nvarchar(20)
)
insert into @tmpa
select '0' gno,'',b.datea,c.mon,b.tggno,
case when len(d.nick) >0 then d.nick else LEFT(b.comp,4) end,c.unpay,c.tax,b.sale,b.total,c.payed-c.unpay,b.opay-b.unopay,b.noa,c.cno,''
from pays a
left join pay b on a.noa = b.noa
left join payb c on a.rc2no = c.noa
left join tgg d on b.tggno = d.noa
union
select '0' gno,'',b.datea,b.mon,b.tggno,case when len(d.nick) >0 then d.nick else LEFT(b.comp,4) end,c.unpay,c.tax,b.sale,b.total,c.payed-c.unpay,b.opay-b.unopay,b.noa,'',c.driverno
from pays a
left join pay b on a.noa = b.noa
left join tre102 c on a.rc2no = c.noa
left join tgg d on b.tggno = d.noa
declare @tmp table(
		gno nvarchar(1),
		n int,
		datea nvarchar(10),
		mon nvarchar(10),
		tggno nvarchar(20),
		comp nvarchar(50),
		money1 float,--前期未付
		tax float,--稅額
		money3 float,--本期應付
		money4 float,--已付
		total float,--應付總計
		textopay float--預付餘額
)
insert into @tmp
select gno,ROW_NUMBER()over(order by noa,datea)as n,datea,mon,tggno,comp,money1,tax,money3,money4,total,textopay
from @tmpa
where 
(tggno between  @t_btggno and @t_etggno) and
(LEN(@t_xmon) = 0 or @t_xmon = mon)
select gno,n,datea,mon,tggno,comp,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,money1),1)),4,12)) money1,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,tax),1)),4,12)) tax,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,money3),1)),4,12)) money3,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,money4),1)),4,12)) money4,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,total),1)),4,12)) total,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,textopay),1)),4,12)) textopay
from @tmp;
----------------------------------------------------------------------------------------------------
z_pay7:--z_pay7
declare @t_btggno nvarchar(20)
declare @t_etggno nvarchar(20)
declare @t_xmon nvarchar(20)
set @t_btggno = case when '#non' = [6] then '' else [6] end
set @t_etggno = case when '#non' = [7] then CHAR(255) else [7] end
set @t_xmon = case when '#non' = [10] then '' else [10] end
declare @tmpa table(
		gno nvarchar(1),
		n nvarchar(20),
		datea nvarchar(10),
		mon nvarchar(10),
		tggno nvarchar(20),
		comp nvarchar(50),
		money1 float,--前期未付
		tax float,--稅額
		money3 float,--本期應付
		money4 float,--已付
		total float,--應付總計
		textopay float,--預收餘額
		noa nvarchar(20),
		cno nvarchar(20),
		driverno nvarchar(20)
)
insert into @tmpa
select '0' gno,'',b.datea,c.mon,b.tggno,
case when len(d.nick) >0 then d.nick else LEFT(b.comp,4) end,c.unpay,c.tax,b.sale,b.total,c.payed-c.unpay,b.opay-b.unopay,b.noa,c.cno,''
from pays a
left join pay b on a.noa = b.noa
left join payb c on a.rc2no = c.noa
left join tgg d on b.tggno = d.noa
union
select '0' gno,'',b.datea,b.mon,b.tggno,case when len(d.nick) >0 then d.nick else LEFT(b.comp,4) end,c.unpay,c.tax,b.sale,b.total,c.payed-c.unpay,b.opay-b.unopay,b.noa,'',c.driverno
from pays a
left join pay b on a.noa = b.noa
left join tre102 c on a.rc2no = c.noa
left join tgg d on b.tggno = d.noa
declare @tmp table(
		gno nvarchar(1),
		mon nvarchar(10),
		tggno nvarchar(20),
		comp nvarchar(50),
		money1 float,--前期未付
		tax float,--稅額
		money3 float,--本期應付
		money4 float,--已付
		total float,--應付總計
		textopay float--預付餘額
)
insert into @tmp
select '0'gno,mon,tggno,comp,sum(money1),sum(tax),sum(money3),sum(money4),sum(total),sum(textopay)
from @tmpa
where 
(tggno between  @t_btggno and @t_etggno) and
(LEN(@t_xmon) = 0 or @t_xmon = mon)
group by mon,tggno,comp

select gno,
ROW_NUMBER()over(order by mon,tggno)as n,mon,tggno,comp,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,money1),1)),4,12)) money1,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,tax),1)),4,12)) tax,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,money3),1)),4,12)) money3,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,money4),1)),4,12)) money4,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,total),1)),4,12)) total,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,textopay),1)),4,12)) textopay
from @tmp;