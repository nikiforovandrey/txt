z_vccadc1:--z_vccadc1 
declare @t_bxmon nvarchar(20)
declare @t_exmon nvarchar(20)
declare @t_bbmon nvarchar(20)
declare @t_ebmon nvarchaR(20)
declare @t_bemon nvarchar(20)
declare @t_eemon nvarchar(20)
declare @t_bxcustno nvarchar(20)
declare @t_excustno nvarchar(20)
declare @t_bxacomp nvarchar(20)
declare @t_exacomp nvarchar(20)
set @t_bxmon = case when '#non' = [1] then '' else [1] end
set @t_exmon = case when '#non' = [2] then CHAR(255) else [2] end
set @t_bbmon = case when '#non' = [3] then '' else [3] end
set @t_ebmon = case when '#non' = [4] then CHAR(255) else [4] end
set @t_bemon = case when '#non' = [5] then '' else [5] end
set @t_eemon = case when '#non' = [6] then CHAR(255) else [6] end
set @t_bxcustno = case when '#non' = [7] then '' else [7] end
set @t_excustno = case when '#non' = [8] then CHAR(255) else [8] end
set @t_bxacomp = case when '#non' = [9] then '' else [9] end
set @t_exacomp = case when '#non' = [10] then CHAR(255) else [10] end

declare @csor table(
[custno] nvarchar(20), 
[comp] nvarchar(90), 
[money] decimal(10,0), 
[tax] decimal(10,0), 
[t] decimal(8,3) 
) 
insert into @csor 
select max(a.custno),case when LEN(c.nick) > 0 then c.nick else LEFT(a.comp,4) end,sum(a.money),sum(a.tax),AVG(b.taxrate) 
from vcca a
left join custroutine b on a.comp = b.comp
left join cust c on a.custno = c.noa
where a.comp != '' and 
(a.mon between @t_bxmon and @t_exmon) and 
(a.custno between @t_bxcustno and @t_excustno)
group by case when LEN(c.nick) > 0 then c.nick else LEFT(a.comp,4) end


declare @result table( 
[gno] nvarchar(1), 
n nvarchar(20),
[custno] nvarchar(20), 
[comp] nvarchar(90), 
[t] nvarchar(10), 
[money] decimal(12,0), 
[tax] decimal(12,0), 
memo nvarchar(max) 
) 
insert into @result 
select '0' gno,ROW_NUMBER()over(order by comp) n,custno,comp,t,money,tax,(select memo + '' from vcca where vcca.custno=a.custno and memo!='' group by memo FOR XML PATH('')) memo 
from @csor a 
insert into @result 
select '1' gno,'',MAX(custno),'','',sum(money),sum(tax),'' 
from @result 
select gno,n,custno,comp,t,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,money),1)),4,12)) money, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,tax),1)),4,12)) tax,left(memo,31) memo 
from @result

order by gno,comp,n;
------------------------------------------------------------------------------------------------------------------------
z_vccadc2:--z_vccadc2
declare @t_bbmon nvarchar(20)
declare @t_ebmon nvarchaR(20)
declare @t_bemon nvarchar(20)
declare @t_eemon nvarchar(20)
declare @t_bxcustno nvarchar(20)
declare @t_excustno nvarchar(20)
set @t_bbmon = case when '#non' = [3] then '' else [3] end
set @t_ebmon = case when '#non' = [4] then CHAR(255) else [4] end
set @t_bemon = case when '#non' = [5] then '' else [5] end
set @t_eemon = case when '#non' = [6] then CHAR(255) else [6] end
set @t_bxcustno = case when '#non' = [7] then '' else [7] end
set @t_excustno = case when '#non' = [8] then CHAR(255) else [8] end
declare @result table( 
	gno nvarchar(1), 
	custno nvarchar(10), 
	comp nvarchar(100), 
	taxrate float, 
	money1 float, 
	tax1 float, 
	money2 float, 
	tax2 float, 
	money3 nvarchar(15) 
) 
declare @tmpa table( 
	gno nvarchar(1), 
	custno nvarchar(10), 
	comp nvarchar(100), 
	taxrate float, 
	money1 float, 
	tax1 float
) 
declare @tmpb table( 
	gno nvarchar(1), 
	custno nvarchar(10), 
	comp nvarchar(100), 
	taxrate float, 
	money1 float, 
	tax1 float 
) 
insert into @tmpa(gno,custno,comp,taxrate,money1) 
select '0',case when a.productno = 'N01' then '0000' 
when a.productno = 'N011' then '0000' else a.custno end,
case when (a.productno = 'N011') or (a.productno = 'N03') or (a.productno = 'N01') then a.product 
else b.comp end,  
isnull(c.taxrate,(
select d.taxrate from custroutines d 
left join custroutine h on h.noa = d.noa
where (d.custno = a.custno) and (d.cno = '') and (a.datea between d.bdate and d.edate) and h.productno = 'N02')),
a.money
from vcca a 
left join cust b on a.custno = b.noa 
left join custroutines c on ((a.custno = c.custno) and (a.cno = c.cno)) and (a.datea between c.bdate and c.edate) 
where (isnull(left(a.datea,6),'') between @t_bemon and @t_eemon) and (a.taxtype != '6') and (a.custno between @t_bxcustno and @t_excustno)
order by a.custno,a.comp
update @tmpa set taxrate = '5' where custno = '0000' 
update @tmpa set taxrate = '8' where (CHARINDEX('運輸部',comp) > 0) 
update @tmpa set taxrate = '100' where comp = '佣金收入' or (taxrate is null) 
insert into @tmpa(gno,custno,comp,taxrate,money1)
	select 1,custno,comp,taxrate,SUM(money1) from @tmpa where gno = 0
	group by custno,comp,taxrate
update @tmpa set tax1 = round((money1 * (taxrate/100)),2)
insert into @result
	select 0 gno,custno,comp,taxrate,money1,tax1,0,0,0 from @tmpa where gno = 1

insert into @tmpb(gno,custno,comp,taxrate,money1) 
select '0',case when a.productno = 'N01' then '0000' 
when a.productno = 'N011' then '0000' else a.custno end,
case when (a.productno = 'N011') or (a.productno = 'N03') or (a.productno = 'N01') then a.product 
else b.comp end,  
isnull(c.taxrate,(select d.taxrate from custroutines d left join custroutine e on d.noa = e.noa where (d.custno = a.custno) and (d.cno = '') and (a.datea between d.bdate and d.edate) and (e.productno = 'N02'))),
a.money
from vcca a 
left join cust b on a.custno = b.noa 
left join custroutines c on ((a.custno = c.custno) and (a.cno = c.cno)) and (a.datea between c.bdate and c.edate) 
where (isnull(left(a.datea,6),'') between @t_bbmon and @t_ebmon) and (a.taxtype != '6') and (a.custno between @t_bxcustno and @t_excustno)
order by a.custno,a.comp
update @tmpb set taxrate = '5' where custno = '0000' 
update @tmpb set taxrate = '8' where (CHARINDEX('運輸部',comp) > 0) 
update @tmpb set taxrate = '100' where comp = '佣金收入' or (taxrate is null) 
insert into @tmpb(gno,custno,comp,taxrate,money1)
	select 1,custno,comp,taxrate,SUM(money1) from @tmpb where gno = 0
	group by custno,comp,taxrate
update @tmpb set tax1 = round((money1 * (taxrate/100)),2)
declare @custno nvarchar(10)
declare @comp nvarchar(100)
declare @taxrate float
declare @w_custno nvarchar(10)
declare @money1 float
declare @tax1 float
set @w_custno = ''
set @custno = ''
set @comp = ''
set @taxrate = 0
set @money1 = 0
set @tax1 = 0
declare cursor_table cursor for
	select custno,comp,taxrate,money1,tax1 from @tmpb where gno = 1
open cursor_table
fetch next from cursor_table
into @custno,@comp,@taxrate,@money1,@tax1
while(@@FETCH_STATUS <> -1)
begin
	select @w_custno = custno from @result
		where (custno = @custno) and (comp = @comp) and (taxrate = @taxrate)
	if(@w_custno = @custno)
	begin
		update @result set money2 = @money1,tax2 = @tax1
			where (custno = @custno) and (comp = @comp) and (taxrate = @taxrate)
	end
	else
	begin
		insert into @result
			select 0,@custno,@comp,@taxrate,0,0,@money1,@tax1,0
	end
	fetch next from cursor_table
	into @custno,@comp,@taxrate,@money1,@tax1
end
close cursor_table
deallocate cursor_table
insert into @result
	select 1,'','','',SUM(money1),SUM(tax1),SUM(money2),SUM(tax2),''
	from @result
update @result set money3 = (
	case when money1 > money2 then reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,(money1 - money2)),1)),4,12)) + '↑' 
	when money1 < money2 then '(' + reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,(money2 - money1)),1)),4,12)) + ')↓'
	when money1 = money2 then '0' end
)
select
	gno,custno,comp,cast(taxrate as nvarchar) + '%' t ,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,money1),1)),4,12)) money1,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,tax1),1)),4,12)) tax1,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,money2),1)),4,12)) money2,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,tax2),1)),4,12)) tax2,
	money3,LEFT(@t_bbmon,3) byear,LEFT(@t_bemon,3) eyear
from @result
order by gno,custno,comp;
---------------------------------------------------------------------------------------------------
z_vccadc3:--z_vccadc3
declare @t_bxmon nvarchar(20) 
declare @t_exmon nvarchar(20) 
declare @t_bbmon nvarchar(20) 
declare @t_ebmon nvarchaR(20) 
declare @t_bemon nvarchar(20) 
declare @t_eemon nvarchar(20) 
declare @t_bxcustno nvarchar(20) 
declare @t_excustno nvarchar(20) 
declare @t_bxacomp nvarchar(20) 
declare @t_exacomp nvarchar(20) 
set @t_bxmon = case when '#non' = [1] then '' else [1] end
set @t_exmon = case when '#non' = [2] then CHAR(255) else [2] end
set @t_bbmon = case when '#non' = [3] then '' else [3] end
set @t_ebmon = case when '#non' = [4] then CHAR(255) else [4] end
set @t_bemon = case when '#non' = [5] then '' else [5] end
set @t_eemon = case when '#non' = [6] then CHAR(255) else [6] end
set @t_bxcustno = case when '#non' = [7] then '' else [7] end
set @t_excustno = case when '#non' = [8] then CHAR(255) else [8] end
set @t_bxacomp = case when '#non' = [9] then '' else [9] end
set @t_exacomp = case when '#non' = [10] then CHAR(255) else [10] end
declare @result table( 
gno nvarchar(1), 
acomp nvarchar(20),  
dime int, 
custno nvarchar(20), 
comp nvarchar(50), 
t nvarchar(20), 
moneys int, 
tax int, 
memo nvarchar(200), 
mon nvarchar(6),
worker nvarchar(20) 
) 
insert into @result 
select '0' gno,case when LEN(b.nick)> 0 then b.nick else LEFT(a.acomp,4) end,c.no2,a.custno,case when len(e.nick) > 0 then e.nick else  left(a.comp,4) end,d.taxrate,a.money,a.tax,a.memo,a.mon,a.worker
from vcca a
left join acomp b on a.cno = b.noa
left join vccars c on a.noa between c.binvono and c.einvono
left join custroutine d on a.custno = d.custno
left join cust e on a.custno = e.noa
where (a.mon between @t_bxmon and @t_exmon) and
(a.acomp between @t_bxacomp and @t_exacomp)

insert into @result 
select '1' gno,acomp,'','','',0,SUM(moneys),SUM(tax),'','',''
from @result 
group by acomp

insert into @result 
select '2' gno,max(acomp),'','','',0,SUM(moneys),SUM(tax),'','',''
from @result 
where gno != 1 

select gno,acomp,dime,custno,comp,t,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,moneys),1)),4,12)) moneys, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,tax),1)),4,12)) tax, 
memo,mon,worker 
from @result 
order by acomp,gno;
---------------------------------------------------------------------------------------------------------------------------------
z_vccadc4:--z_vccadc4
declare @t_bxmon nvarchar(20) 
declare @t_exmon nvarchar(20) 
declare @t_bbmon nvarchar(20) 
declare @t_ebmon nvarchaR(20) 
declare @t_bemon nvarchar(20) 
declare @t_eemon nvarchar(20) 
declare @t_bxcustno nvarchar(20) 
declare @t_excustno nvarchar(20) 
declare @t_bxacomp nvarchar(20) 
declare @t_exacomp nvarchar(20) 
set @t_bxmon = case when '#non' = [1] then '' else [1] end
set @t_exmon = case when '#non' = [2] then CHAR(255) else [2] end
set @t_bbmon = case when '#non' = [3] then '' else [3] end
set @t_ebmon = case when '#non' = [4] then CHAR(255) else [4] end
set @t_bemon = case when '#non' = [5] then '' else [5] end
set @t_eemon = case when '#non' = [6] then CHAR(255) else [6] end
set @t_bxcustno = case when '#non' = [7] then '' else [7] end
set @t_excustno = case when '#non' = [8] then CHAR(255) else [8] end
set @t_bxacomp = case when '#non' = [9] then '' else [9] end
set @t_exacomp = case when '#non' = [10] then CHAR(255) else [10] end
declare @result table( 
gno nvarchar(1), 
acomp nvarchar(20),  
dime int, 
custno nvarchar(20), 
comp nvarchar(50), 
t nvarchar(20), 
moneys int, 
tax int, 
memo nvarchar(200), 
mon nvarchar(6),
worker nvarchar(20) 
) 
insert into @result 
select '0' gno,case when LEN(b.nick)> 0 then b.nick else LEFT(a.acomp,4) end,c.no2,a.custno,case when len(e.nick) > 0 then e.nick else  left(a.comp,4) end,d.taxrate,a.money,a.tax,a.memo,a.mon,a.worker
from vcca a
left join acomp b on a.cno = b.noa
left join vccars c on a.noa between c.binvono and c.einvono
left join custroutine d on a.custno = d.custno
left join cust e on a.custno = e.noa
where (a.mon between @t_bxmon and @t_exmon) and
(a.custno between @t_bxcustno and @t_excustno)

insert into @result 
select '1' gno,'','','',comp,0,SUM(moneys),SUM(tax),'','',''
from @result 
group by comp

insert into @result 
select '2' gno,'','','',max(comp),0,SUM(moneys),SUM(tax),'','',''
from @result 
where gno != 1 

select gno,acomp,dime,custno,comp,t,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,moneys),1)),4,12)) moneys, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,tax),1)),4,12)) tax, 
memo,mon,worker 
from @result 
order by comp,gno;

z_vccadc5:--z_vccadc5
declare @t_accy nvarchar(10)
declare @t_bmon nvarchar(10)
declare @t_emon nvarchar(10)
declare @i int 
declare @countrecord int
declare @acomp nvarchar(50)
declare @custno nvarchar(10)
declare @money float
declare @title nvarchar(100)
set @t_accy = '[11]'
set @t_bmon = case when '#non'=[1] then @t_accy+'/01' else [1] end 
set @t_emon = case when '#non'=[2] then @t_accy+'/12' else [2] end 
set @i = 0
set @countrecord = 0
set @acomp = ''
set @custno = ''
set @money = 0
set @title = (
				case when LEFT(@t_bmon,3) = LEFT(@t_emon,3) then LEFT(@t_bmon,3) + '年' + RIGHT(@t_bmon,2) + '-' + RIGHT(@t_emon,2) + '月發票開立明細表（公司別）'
				when LEFT(@t_bmon,3) != LEFT(@t_emon,3) then REPLACE(@t_bmon,'/','年') + '月-' + REPLACE(@t_emon,'/','年') + '月發票開立明細表（公司別）' end
			  )
declare @tmp table(
	gno nvarchar(1),
	idno int identity(0,1),
	noa nvarchar(20),
	acomp nvarchar(50),
	ticketno nvarchar(10),
	custno nvarchar(10),
	comp nvarchar(100),
	taxrates float,
	money float,
	tax float
)
declare @tmpa table(
	gno nvarchar(1),
	idno int identity(0,1),
	orderby int,
	acomp nvarchar(50),
	ticketno nvarchar(10),
	custno nvarchar(10),
	comp nvarchar(100),
	taxrates float,
	money float,
	tax float
)
declare @tmpb table(
	acomp nvarchar(50),
	custno nvarchar(10),
	comp nvarchar(100),
	money float
)
insert into @tmp
	select '0',a.noa,c.nick,b.no2,
	case when a.productno = 'N01' then '0000' 
	when a.productno = 'N011' then '0000' else a.custno end,
	case when (a.productno = 'N011') or (a.productno = 'N03') then a.product
	when (a.productno = 'N01') then (case when a.memo != '' then a.memo else a.product end)
	else (case when (a.serial = '84448308') and (CHARINDEX('運輸部',d.comp) > 0)  then ltrim(rtrim(d.comp)) + '-誼林' 
		when (h.buyer is not null) and (CHARINDEX('運輸部',d.comp) > 0)  then ltrim(rtrim(d.comp)) + '-' + h.buyer else ltrim(rtrim(d.comp)) end) end,
	isnull(e.taxrate,(
	select f.taxrate from custroutines f 
	left join custroutine h on h.noa = f.noa
	where (f.custno = a.custno) and (f.cno = '') and (a.datea between f.bdate and f.edate) and h.productno = 'N02'))
	,a.money,a.tax
	from vcca a
	left join vccars b on (a.noa between binvono and einvono)
	left join acomp c on (a.acomp = c.acomp)
	left join cust d on (a.custno = d.noa)
	left join custroutines e on ((a.custno = e.custno) and (a.cno = e.cno)) and (a.datea between e.bdate and e.edate)
	left join custo g on g.mon =  left(a.datea,6)
	left join custos h on (g.noa =  h.noa) and ((a.buyerno = h.buyerno) or (a.buyer = h.buyer) )
	where (left(a.datea,6) between @t_bmon and @t_emon) and (a.taxtype != '6')
---折讓單
insert into @tmp
	select '0',a.noa + '-1',c.nick,'0',
	case when a.productno = 'N01' then '0000' 
	when a.productno = 'N011' then '0000' else g.custno end,d.comp,
	isnull(e.taxrate,(select taxrate from custroutines f where (g.custno = f.custno) and (f.cno = '') and (b.datea between f.bdate and f.edate)))
	,(a.total)*(-1),''
	from vccbs a
	left join vccb b on a.noa = b.noa
	left join vcca g on a.invono = g.noa
	left join acomp c on (g.acomp = c.acomp)
	left join cust d on (g.custno = d.noa)
	left join custroutines e on ((g.custno = e.custno) and (g.cno = e.cno) and (b.datea between e.bdate and e.edate))
	where (left(b.datea,6) between @t_bmon and @t_emon)



--計算每間公司的每個人一整年總計(調整稅率用)
insert into @tmpb
	select b.nick,a.custno,a.comp,sum(a.money)
	from vcca a
	left join acomp b on (a.acomp = b.acomp)
	where (left(a.datea,3) between left(@t_bmon,3) and left(@t_emon,3)) and (taxtype != '6')
	group by b.nick,a.custno,a.comp
---超過3000萬+1
select @countrecord = COUNT(*) from @tmp
while(@i < @countrecord)
begin
	select @acomp = acomp from @tmp where idno = @i
	select @custno = custno from @tmp where idno = @i
	select @money = money from @tmpb where ((acomp = @acomp) and (custno = @custno))
	update @tmp set taxrates += 1 where @money > 30000000 and idno = @i
	set @i +=1
end
---調整稅率
update @tmp set taxrates = '5' where custno = '0000' 
update @tmp set taxrates = '8' where (CHARINDEX('運輸部',comp) > 0)
update @tmp set taxrates = '100' where comp = '佣金收入'  or (taxrates is null)

update @tmp set tax = round((money*taxrates)/100,0) where custno != '0000'
insert into @tmpa 
	select '0',0,acomp,ticketno,custno,comp,taxrates,sum(money),
	case when custno != '0000' then round((sum(money)*taxrates)/100,0)
	else SUM(tax) end tax
	from @tmp 
	group by ticketno,acomp,taxrates,custno,comp 
	order by acomp,ticketno 
insert into @tmpa(gno,orderby,acomp,money,tax)
	select '1',0,acomp,sum(money),sum(tax) from @tmpa
	where gno = 0
	group by acomp 
insert into @tmpa(gno,orderby,money,tax)
	select '2',1,SUM(money),sum(tax) from @tmpa
	where gno = 1
select
	gno,acomp,cast(ticketno as int) ticketno,custno,comp,cast(taxrates as nvarchar) + '%' taxrates,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,money),1)),4,12)) money,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,tax),1)),4,12)) tax,@title title
from @tmpa order by orderby,acomp,gno,ticketno,custno,comp desc,taxrates;

z_vccadc6:--z_vccadc6
declare @t_accy nvarchar(10)
declare @t_bmon nvarchar(10)
declare @t_emon nvarchar(10)
declare @t_bxcustno nvarchar(20) 
declare @t_excustno nvarchar(20) 
declare @i int 
declare @countrecord int
declare @acomp nvarchar(50)
declare @custno nvarchar(10)
declare @money float
declare @title nvarchar(100)
set @t_accy = '[11]'
set @t_bmon = case when '#non'=[1] then @t_accy+'/01' else [1] end 
set @t_emon = case when '#non'=[2] then @t_accy+'/12' else [2] end 
set @t_bxcustno = case when '#non' = [7] then '' else [7] end
set @t_excustno = case when '#non' = [8] then CHAR(255) else [8] end
set @i = 0
set @countrecord = 0
set @acomp = ''
set @custno = ''
set @money = 0
set @title =(
				case when LEFT(@t_bmon,3) = LEFT(@t_emon,3) then LEFT(@t_bmon,3) + '年' + RIGHT(@t_bmon,2) + '-' + RIGHT(@t_emon,2) + '月發票開立明細表（客戶別）'
				when LEFT(@t_bmon,3) != LEFT(@t_emon,3) then REPLACE(@t_bmon,'/','年') + '月-' + REPLACE(@t_emon,'/','年') + '月發票開立明細表（客戶別）' end
			)
declare @tmp table(
	gno nvarchar(1),
	idno int identity(0,1),
	noa nvarchar(20),
	acomp nvarchar(50),
	ticketno nvarchar(10),
	custno nvarchar(10),
	comp nvarchar(100),
	taxrates float,
	money float,
	tax float
)
declare @tmpa table(
	gno nvarchar(1),
	idno int identity(0,1),
	orderby int,
	acomp nvarchar(50),
	ticketno nvarchar(10),
	custno nvarchar(10),
	comp nvarchar(100),
	taxrates float,
	money float,
	tax float
)
declare @tmpb table(
	acomp nvarchar(50),
	custno nvarchar(10),
	comp nvarchar(100),
	money float
)
insert into @tmp
	select '0',a.noa,c.nick,b.no2,
	case when a.productno = 'N01' then '0000' 
	when a.productno = 'N011' then '0000' else a.custno end,
	case when (a.productno = 'N011') or (a.productno = 'N03') then a.product
	when (a.productno = 'N01') then (case when a.memo != '' then a.memo else a.product end)
	else (
		case when (a.serial = '84448308') and (CHARINDEX('運輸部',d.comp) > 0) then ltrim(rtrim(d.comp)) + '-誼林' 
		else ltrim(rtrim(d.comp)) end) end,
	isnull(e.taxrate,(
	select f.taxrate from custroutines f 
	left join custroutine h on h.noa = f.noa
	where (f.custno = a.custno) and (f.cno = '') and (a.datea between f.bdate and f.edate) and h.productno = 'N02'))
	,a.money,a.tax
	from vcca a
	left join vccars b on (a.noa between binvono and einvono)
	left join acomp c on (a.acomp = c.acomp)
	left join cust d on (a.custno = d.noa)
	left join custroutines e on ((a.custno = e.custno) and (a.cno = e.cno)) and (a.datea between e.bdate and e.edate)
	where (left(a.datea,6) between @t_bmon and @t_emon) and (a.taxtype != '6') and (a.custno between @t_bxcustno and @t_excustno)
---折讓單
insert into @tmp
	select '0',a.noa + '-1',c.nick,'0',
	case when a.productno = 'N01' then '0000' 
	when a.productno = 'N011' then '0000' else g.custno end,d.comp,
	isnull(e.taxrate,(select taxrate from custroutines f where (g.custno = f.custno) and (f.cno = '') and (b.datea between f.bdate and f.edate)))
	,(a.total)*(-1),''
	from vccbs a
	left join vccb b on a.noa = b.noa
	left join vcca g on a.invono = g.noa
	left join acomp c on (g.acomp = c.acomp)
	left join cust d on (g.custno = d.noa)
	left join custroutines e on ((g.custno = e.custno) and (g.cno = e.cno) and (b.datea between e.bdate and e.edate))
	where (left(b.datea,6) between @t_bmon and @t_emon) and (a.custno between @t_bxcustno and @t_excustno)
--計算每間公司的每個人一整年總計(調整稅率用)
insert into @tmpb
	select b.nick,a.custno,a.comp,sum(a.money)
	from vcca a
	left join acomp b on (a.acomp = b.acomp)
	where (left(a.datea,3) between left(@t_bmon,3) and left(@t_emon,3)) and (taxtype != '6') and (a.custno between @t_bxcustno and @t_excustno)
	group by b.nick,a.custno,a.comp
---超過3000萬+1
select @countrecord = COUNT(*) from @tmp
while(@i < @countrecord)
begin
	select @acomp = acomp from @tmp where idno = @i
	select @custno = custno from @tmp where idno = @i
	select @money = money from @tmpb where ((acomp = @acomp) and (custno = @custno))
	update @tmp set taxrates += 1 where @money > 30000000 and idno = @i
	set @i +=1
end
---調整稅率
update @tmp set taxrates = '5' where custno = '0000' 
update @tmp set taxrates = '8' where (CHARINDEX('運輸部',comp) > 0) 
update @tmp set taxrates = '100' where comp = '佣金收入'  or (taxrates is null)
update @tmp set tax = round((money*taxrates)/100,0) where custno != '0000'
insert into @tmpa
	select '0',0,acomp,ticketno,custno,comp,taxrates,SUM(money),
	case when custno != '0000' then round((sum(money)*taxrates)/100,0)
	else SUM(tax) end tax
	from @tmp
	group by custno,comp,acomp,ticketno,taxrates
	order by custno
insert into @tmpa(gno,orderby,custno,comp,money,tax)
	select '1',0,custno,'資售',SUM(money),SUM(tax)
	from @tmpa
	where custno = '0000'
	group by custno
insert into @tmpa(gno,orderby,custno,comp,money,tax)
	select '1',0,custno,comp,SUM(money),SUM(tax)
	from @tmpa
	where custno != '0000'
	group by custno,comp
insert into @tmpa(gno,orderby,money,tax)
	select '2',1,SUM(money),SUM(tax)
	from @tmpa
	where gno = 1
select
	gno,orderby,acomp,cast(ticketno as int) ticketno,custno,comp,cast(taxrates as nvarchar) + '%' taxrates,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,money),1)),4,12)) money,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,tax),1)),4,12)) tax,@title title
from @tmpa order by orderby,custno,comp,gno,acomp,ticketno desc,taxrates;

z_vccadc01:--z_vccadc01
	SET QUOTED_IDENTIFIER OFF
	declare @cmd nvarchar(max)
	declare @t_accy nvarchar(10)
	declare @t_bmon nvarchar(10)
	declare @t_emon nvarchar(10)
	declare @t_bcustno nvarchar(30)
	declare @t_ecustno nvarchar(30)
	declare @t_cno nvarchar(max)
	
	set @t_accy = '[11]'
	set @t_bmon = case when '#non'=[1] then '' else [1] end
	set @t_emon = case when '#non'=[2] then CHAR(255) else [2] end
	set @t_bcustno = case when '#non'=[7] then '' else [7] end
	set @t_ecustno = case when '#non'=[8] then CHAR(255) else [8] end
	set @t_cno = case when '#non'=[12] then '' else [12] end
	---------------------------------------------------------------
	declare @string nvarchar(max)
	declare @n int
	IF OBJECT_ID('tempdb..#acomp')is not null
	BEGIN
		set @cmd = 'drop table #acomp'
		EXECUTE sp_executesql @cmd
	END
	create table #acomp(
		noa nvarchar(20)
	)
	set @string = @t_cno
	while(1=1)
	begin
		set @n = PATINDEX('%,%',@string)
		if @n=0
		begin
			if LEN(@string)>0
			begin
				insert into #acomp select @string
			end
			break
		end
		insert into #acomp select LEFT(@string,@n-1)	
		set @string = SUBSTRING(@string,@n+1,LEN(@string)-@n)
	end
	------------------------------------------------------------
	declare @tmp table(
		gno nvarchar(3),
		noa nvarchar(20),
		no2 nvarchar(10),
		cno nvarchar(20),
		acomp nvarchar(max),
		datea nvarchar(10),
		invono nvarchar(10),
		serial nvarchar(8),
		buyerno nvarchar(20),
		buyer nvarchar(40),
		custno nvarchar(20),
		cust nvarchar(40),
		[money] float,
		tax float,
		total float,
		memo nvarchar(max)
	)
	declare @noa nvarchar(20)
	declare @no2 nvarchar(10)
	declare @cno nvarchar(20)
	declare @acomp nvarchar(max)
	declare @datea nvarchar(10)
	declare @binvono nvarchar(10)
	declare @einvono nvarchar(10)
	declare @taxtype nvarchar(10)
	declare @invono nvarchar(10)
	declare @serial nvarchar(8)
	declare @buyerno nvarchar(20)
	declare @buyer nvarchar(40)
	declare @custno nvarchar(20)
	declare @cust nvarchar(40)
	declare @money float
	declare @tax float
	declare @total float
	declare @memo nvarchar(max)
	
	declare @m int
	declare cursor_table cursor for
	select a.noa,b.no2,a.cno,a.acomp+''+b.binvono+'~'+b.einvono ,b.binvono,b.einvono 
	from vccar a
	left join vccars b on a.noa=b.noa
	left join #acomp c on a.cno=c.noa
	where (c.noa is not null) and len(b.binvono)=10
	and ((LEFT(a.bdate,6) between @t_bmon and @t_emon) or (LEFT(a.edate,6) between @t_bmon and @t_emon))
	open cursor_table
	fetch next from cursor_table
	into @noa,@no2,@cno,@acomp,@binvono,@einvono
	while(@@FETCH_STATUS <> -1)
	begin
		select @n = 0, @m = 0
		while(@n<50)
		begin	
			set @invono = SUBSTRING(@binvono,1,8)+ right('0'+cast(cast(SUBSTRING(@binvono,9,2) as int)+@n as nvarchar),2)
			select @serial='',@buyerno='',@buyer='',@custno='',@cust='',@money=0,@tax=0,@total=0,@memo='',@datea=''
			--若有指定客戶 只顯示那個害戶
			if exists(select noa from vcca where noa=@invono and (len(@t_bcustno)=0 or (len(@t_bcustno)>0 and custno between @t_bcustno and @t_ecustno)))
			begin
				select @taxtype=a.taxtype, @serial=a.serial,@buyerno=a.buyerno,@buyer=a.buyer
				,@custno=a.custno,@cust=case when len(isnull(b.nick,''))>0 then b.nick else left(a.comp,4)end
				,@money=a.[money],@tax=a.tax,@total=a.total,@memo=a.memo,@datea=a.datea
				from vcca a
				left join cust b on a.custno=b.noa
				where a.noa=@invono
				if(@taxtype='6')
					insert into @tmp(gno,noa,no2,cno,acomp,invono,serial,memo)values('0',@noa,@no2,@cno,@acomp,@invono,'作廢',@memo)
				else
					insert into @tmp(gno,noa,no2,cno,acomp,datea,invono,serial,buyerno,buyer,custno,cust,[money],tax,total,memo)
					values('0',@noa,@no2,@cno,@acomp,@datea,@invono,@serial,@buyerno,@buyer,@custno,@cust,@money,@tax,@total,@memo)
				set @m = @m + 1
			end
			else
			begin
				if len(@t_bcustno)=0
				begin
					insert into @tmp(gno,noa,no2,cno,acomp,invono)values('0',@noa,@no2,@cno,@acomp,@invono)
					set @m = @m + 1
				end
			end
			set @n = @n + 1
		end
		if(@m>0)
		begin
			select @money=0,@tax=0,@total=0
			select @money=SUM(ISNULL([money],0)),@tax=SUM(ISNULL(tax,0)),@total=SUM(ISNULL(total,0)) from @tmp where noa=@noa and no2=@no2
			insert into @tmp(gno,noa,no2,cno,acomp,[money],tax,total)values('1',@noa,@no2,@cno,@acomp,@money,@tax,@total)
		end
		fetch next from cursor_table
		into @noa,@no2,@cno,@acomp,@binvono,@einvono
	end
	close cursor_table
	deallocate cursor_table
	
	select * 
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,[money]),1)),4,12)) mm
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,[tax]),1)),4,12)) tx
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,[total]),1)),4,12)) tt
	from @tmp order by noa,no2,gno;
	
z_vcca02:--z_vcca02
	SET QUOTED_IDENTIFIER OFF
	declare @cmd nvarchar(max)
	declare @t_accy nvarchar(10)
	declare @t_bmon nvarchar(10)
	declare @t_emon nvarchar(10)
	declare @t_cno nvarchar(max)
	
	set @t_accy = '[11]'
	set @t_bmon = case when '#non'=[1] then '' else [1] end
	set @t_emon = case when '#non'=[2] then CHAR(255) else [2] end
	set @t_cno = case when '#non'=[12] then '' else [12] end
	---------------------------------------------------------------
	declare @string nvarchar(max)
	declare @n int
	IF OBJECT_ID('tempdb..#acomp')is not null
	BEGIN
		set @cmd = 'drop table #acomp'
		EXECUTE sp_executesql @cmd
	END
	create table #acomp(
		noa nvarchar(20)
	)
	set @string = @t_cno
	while(1=1)
	begin
		set @n = PATINDEX('%,%',@string)
		if @n=0
		begin
			if LEN(@string)>0
			begin
				insert into #acomp select @string
			end
			break
		end
		insert into #acomp select LEFT(@string,@n-1)	
		set @string = SUBSTRING(@string,@n+1,LEN(@string)-@n)
	end
	------------------------------------------------------------
	declare @tmp table(
		gno nvarchar(3),
		noa nvarchar(20),
		no2 nvarchar(10),
		cno nvarchar(20),
		acomp nvarchar(20),
		binvono nvarchar(10),
		einvono nvarchar(10),
		[money] float,
		tax float,
		total float,
		memo nvarchar(max)
	)
	declare @noa nvarchar(20)
	declare @no2 nvarchar(10)
	declare @cno nvarchar(20)
	declare @acomp nvarchar(40)
	declare @binvono nvarchar(10)
	declare @einvono nvarchar(10)
	declare @invono nvarchar(10)
	declare @taxtype nvarchar(10)
	declare @money float
	declare @tax float
	declare @total float
	
	declare @i int
	declare @j int
	
	declare cursor_table cursor for
	select a.noa,b.no2,a.cno,d.nick,b.binvono,b.einvono 
	from vccar a
	left join vccars b on a.noa=b.noa
	left join #acomp c on a.cno=c.noa
	left join acomp d on a.cno=d.noa
	where (c.noa is not null) and len(b.binvono)=10
	and ((LEFT(a.bdate,6) between @t_bmon and @t_emon) or (LEFT(a.edate,6) between @t_bmon and @t_emon))
	open cursor_table
	fetch next from cursor_table
	into @noa,@no2,@cno,@acomp,@binvono,@einvono
	while(@@FETCH_STATUS <> -1)
	begin
		select @n=0,@i=0,@j=0,@money=0,@tax=0,@total=0
		while(@n<50)
		begin	
			set @invono = SUBSTRING(@binvono,1,8)+ right('0'+cast(cast(SUBSTRING(@binvono,9,2) as int)+@n as nvarchar),2)
			select @taxtype=taxtype,@money=@money+ISNULL([money],0),@tax=@tax+ISNULL([tax],0),@total=@total+ISNULL([total],0) from vcca where noa=@invono		
			if exists(select noa from vcca where noa=@invono)
				if(@taxtype!='6')
					set @i = @i + 1
				else
					set @j = @j + 1
			set @n = @n + 1
		end	
		set @cmd = case when @i<10 then '&nbsp'+CHAR(59)+'&nbsp'+CHAR(59)+CAST(@i as varchar) else CAST(@i as varchar) end + '張'
		if(@j>0)
		begin
			set @cmd = @cmd + '&nbsp'+CHAR(59)+'&nbsp'+CHAR(59)+ '作廢：'+case when @j<10 then '&nbsp'+CHAR(59)+'&nbsp'+CHAR(59)+CAST(@j as varchar) else CAST(@j as varchar) end + '張'
		end
		insert into @tmp(gno,noa,no2,cno,acomp,binvono,einvono,[money],tax,total,memo)
		values('0',@noa,@no2,@cno,@acomp,@binvono,@einvono,isnull(@money,0),isnull(@tax,0),isnull(@total,0),@cmd)
		
		fetch next from cursor_table
		into @noa,@no2,@cno,@acomp,@binvono,@einvono
	end
	close cursor_table
	deallocate cursor_table
	
	declare cursor_table cursor for
	select cno,sum([money]),sum(tax),sum(total) from @tmp group by cno
	open cursor_table
	fetch next from cursor_table
	into @cno,@money,@tax,@total
	while(@@FETCH_STATUS <> -1)
	begin
		insert into @tmp(gno,cno,[money],tax,total)values('1',@cno,@money,@tax,@total)
		fetch next from cursor_table
		into @cno,@money,@tax,@total
	end
	close cursor_table
	deallocate cursor_table
	
	select * 
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,[money]),1)),4,12)) mm
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,[tax]),1)),4,12)) tx
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,[total]),1)),4,12)) tt
	from @tmp order by cno,gno,noa,no2;

z_vccadc07:--z_vccadc07
declare @t_bdate nvarchar(10) 
declare @t_edate nvarchar(10) 
set @t_bdate = case when '#non'=[1] then '' else [1] end 
set @t_edate = case when '#non'=[2] then CHAR(255) else [2] end 
declare @tmp table(
	gno nvarchar(1),
	idno int,
	acomp nvarchar(100),
	cno nvarchar(35),
	comp nvarchar(90),
	abinvono nvarchar(50),
	aeinvono nvarchar(50),
	no2 nvarchar(10),
	bbinvono nvarchar(50),
	beinvono nvarchar(50),
	money float,
	taxrate float,
	tax float
)

insert into @tmp
	select '0','0',a.acomp,b.custno,b.comp,a.binvono,a.einvono,b.no2,b.binvono,b.einvono,0,
	isnull(e.taxrate,(select taxrate from custroutines f where (f.custno = b.custno) and (f.cno = '') and ((a.bdate between f.bdate and f.edate) or (a.edate between f.bdate and f.edate))))	
	,0 from vccar a 
	left join vccars b on a.noa = b.noa
	left join custroutines e on ((b.custno = e.custno) and (a.cno = e.cno)) and ((a.bdate between e.bdate and e.edate) or (a.edate between e.bdate and e.edate))
	where
	(left(a.bdate,6) between @t_bdate and @t_edate) or
	(left(a.edate,6) between @t_bdate and @t_edate)
	order by b.noa,b.no2
update @tmp set taxrate = 5 where cno = 'H249'
--update @tmp set taxrate = 8.5 where taxrate is null

declare @noa nvarchar(10)
declare @money float
declare cursor_table cursor for
	select noa,money from vcca
open cursor_table
fetch next from cursor_table
into @noa,@money
while(@@FETCH_STATUS <> -1)
begin
	update @tmp set money += @money where @noa between bbinvono and beinvono
	fetch next from cursor_table
	into @noa,@money
end
close cursor_table
deallocate cursor_table
update @tmp set tax = round((money * (taxrate/100)),2)
insert into @tmp(gno,idno,acomp,money,tax)
	select 1,0,acomp,SUM(money),SUM(tax) from @tmp
	group by acomp
insert into @tmp(gno,idno,money,tax)
	select 2,2,SUM(money),SUM(tax) from @tmp where gno = 0
	
select
	gno,idno,acomp,cno,comp cmp,no2,bbinvono,beinvono,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,money),1)),4,12)) money,
	taxrate tar,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,tax),1)),4,12)) tax
from @tmp order by idno,acomp,gno;

z_vccadc08:--z_vccadc08
declare @t_year nvarchar(10) 
set @t_year = case when '#non'=[15] then '101' else [15] end 
declare @tmp table(
	gno nvarchar(1),
	idno int identity(1,1),
	cno nvarchar(35),
	comp nvarchar(90),
	mon12_money float,
	mon12_fixed float,
	mon34_money float,
	mon34_fixed float,
	mon56_money float,
	mon56_fixed float,
	mon78_money float,
	mon78_fixed float,
	mon910_money float,
	mon910_fixed float,
	mon1112_money float,
	mon1112_fixed float,
	otherincome float,--其他收入
	claimmoney float,--理賠收入 
	total float,
	lastmoney float,
	interestmoney float,--利息
	mayinterest float, --預估增加利息
	lastdeinter float --餘 額-利息
)
declare @notsee nvarchar(200)
set @notsee = '00,25,26,93,98,99'
insert into @tmp 
	select '0',noa,nick,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	from acomp
	where charindex(noa,@notsee) = 0
declare @cno nvarchar(35)
declare @money float
declare @productno nvarchar(10)
declare @datea nvarchar(10)
declare @datea_new nvarchar(10)
set @cno = ''
set @money = 0
set @productno = ''
set @datea = ''
declare cursor_table cursor for
	select cno,money,productno,datea from vcca
	where
		left(datea,3) = @t_year and
		taxtype != 6
	order by datea
open cursor_table
fetch next from cursor_table
into @cno,@money,@productno,@datea
while(@@FETCH_STATUS <> -1)
begin
	set @datea_new = left(right(ltrim(rtrim(@datea)),5),2)
	if(@datea_new = '01' or @datea_new = '02')
	begin
		update @tmp set mon12_money += @money where cno = @cno
		if(@productno = 'N01' or @productno = 'N011')
			update @tmp set mon12_fixed += @money where cno = @cno
	end
	else if(@datea_new = '03' or @datea_new = '04')
	begin
		update @tmp set mon34_money += @money where cno = @cno
		if(@productno = 'N01' or @productno = 'N011')
			update @tmp set mon34_fixed += @money where cno = @cno
	end
	else if(@datea_new = '05' or @datea_new = '06')
	begin
		update @tmp set mon56_money += @money where cno = @cno
		if(@productno = 'N01' or @productno = 'N011')
			update @tmp set mon56_fixed += @money where cno = @cno
	end
	else if(@datea_new = '07' or @datea_new = '08')
	begin
		update @tmp set mon78_money += @money where cno = @cno
		if(@productno = 'N01' or @productno = 'N011')
			update @tmp set mon78_fixed += @money where cno = @cno
	end
	else if(@datea_new = '09' or @datea_new = '10')
	begin
		update @tmp set mon910_money += @money where cno = @cno
		if(@productno = 'N01' or @productno = 'N011')
			update @tmp set mon910_fixed += @money where cno = @cno
	end
	else if(@datea_new = '11' or @datea_new = '12')
	begin
		update @tmp set mon1112_money += @money where cno = @cno
		if(@productno = 'N01' or @productno = 'N011')
			update @tmp set mon1112_fixed += @money where cno = @cno
	end
	fetch next from cursor_table
	into @cno,@money,@productno,@datea
end
close cursor_table
deallocate cursor_table
declare cursor_table cursor for
	select cno,money,datea from vccb
	where left(datea,3) = @t_year
	order by datea
open cursor_table
fetch next from cursor_table
into @cno,@money,@datea
while(@@FETCH_STATUS <> -1)
begin
	set @datea_new = left(right(@datea,5),2)
	set @money = @money * (-1)
	if(@datea_new = '01' or @datea_new = '02')
	begin
		update @tmp set mon12_money += @money where cno = @cno
	end
	else if(@datea_new = '03' or @datea_new = '04')
	begin
		update @tmp set mon34_money += @money where cno = @cno
	end
	else if(@datea_new = '05' or @datea_new = '06')
	begin
		update @tmp set mon56_money += @money where cno = @cno
	end
	else if(@datea_new = '07' or @datea_new = '08')
	begin
		update @tmp set mon78_money += @money where cno = @cno
	end
	else if(@datea_new = '09' or @datea_new = '10')
	begin
		update @tmp set mon910_money += @money where cno = @cno
	end
	else if(@datea_new = '11' or @datea_new = '12')
	begin
		update @tmp set mon1112_money += @money where cno = @cno
	end
	fetch next from cursor_table
	into @cno,@money,@datea
end
close cursor_table
deallocate cursor_table
update @tmp set total = (mon12_money - mon12_fixed) + 
						(mon34_money - mon34_fixed) + 
						(mon56_money - mon56_fixed) + 
						(mon78_money - mon78_fixed) + 
						(mon910_money - mon910_fixed) + 
						(mon1112_money - mon1112_fixed)
update @tmp set lastmoney = 30000000 - total
update @tmp set lastdeinter = lastmoney - interestmoney - mayinterest
insert into @tmp
	select '1','','',SUM(mon12_money),SUM(mon12_fixed),SUM(mon34_money),SUM(mon34_fixed),
	SUM(mon56_money),SUM(mon56_fixed),
	SUM(mon78_money),SUM(mon78_fixed),
	SUM(mon910_money),SUM(mon910_fixed),
	SUM(mon1112_money),SUM(mon1112_fixed),SUM(otherincome),sum(claimmoney),
	sum(total),sum(lastmoney),sum(interestmoney),sum(mayinterest),sum(lastdeinter)
	from @tmp
select
	gno,idno,cno,comp,
	reverse(substring(reverse(convert(nvarchar(20),CONVERT(money,mon12_money),1)),4,12)) mon12_money,
	reverse(substring(reverse(convert(nvarchar(20),CONVERT(money,mon12_fixed),1)),4,12)) mon12_fixed,
	reverse(substring(reverse(convert(nvarchar(20),CONVERT(money,mon34_money),1)),4,12)) mon34_money,
	reverse(substring(reverse(convert(nvarchar(20),CONVERT(money,mon34_fixed),1)),4,12)) mon34_fixed,
	reverse(substring(reverse(convert(nvarchar(20),CONVERT(money,mon56_money),1)),4,12)) mon56_money,
	reverse(substring(reverse(convert(nvarchar(20),CONVERT(money,mon56_fixed),1)),4,12)) mon56_fixed,
	reverse(substring(reverse(convert(nvarchar(20),CONVERT(money,mon78_money),1)),4,12)) mon78_money,
	reverse(substring(reverse(convert(nvarchar(20),CONVERT(money,mon78_fixed),1)),4,12)) mon78_fixed,
	reverse(substring(reverse(convert(nvarchar(20),CONVERT(money,mon910_money),1)),4,12)) mon910_money,
	reverse(substring(reverse(convert(nvarchar(20),CONVERT(money,mon910_fixed),1)),4,12)) mon910_fixed,
	reverse(substring(reverse(convert(nvarchar(20),CONVERT(money,mon1112_money),1)),4,12)) mon1112_money,
	reverse(substring(reverse(convert(nvarchar(20),CONVERT(money,mon1112_fixed),1)),4,12)) mon1112_fixed,
	reverse(substring(reverse(convert(nvarchar(20),CONVERT(money,otherincome),1)),4,12)) otherincome,
	reverse(substring(reverse(convert(nvarchar(20),CONVERT(money,claimmoney),1)),4,12)) claimmoney,
	reverse(substring(reverse(convert(nvarchar(20),CONVERT(money,total),1)),4,12)) total,
	reverse(substring(reverse(convert(nvarchar(20),CONVERT(money,lastmoney),1)),4,12)) lastmoney,
	reverse(substring(reverse(convert(nvarchar(20),CONVERT(money,interestmoney),1)),4,12)) interestmoney,
	reverse(substring(reverse(convert(nvarchar(20),CONVERT(money,mayinterest),1)),4,12)) mayinterest,
	reverse(substring(reverse(convert(nvarchar(20),CONVERT(money,lastdeinter),1)),4,12)) lastdeinter
from @tmp;

z_vccadc09:--z_vccadc09
declare @t_accy nvarchar(10)
declare @t_bmon nvarchar(10)
declare @t_emon nvarchar(10)
declare @i int 
declare @countrecord int
declare @acomp nvarchar(50)
declare @custno nvarchar(10)
declare @money float
set @t_accy = '[11]'
set @t_bmon = case when '#non'=[1] then @t_accy+'/01' else [1] end 
set @t_emon = case when '#non'=[2] then @t_accy+'/12' else [2] end 
set @i = 0
set @countrecord = 0
set @acomp = ''
set @custno = ''
set @money = 0
declare @tmp table(
	gno nvarchar(1),
	idno int identity(0,1),
	noa nvarchar(20),
	acomp nvarchar(50),
	ticketno nvarchar(10),
	custno nvarchar(10),
	comp nvarchar(100),
	taxrates float,
	money float,
	tax float
)
declare @tmpa table(
	gno nvarchar(1),
	idno int identity(0,1),
	orderby int,
	acomp nvarchar(50),
	ticketno nvarchar(10),
	custno nvarchar(10),
	comp nvarchar(100),
	taxrates float,
	money float,
	tax float
)
declare @tmpb table(
	acomp nvarchar(50),
	custno nvarchar(10),
	comp nvarchar(100),
	money float
)
declare @result table(
	gno nvarchar(1),
	idno int identity(1,1),
	acomp nvarchar(90),
	money float,
	tax float
)
insert into @tmp
	select '0',a.noa,c.nick,b.no2,
	case when a.productno = 'N01' then '0000' 
	when a.productno = 'N011' then '0000' else a.custno end,
	case when (a.productno = 'N011') or (a.productno = 'N03') then a.product
	when (a.productno = 'N01') then (case when a.memo != '' then a.memo else a.product end)
	else (case when (h.buyer is not null) and (CHARINDEX('運輸部',d.comp) > 0)  then d.comp + '-' + h.buyer else d.comp end) end,
	isnull(e.taxrate,(
	select f.taxrate from custroutines f 
	left join custroutine h on h.noa = f.noa
	where (f.custno = a.custno) and (f.cno = '') and (a.datea between f.bdate and f.edate) and h.productno = 'N02'))
	,a.money,a.tax
	from vcca a
	left join vccars b on (a.noa between binvono and einvono)
	left join acomp c on (a.acomp = c.acomp)
	left join cust d on (a.custno = d.noa)
	left join custroutines e on ((a.custno = e.custno) and (a.cno = e.cno)) and (a.datea between e.bdate and e.edate)
	left join custo g on g.mon =  left(a.datea,6)
	left join custos h on (g.noa =  h.noa) and ((a.buyerno = h.buyerno) or (a.buyer = h.buyer) )
	where (left(a.datea,6) between @t_bmon and @t_emon) and (a.taxtype != '6')
---折讓單
insert into @tmp
	select '0',a.noa + '-1',c.nick,'0',
	case when a.productno = 'N01' then '0000' 
	when a.productno = 'N011' then '0000' else g.custno end,d.comp,
	isnull(e.taxrate,(select taxrate from custroutines f where (g.custno = f.custno) and (f.cno = '') and (b.datea between f.bdate and f.edate)))
	,(a.total)*(-1),''
	from vccbs a
	left join vccb b on a.noa = b.noa
	left join vcca g on a.invono = g.noa
	left join acomp c on (g.acomp = c.acomp)
	left join cust d on (g.custno = d.noa)
	left join custroutines e on ((g.custno = e.custno) and (g.cno = e.cno) and (b.datea between e.bdate and e.edate))
	where (left(b.datea,6) between @t_bmon and @t_emon)
--計算每間公司的每個人一整年總計(調整稅率用)
insert into @tmpb
	select b.nick,a.custno,a.comp,sum(a.money)
	from vcca a
	left join acomp b on (a.acomp = b.acomp)
	where (left(a.datea,3) between left(@t_bmon,3) and left(@t_emon,3)) and (taxtype != '6')
	group by b.nick,a.custno,a.comp
---超過3000萬+1
select @countrecord = COUNT(*) from @tmp
while(@i < @countrecord)
begin
	select @acomp = acomp from @tmp where idno = @i
	select @custno = custno from @tmp where idno = @i
	select @money = money from @tmpb where ((acomp = @acomp) and (custno = @custno))
	update @tmp set taxrates += 1 where @money > 30000000 and idno = @i
	set @i +=1
end
---調整稅率
update @tmp set taxrates = '5' where custno = '0000' 
update @tmp set taxrates = '8' where (CHARINDEX('運輸部',comp) > 0)
update @tmp set taxrates = '100' where comp = '佣金收入'  or (taxrates is null)

update @tmp set tax = round((money*taxrates)/100,0) where custno != '0000'
insert into @tmpa 
	select '0',0,acomp,ticketno,custno,comp,taxrates,sum(money),
	case when custno != '0000' then round((sum(money)*taxrates)/100,0)
	else SUM(tax) end tax
	from @tmp 
	group by ticketno,acomp,taxrates,custno,comp 
	order by acomp,ticketno 
update @tmpa set gno = 9 where gno = 0 
insert into @tmpa(gno,orderby,acomp,money,tax)
	select '0',0,acomp,sum(money),sum(tax) from @tmpa
	where gno = 9
	group by acomp
delete from @tmpa where gno = 9
insert into @result
	select gno,acomp,money,tax from @tmpa
	order by money desc,tax desc
insert into @result
	select '1','',SUM(money),sum(tax) from @tmpa
	where gno = 0
select
	gno,idno,acomp,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,money),1)),4,12)) money,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,tax),1)),4,12)) tax
from @result order by gno,idno;

z_vccadc10:--z_vccadc10
declare @t_accy nvarchar(10)
declare @t_bmon nvarchar(10)
declare @t_emon nvarchar(10)
declare @t_bxcustno nvarchar(20)
declare @t_excustno nvarchar(20)
declare @i int 
declare @countrecord int
declare @acomp nvarchar(50)
declare @custno nvarchar(10)
declare @money float
set @t_accy = '[11]'
set @t_bmon = case when '#non'=[1] then @t_accy+'/01' else [1] end 
set @t_emon = case when '#non'=[2] then @t_accy+'/12' else [2] end 
set @t_bxcustno = case when '#non' = [7] then '' else [7] end
set @t_excustno = case when '#non' = [8] then CHAR(255) else [8] end
set @i = 0
set @countrecord = 0
set @acomp = ''
set @custno = ''
set @money = 0
declare @tmp table(
	gno nvarchar(1),
	idno int identity(0,1),
	noa nvarchar(20),
	acomp nvarchar(50),
	ticketno nvarchar(10),
	custno nvarchar(20),
	comp nvarchar(100),
	taxrates float,
	money float,
	tax float
)
declare @tmpa table(
	gno nvarchar(1),
	custno nvarchar(20),
	comp nvarchar(100),
	money float,
	tax float
)
declare @tmpb table(
	acomp nvarchar(50),
	custno nvarchar(20),
	comp nvarchar(100),
	money float
)
declare @result table(
	gno nvarchar(1),
	t_no int identity(0,1),
	idno int,
	custno nvarchar(20),
	comp nvarchar(100),
	money float,
	tax float
)
insert into @tmp
	select '0',a.noa,c.nick,b.no2,
	case when a.productno = 'N01' then '0000' 
	when a.productno = 'N011' then '0000' else a.custno end,
	case when (a.productno = 'N011') or (a.productno = 'N03') then a.product
	when (a.productno = 'N01') then (case when a.memo != '' then a.memo else a.product end)
	else (
		case when (a.serial = '84448308') and (CHARINDEX('運輸部',d.comp) > 0) then ltrim(rtrim(d.comp)) + '-誼林' 
		else ltrim(rtrim(d.comp)) end) end,
	isnull(e.taxrate,(
	select f.taxrate from custroutines f 
	left join custroutine h on h.noa = f.noa
	where (f.custno = a.custno) and (f.cno = '') and (a.datea between f.bdate and f.edate) and h.productno = 'N02'))
	,a.money,a.tax
	from vcca a
	left join vccars b on (a.noa between binvono and einvono)
	left join acomp c on (a.acomp = c.acomp)
	left join cust d on (a.custno = d.noa)
	left join custroutines e on ((a.custno = e.custno) and (a.cno = e.cno)) and (a.datea between e.bdate and e.edate)
	where (left(a.datea,6) between @t_bmon and @t_emon) and (a.taxtype != '6') and (a.custno between @t_bxcustno and @t_excustno)
---折讓單
insert into @tmp
	select '0',a.noa + '-1',c.nick,'0',
	case when a.productno = 'N01' then '0000' 
	when a.productno = 'N011' then '0000' else g.custno end,d.comp,
	isnull(e.taxrate,(select taxrate from custroutines f where (g.custno = f.custno) and (f.cno = '') and (b.datea between f.bdate and f.edate)))
	,(a.total)*(-1),''
	from vccbs a
	left join vccb b on a.noa = b.noa
	left join vcca g on a.invono = g.noa
	left join acomp c on (g.acomp = c.acomp)
	left join cust d on (g.custno = d.noa)
	left join custroutines e on ((g.custno = e.custno) and (g.cno = e.cno) and (b.datea between e.bdate and e.edate))
	where (left(b.datea,6) between @t_bmon and @t_emon) and (a.custno between @t_bxcustno and @t_excustno)
--計算每間公司的每個人一整年總計(調整稅率用)
insert into @tmpb
	select b.nick,a.custno,a.comp,sum(a.money)
	from vcca a
	left join acomp b on (a.acomp = b.acomp)
	where (left(a.datea,3) between left(@t_bmon,3) and left(@t_emon,3)) and (taxtype != '6') and (a.custno between @t_bxcustno and @t_excustno)
	group by b.nick,a.custno,a.comp
---超過3000萬+1
select @countrecord = COUNT(*) from @tmp
while(@i < @countrecord)
begin
	select @acomp = acomp from @tmp where idno = @i
	select @custno = custno from @tmp where idno = @i
	select @money = money from @tmpb where ((acomp = @acomp) and (custno = @custno))
	update @tmp set taxrates += 1 where @money > 30000000 and idno = @i
	set @i +=1
end
---調整稅率
update @tmp set taxrates = '5' where custno = '0000' 
update @tmp set taxrates = '8' where (CHARINDEX('運輸部',comp) > 0) 
update @tmp set taxrates = '100' where comp = '佣金收入'  or (taxrates is null)
update @tmp set tax = round((money*taxrates)/100,0) where custno != '0000'
insert into @tmpa
	select '9',custno,comp,SUM(money),
	case when custno != '0000' then round((sum(money)*taxrates)/100,0)
	else SUM(tax) end tax
	from @tmp
	group by custno,comp,acomp,ticketno,taxrates
	order by custno
insert into @tmpa(gno,custno,comp,money,tax)
	select '0',custno,'資售',SUM(money),SUM(tax)
	from @tmpa
	where custno = '0000'
	group by custno
insert into @tmpa(gno,custno,comp,money,tax)
	select '0',custno,comp,SUM(money),SUM(tax)
	from @tmpa
	where custno != '0000'
	group by custno,comp
delete from @tmpa where gno = 9
insert into @result
	select gno,'0',custno,comp,money,tax from @tmpa
	order by money desc,tax desc
declare @rank int
declare @t_no int
set @rank = 1
declare cursor_table cursor for
select t_no,custno from @result
open cursor_table
fetch next from cursor_table
into @t_no,@custno
while(@@FETCH_STATUS <> -1)
begin
	if(@custno != '0000')
	begin
		update @result set idno = @rank where t_no = @t_no
		set @rank += 1
	end
	else
		update @result set idno = null where t_no = @t_no
	fetch next from cursor_table
	into @t_no,@custno
end
close cursor_table
deallocate cursor_table
insert into @result(gno,money,tax)
	select '1',SUM(money),SUM(tax)
	from @tmpa
	where gno = 0
select
	gno,idno,custno,comp,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,money),1)),4,12)) money,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,tax),1)),4,12)) tax
from @result order by gno,idno;