z_vccadc1:--z_vccadc1 
declare @t_bxmon nvarchar(20)
declare @t_exmon nvarchar(20)
declare @t_bbmon nvarchar(20)
declare @t_ebmon nvarchaR(20)
declare @t_bemon nvarchar(20)
declare @t_eemon nvarchar(20)
declare @t_bxcustno nvarchar(20)
declare @t_excustno nvarchar(20)
declare @t_bxacomp nvarchar(20)
declare @t_exacomp nvarchar(20)
set @t_bxmon = case when '#non' = [1] then '' else [1] end
set @t_exmon = case when '#non' = [2] then CHAR(255) else [2] end
set @t_bbmon = case when '#non' = [3] then '' else [3] end
set @t_ebmon = case when '#non' = [4] then CHAR(255) else [4] end
set @t_bemon = case when '#non' = [5] then '' else [5] end
set @t_eemon = case when '#non' = [6] then CHAR(255) else [6] end
set @t_bxcustno = case when '#non' = [7] then '' else [7] end
set @t_excustno = case when '#non' = [8] then CHAR(255) else [8] end
set @t_bxacomp = case when '#non' = [9] then '' else [9] end
set @t_exacomp = case when '#non' = [10] then CHAR(255) else [10] end

declare @csor table(
[custno] nvarchar(20), 
[comp] nvarchar(90), 
[money] decimal(10,0), 
[tax] decimal(10,0), 
[t] decimal(8,3) 
) 
insert into @csor 
select max(a.custno),case when LEN(c.nick) > 0 then c.nick else LEFT(a.comp,4) end,sum(a.money),sum(a.tax),AVG(b.taxrate) 
from vcca a
left join custroutine b on a.comp = b.comp
left join cust c on a.custno = c.noa
where a.comp != '' and 
(a.mon between @t_bxmon and @t_exmon)
group by case when LEN(c.nick) > 0 then c.nick else LEFT(a.comp,4) end


declare @result table( 
[gno] nvarchar(1), 
n nvarchar(20),
[custno] nvarchar(20), 
[comp] nvarchar(90), 
[t] nvarchar(10), 
[money] decimal(12,0), 
[tax] decimal(12,0), 
memo nvarchar(max) 
) 
insert into @result 
select '0' gno,ROW_NUMBER()over(order by comp) n,custno,comp,t,money,tax,(select memo + '' from vcca where vcca.custno=a.custno and memo!='' group by memo FOR XML PATH('')) memo 
from @csor a 
insert into @result 
select '1' gno,'',MAX(custno),'','',sum(money),sum(tax),'' 
from @result 

select gno,n,custno,comp,t,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,money),1)),4,12)) money, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,tax),1)),4,12)) tax,left(memo,31) memo 
from @result 
order by gno,comp,n;
------------------------------------------------------------------------------------------------------------------------
z_vccadc2:--z_vccadc2
declare @t_bxmon nvarchar(20)
declare @t_exmon nvarchar(20)
declare @t_bbmon nvarchar(20)
declare @t_ebmon nvarchaR(20)
declare @t_bemon nvarchar(20)
declare @t_eemon nvarchar(20)
declare @t_bxcustno nvarchar(20)
declare @t_excustno nvarchar(20)
declare @t_bxacomp nvarchar(20)
declare @t_exacomp nvarchar(20)
set @t_bxmon = case when '#non' = [1] then '' else [1] end
set @t_exmon = case when '#non' = [2] then CHAR(255) else [2] end
set @t_bbmon = case when '#non' = [3] then '' else [3] end
set @t_ebmon = case when '#non' = [4] then CHAR(255) else [4] end
set @t_bemon = case when '#non' = [5] then '' else [5] end
set @t_eemon = case when '#non' = [6] then CHAR(255) else [6] end
set @t_bxcustno = case when '#non' = [7] then '' else [7] end
set @t_excustno = case when '#non' = [8] then CHAR(255) else [8] end
set @t_bxacomp = case when '#non' = [9] then '' else [9] end
set @t_exacomp = case when '#non' = [10] then CHAR(255) else [10] end
declare @tmp table( 
gno nvarchar(1), 
custno nvarchar(10), 
comp nvarchar(100), 
taxrate decimal (8,3), 
money1 float,
tax1 float,
money2 float,
tax2 float,
money3 float 
) 
insert into @tmp
select '0' gno,a.custno,'',0
,sum(a.money),sum(a.tax),0,0,0 
from vcca a
left join cust c on a.custno = c.noa
where (isnull(a.mon,'') between @t_bemon and @t_eemon)
group by a.custno


declare @custno nvarchar(20)
declare @money2 float
declare @tax2 float

declare cursor_table cursor for
select custno,sum(money),sum(tax) from vcca where (isnull(mon,'') between @t_bbmon and @t_ebmon) group by custno
open cursor_table
fetch next from cursor_table
into @custno,@money2,@tax2
while(@@FETCH_STATUS <> -1)
begin
	if exists(select * from @tmp where custno = @custno)
	begin
	update @tmp set custno = @custno,money2 = @money2,tax2 = @tax2 where custno = @custno 
	end
	else 
	begin
	insert into @tmp(gno,custno,money1,tax1,money2,tax2) values (0,@custno,0,0,@money2,@tax2)
	end
	fetch next from cursor_table
	into @custno,@money2,@tax2
end
close cursor_table
deallocate cursor_table

insert into @tmp
select '1' gno,'','',0,SUM(money1),SUM(tax1),SUM(money2),SUM(tax2),SUM(money1-money2)
from @tmp

select a.gno,a.custno,case when len(c.nick)>0 then c.nick else LEFT(c.comp,4) end comp,b.taxrate t,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.money1),1)),4,12)) money1,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.tax1),1)),4,12)) tax1,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.money2),1)),4,12))money2,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.tax2),1)),4,12)) tax2,case when (a.money1-a.money2) < 0 then '('+reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,ABS(a.money1-a.money2)),1)),4,12))+')' +'↓' else reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,(a.money1-a.money2)),1)),4,12)) + '↑' end money3,
LEFT(@t_bbmon,3) byear,LEFT(@t_bemon,3) eyear
from @tmp a
left join custroutine b on a.comp = b.comp
left join cust c on a.custno = c.noa
order by a.gno,a.custno;
---------------------------------------------------------------------------------------------------
z_vccadc3:--z_vccadc3
declare @t_bxmon nvarchar(20) 
declare @t_exmon nvarchar(20) 
declare @t_bbmon nvarchar(20) 
declare @t_ebmon nvarchaR(20) 
declare @t_bemon nvarchar(20) 
declare @t_eemon nvarchar(20) 
declare @t_bxcustno nvarchar(20) 
declare @t_excustno nvarchar(20) 
declare @t_bxacomp nvarchar(20) 
declare @t_exacomp nvarchar(20) 
set @t_bxmon = case when '#non' = [1] then '' else [1] end
set @t_exmon = case when '#non' = [2] then CHAR(255) else [2] end
set @t_bbmon = case when '#non' = [3] then '' else [3] end
set @t_ebmon = case when '#non' = [4] then CHAR(255) else [4] end
set @t_bemon = case when '#non' = [5] then '' else [5] end
set @t_eemon = case when '#non' = [6] then CHAR(255) else [6] end
set @t_bxcustno = case when '#non' = [7] then '' else [7] end
set @t_excustno = case when '#non' = [8] then CHAR(255) else [8] end
set @t_bxacomp = case when '#non' = [9] then '' else [9] end
set @t_exacomp = case when '#non' = [10] then CHAR(255) else [10] end
declare @result table( 
gno nvarchar(1), 
acomp nvarchar(20),  
dime int, 
custno nvarchar(20), 
comp nvarchar(50), 
t nvarchar(20), 
moneys int, 
tax int, 
memo nvarchar(200), 
mon nvarchar(6) 
) 
insert into @result 
select '0' gno,case when LEN(b.nick)> 0 then b.nick else LEFT(a.comp2,4) end,c.noq,a.custno,case when len(e.nick) > 0 then e.nick else  left(a.comp,4) end,d.taxrate,a.money,a.tax,a.memo,a.mon
from vcca a
left join acomp b on a.cno = b.noa
left join vccars c on a.noa between c.binvono and c.einvono
left join custroutine d on a.custno = d.custno
left join cust e on a.custno = e.noa
where (a.mon between @t_bxmon and @t_exmon) and
(a.comp2 between @t_bxacomp and @t_exacomp)

insert into @result 
select '1' gno,acomp,'','','',0,SUM(moneys),SUM(tax),'',''
from @result 
group by acomp

insert into @result 
select '2' gno,max(acomp),'','','',0,SUM(moneys),SUM(tax),'',''
from @result 

select gno,acomp,dime,custno,comp,t,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,moneys),1)),4,12)) moneys, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,tax),1)),4,12)) tax, 
memo,mon 
from @result 
order by acomp,gno;
---------------------------------------------------------------------------------------------------------------------------------
z_vccadc4:--z_vccadc4
declare @t_bxmon nvarchar(20) 
declare @t_exmon nvarchar(20) 
declare @t_bbmon nvarchar(20) 
declare @t_ebmon nvarchaR(20) 
declare @t_bemon nvarchar(20) 
declare @t_eemon nvarchar(20) 
declare @t_bxcustno nvarchar(20) 
declare @t_excustno nvarchar(20) 
declare @t_bxacomp nvarchar(20) 
declare @t_exacomp nvarchar(20) 
set @t_bxmon = case when '#non' = [1] then '' else [1] end
set @t_exmon = case when '#non' = [2] then CHAR(255) else [2] end
set @t_bbmon = case when '#non' = [3] then '' else [3] end
set @t_ebmon = case when '#non' = [4] then CHAR(255) else [4] end
set @t_bemon = case when '#non' = [5] then '' else [5] end
set @t_eemon = case when '#non' = [6] then CHAR(255) else [6] end
set @t_bxcustno = case when '#non' = [7] then '' else [7] end
set @t_excustno = case when '#non' = [8] then CHAR(255) else [8] end
set @t_bxacomp = case when '#non' = [9] then '' else [9] end
set @t_exacomp = case when '#non' = [10] then CHAR(255) else [10] end
declare @result table( 
gno nvarchar(1), 
acomp nvarchar(20),  
dime int, 
custno nvarchar(20), 
comp nvarchar(50), 
t nvarchar(20), 
moneys int, 
tax int, 
memo nvarchar(200), 
mon nvarchar(6) 
) 
insert into @result 
select '0' gno,case when LEN(b.nick)> 0 then b.nick else LEFT(a.comp2,4) end,c.noq,a.custno,case when len(e.nick) > 0 then e.nick else  left(a.comp,4) end,d.taxrate,a.money,a.tax,a.memo,a.mon
from vcca a
left join acomp b on a.cno = b.noa
left join vccars c on a.noa between c.binvono and c.einvono
left join custroutine d on a.custno = d.custno
left join cust e on a.custno = e.noa
where (a.mon between @t_bxmon and @t_exmon) and
(a.custno between @t_bxcustno and @t_excustno)

insert into @result 
select '1' gno,'','','',comp,0,SUM(moneys),SUM(tax),'',''
from @result 
group by comp

insert into @result 
select '2' gno,'','','',max(comp),0,SUM(moneys),SUM(tax),'',''
from @result 

select gno,acomp,dime,custno,comp,t,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,moneys),1)),4,12)) moneys, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,tax),1)),4,12)) tax, 
memo,mon 
from @result 
order by comp,gno;