z_vccadc1:--z_vccadc1 
declare @t_bxmon nvarchar(20)
declare @t_exmon nvarchar(20)
declare @t_bbmon nvarchar(20)
declare @t_ebmon nvarchaR(20)
declare @t_bemon nvarchar(20)
declare @t_eemon nvarchar(20)
declare @t_bxcustno nvarchar(20)
declare @t_excustno nvarchar(20)
declare @t_bxacomp nvarchar(20)
declare @t_exacomp nvarchar(20)
set @t_bxmon = case when '#non' = [1] then '' else [1] end
set @t_exmon = case when '#non' = [2] then CHAR(255) else [2] end
set @t_bbmon = case when '#non' = [3] then '' else [3] end
set @t_ebmon = case when '#non' = [4] then CHAR(255) else [4] end
set @t_bemon = case when '#non' = [5] then '' else [5] end
set @t_eemon = case when '#non' = [6] then CHAR(255) else [6] end
set @t_bxcustno = case when '#non' = [7] then '' else [7] end
set @t_excustno = case when '#non' = [8] then CHAR(255) else [8] end
set @t_bxacomp = case when '#non' = [9] then '' else [9] end
set @t_exacomp = case when '#non' = [10] then CHAR(255) else [10] end

declare @csor table(
[custno] nvarchar(20), 
[comp] nvarchar(90), 
[money] decimal(10,0), 
[tax] decimal(10,0), 
[t] decimal(8,3) 
) 
insert into @csor 
select max(a.custno),case when LEN(c.nick) > 0 then c.nick else LEFT(a.comp,4) end,sum(a.money),sum(a.tax),AVG(b.taxrate) 
from vcca a
left join custroutine b on a.comp = b.comp
left join cust c on a.custno = c.noa
where a.comp != '' and 
(a.mon between @t_bxmon and @t_exmon)
group by case when LEN(c.nick) > 0 then c.nick else LEFT(a.comp,4) end


declare @result table( 
[gno] nvarchar(1), 
n nvarchar(20),
[custno] nvarchar(20), 
[comp] nvarchar(90), 
[t] nvarchar(10), 
[money] decimal(12,0), 
[tax] decimal(12,0), 
memo nvarchar(max) 
) 
insert into @result 
select '0' gno,ROW_NUMBER()over(order by comp) n,custno,comp,t,money,tax,(select memo + '' from vcca where vcca.custno=a.custno and memo!='' group by memo FOR XML PATH('')) memo 
from @csor a 
insert into @result 
select '1' gno,'',MAX(custno),'','',sum(money),sum(tax),'' 
from @result 

select gno,n,custno,comp,t,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,money),1)),4,12)) money, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,tax),1)),4,12)) tax,left(memo,31) memo 
from @result 
order by gno,comp,n;
------------------------------------------------------------------------------------------------------------------------
z_vccadc2:--z_vccadc2
declare @t_bxmon nvarchar(20)
declare @t_exmon nvarchar(20)
declare @t_bbmon nvarchar(20)
declare @t_ebmon nvarchaR(20)
declare @t_bemon nvarchar(20)
declare @t_eemon nvarchar(20)
declare @t_bxcustno nvarchar(20)
declare @t_excustno nvarchar(20)
declare @t_bxacomp nvarchar(20)
declare @t_exacomp nvarchar(20)
set @t_bxmon = case when '#non' = [1] then '' else [1] end
set @t_exmon = case when '#non' = [2] then CHAR(255) else [2] end
set @t_bbmon = case when '#non' = [3] then '' else [3] end
set @t_ebmon = case when '#non' = [4] then CHAR(255) else [4] end
set @t_bemon = case when '#non' = [5] then '' else [5] end
set @t_eemon = case when '#non' = [6] then CHAR(255) else [6] end
set @t_bxcustno = case when '#non' = [7] then '' else [7] end
set @t_excustno = case when '#non' = [8] then CHAR(255) else [8] end
set @t_bxacomp = case when '#non' = [9] then '' else [9] end
set @t_exacomp = case when '#non' = [10] then CHAR(255) else [10] end
declare @tmp table( 
gno nvarchar(1), 
custno nvarchar(10), 
comp nvarchar(100), 
taxrate decimal (8,3), 
money1 float,
tax1 float,
money2 float,
tax2 float,
money3 float 
) 
insert into @tmp
select '0' gno,a.custno,'',0
,sum(a.money),sum(a.tax),0,0,0 
from vcca a
left join cust c on a.custno = c.noa
where (isnull(a.mon,'') between @t_bemon and @t_eemon)
group by a.custno


declare @custno nvarchar(20)
declare @money2 float
declare @tax2 float

declare cursor_table cursor for
select custno,sum(money),sum(tax) from vcca where (isnull(mon,'') between @t_bbmon and @t_ebmon) group by custno
open cursor_table
fetch next from cursor_table
into @custno,@money2,@tax2
while(@@FETCH_STATUS <> -1)
begin
	if exists(select * from @tmp where custno = @custno)
	begin
	update @tmp set custno = @custno,money2 = @money2,tax2 = @tax2 where custno = @custno 
	end
	else 
	begin
	insert into @tmp(gno,custno,money1,tax1,money2,tax2) values (0,@custno,0,0,@money2,@tax2)
	end
	fetch next from cursor_table
	into @custno,@money2,@tax2
end
close cursor_table
deallocate cursor_table

insert into @tmp
select '1' gno,'','',0,SUM(money1),SUM(tax1),SUM(money2),SUM(tax2),SUM(money1-money2)
from @tmp

select a.gno,a.custno,case when len(c.nick)>0 then c.nick else LEFT(c.comp,4) end comp,b.taxrate t,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.money1),1)),4,12)) money1,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.tax1),1)),4,12)) tax1,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.money2),1)),4,12))money2,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.tax2),1)),4,12)) tax2,case when (a.money1-a.money2) < 0 then '('+reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,ABS(a.money1-a.money2)),1)),4,12))+')' +'↓' else reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,(a.money1-a.money2)),1)),4,12)) + '↑' end money3,
LEFT(@t_bbmon,3) byear,LEFT(@t_bemon,3) eyear
from @tmp a
left join custroutine b on a.comp = b.comp
left join cust c on a.custno = c.noa
order by a.gno,a.custno;
---------------------------------------------------------------------------------------------------
z_vccadc3:--z_vccadc3
declare @t_bxmon nvarchar(20) 
declare @t_exmon nvarchar(20) 
declare @t_bbmon nvarchar(20) 
declare @t_ebmon nvarchaR(20) 
declare @t_bemon nvarchar(20) 
declare @t_eemon nvarchar(20) 
declare @t_bxcustno nvarchar(20) 
declare @t_excustno nvarchar(20) 
declare @t_bxacomp nvarchar(20) 
declare @t_exacomp nvarchar(20) 
set @t_bxmon = case when '#non' = [1] then '' else [1] end
set @t_exmon = case when '#non' = [2] then CHAR(255) else [2] end
set @t_bbmon = case when '#non' = [3] then '' else [3] end
set @t_ebmon = case when '#non' = [4] then CHAR(255) else [4] end
set @t_bemon = case when '#non' = [5] then '' else [5] end
set @t_eemon = case when '#non' = [6] then CHAR(255) else [6] end
set @t_bxcustno = case when '#non' = [7] then '' else [7] end
set @t_excustno = case when '#non' = [8] then CHAR(255) else [8] end
set @t_bxacomp = case when '#non' = [9] then '' else [9] end
set @t_exacomp = case when '#non' = [10] then CHAR(255) else [10] end
declare @result table( 
gno nvarchar(1), 
acomp nvarchar(20),  
dime int, 
custno nvarchar(20), 
comp nvarchar(50), 
t nvarchar(20), 
moneys int, 
tax int, 
memo nvarchar(200), 
mon nvarchar(6),
worker nvarchar(20) 
) 
insert into @result 
select '0' gno,case when LEN(b.nick)> 0 then b.nick else LEFT(a.acomp,4) end,c.noq,a.custno,case when len(e.nick) > 0 then e.nick else  left(a.comp,4) end,d.taxrate,a.money,a.tax,a.memo,a.mon,a.worker
from vcca a
left join acomp b on a.cno = b.noa
left join vccars c on a.noa between c.binvono and c.einvono
left join custroutine d on a.custno = d.custno
left join cust e on a.custno = e.noa
where (a.mon between @t_bxmon and @t_exmon) and
(a.acomp between @t_bxacomp and @t_exacomp)

insert into @result 
select '1' gno,acomp,'','','',0,SUM(moneys),SUM(tax),'','',''
from @result 
group by acomp

insert into @result 
select '2' gno,max(acomp),'','','',0,SUM(moneys),SUM(tax),'','',''
from @result 
where gno != 1 

select gno,acomp,dime,custno,comp,t,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,moneys),1)),4,12)) moneys, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,tax),1)),4,12)) tax, 
memo,mon,worker 
from @result 
order by acomp,gno;
---------------------------------------------------------------------------------------------------------------------------------
z_vccadc4:--z_vccadc4
declare @t_bxmon nvarchar(20) 
declare @t_exmon nvarchar(20) 
declare @t_bbmon nvarchar(20) 
declare @t_ebmon nvarchaR(20) 
declare @t_bemon nvarchar(20) 
declare @t_eemon nvarchar(20) 
declare @t_bxcustno nvarchar(20) 
declare @t_excustno nvarchar(20) 
declare @t_bxacomp nvarchar(20) 
declare @t_exacomp nvarchar(20) 
set @t_bxmon = case when '#non' = [1] then '' else [1] end
set @t_exmon = case when '#non' = [2] then CHAR(255) else [2] end
set @t_bbmon = case when '#non' = [3] then '' else [3] end
set @t_ebmon = case when '#non' = [4] then CHAR(255) else [4] end
set @t_bemon = case when '#non' = [5] then '' else [5] end
set @t_eemon = case when '#non' = [6] then CHAR(255) else [6] end
set @t_bxcustno = case when '#non' = [7] then '' else [7] end
set @t_excustno = case when '#non' = [8] then CHAR(255) else [8] end
set @t_bxacomp = case when '#non' = [9] then '' else [9] end
set @t_exacomp = case when '#non' = [10] then CHAR(255) else [10] end
declare @result table( 
gno nvarchar(1), 
acomp nvarchar(20),  
dime int, 
custno nvarchar(20), 
comp nvarchar(50), 
t nvarchar(20), 
moneys int, 
tax int, 
memo nvarchar(200), 
mon nvarchar(6),
worker nvarchar(20) 
) 
insert into @result 
select '0' gno,case when LEN(b.nick)> 0 then b.nick else LEFT(a.acomp,4) end,c.noq,a.custno,case when len(e.nick) > 0 then e.nick else  left(a.comp,4) end,d.taxrate,a.money,a.tax,a.memo,a.mon,a.worker
from vcca a
left join acomp b on a.cno = b.noa
left join vccars c on a.noa between c.binvono and c.einvono
left join custroutine d on a.custno = d.custno
left join cust e on a.custno = e.noa
where (a.mon between @t_bxmon and @t_exmon) and
(a.custno between @t_bxcustno and @t_excustno)

insert into @result 
select '1' gno,'','','',comp,0,SUM(moneys),SUM(tax),'','',''
from @result 
group by comp

insert into @result 
select '2' gno,'','','',max(comp),0,SUM(moneys),SUM(tax),'','',''
from @result 
where gno != 1 

select gno,acomp,dime,custno,comp,t,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,moneys),1)),4,12)) moneys, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,tax),1)),4,12)) tax, 
memo,mon,worker 
from @result 
order by comp,gno;

z_vccadc5:--z_vccadc5
declare @t_accy nvarchar(10)
declare @t_bmon nvarchar(10)
declare @t_emon nvarchar(10)
declare @i int 
declare @countrecord int
declare @acomp nvarchar(50)
declare @custno nvarchar(10)
declare @money float
declare @title nvarchar(100)
set @t_accy = '[11]'
set @t_bmon = case when '#non'=[1] then @t_accy+'/01' else [1] end 
set @t_emon = case when '#non'=[2] then @t_accy+'/12' else [2] end 
set @i = 0
set @countrecord = 0
set @acomp = ''
set @custno = ''
set @money = 0
set @title = (
				case when LEFT(@t_bmon,3) = LEFT(@t_emon,3) then LEFT(@t_bmon,3) + '年' + RIGHT(@t_bmon,2) + '-' + RIGHT(@t_emon,2) + '月發票開立明細表（公司別）'
				when LEFT(@t_bmon,3) != LEFT(@t_emon,3) then REPLACE(@t_bmon,'/','年') + '月-' + REPLACE(@t_emon,'/','年') + '月發票開立明細表（公司別）' end
			  )
declare @tmp table(
	gno nvarchar(1),
	idno int identity(0,1),
	noa nvarchar(20),
	acomp nvarchar(50),
	ticketno nvarchar(10),
	custno nvarchar(10),
	comp nvarchar(100),
	taxrates float,
	money float,
	tax float
)
declare @tmpa table(
	gno nvarchar(1),
	idno int identity(0,1),
	orderby int,
	acomp nvarchar(50),
	ticketno nvarchar(10),
	custno nvarchar(10),
	comp nvarchar(100),
	taxrates float,
	money float,
	tax float
)
declare @tmpb table(
	acomp nvarchar(50),
	custno nvarchar(10),
	comp nvarchar(100),
	money float
)
-----先撈出所有人稅率
--declare @custroutines_tmp table(
--	acomp nvarchar(50),
--	custno nvarchar(10),
--	taxrate float,
--	bdate nvarchar(10),
--	edate nvarchar(10)
--)
--insert into @custroutines_tmp
--	select b.nick,custno,taxrate,bdate,edate from custroutines a
--	left join acomp b on a.acomp = b.acomp

--update @custroutines_tmp set bdate = '000/00/00' where bdate = ''
--update @custroutines_tmp set edate = (cast(left(convert(char, getdate(), 111),4)-1911 as nvarchar) + 
--									  cast(right(rtrim(convert(char, getdate(), 111)),6) as nvarchar)
--									  ) where edate = ''
insert into @tmp
	select '0',a.noa,c.nick,b.noq,
	case when a.productno = 'N01' then '0000' 
	when a.productno = 'N011' then '0000' else a.custno end,
	case when (a.productno = 'N011') or (a.productno = 'N03') then a.product
	when (a.productno = 'N01') then (case when a.memo != '' then a.memo else a.product end) else d.comp end,
	isnull(e.taxrate,(select taxrate from custroutines f where (f.custno = a.custno) and (f.cno = '') and (a.datea between f.bdate and f.edate)))
	,a.money,a.tax
	from vcca a
	left join vccars b on (a.noa between binvono and einvono)
	left join acomp c on (a.acomp = c.acomp)
	left join cust d on (a.custno = d.noa)
	left join custroutines e on ((a.custno = e.custno) and (a.cno = e.cno)) and (a.datea between e.bdate and e.edate)
	where (left(a.datea,6) between @t_bmon and @t_emon) and (a.taxtype != '6')
---折讓單
insert into @tmp
	select '0',a.noa + '-1',c.nick,'0',
	case when a.productno = 'N01' then '0000' 
	when a.productno = 'N011' then '0000' else g.custno end,d.comp,
	isnull(e.taxrate,(select taxrate from custroutines f where (g.custno = f.custno) and (f.cno = '') and (b.datea between f.bdate and f.edate)))
	,(a.total)*(-1),''
	from vccbs a
	left join vccb b on a.noa = b.noa
	left join vcca g on a.invono = g.noa
	left join acomp c on (g.acomp = c.acomp)
	left join cust d on (g.custno = d.noa)
	left join custroutines e on ((g.custno = e.custno) and (g.cno = e.cno) and (b.datea between e.bdate and e.edate))
	where (left(b.datea,6) between @t_bmon and @t_emon)



--計算每間公司的每個人一整年總計(調整稅率用)
insert into @tmpb
	select b.nick,a.custno,a.comp,sum(a.money)
	from vcca a
	left join acomp b on (a.acomp = b.acomp)
	where (left(a.datea,3) between left(@t_bmon,3) and left(@t_emon,3)) and (taxtype != '6')
	group by b.nick,a.custno,a.comp
---超過3000萬+1
select @countrecord = COUNT(*) from @tmp
while(@i < @countrecord)
begin
	select @acomp = acomp from @tmp where idno = @i
	select @custno = custno from @tmp where idno = @i
	select @money = money from @tmpb where ((acomp = @acomp) and (custno = @custno))
	update @tmp set taxrates += 1 where @money > 30000000 and idno = @i
	set @i +=1
end
---調整稅率
update @tmp set taxrates = '5' where custno = '0000' 
update @tmp set taxrates = '8' where (CHARINDEX('運輸部',comp) > 0)
update @tmp set taxrates = '100' where comp = '佣金收入'  or (taxrates is null)

update @tmp set tax = round((money*taxrates)/100,0) where custno != '0000'
insert into @tmpa 
	select '0',0,acomp,ticketno,custno,comp,taxrates,sum(money),
	case when custno != '0000' then round((sum(money)*taxrates)/100,0)
	else SUM(tax) end tax
	from @tmp 
	group by ticketno,acomp,taxrates,custno,comp 
	order by acomp,ticketno 
insert into @tmpa(gno,orderby,acomp,money,tax)
	select '1',0,acomp,sum(money),sum(tax) from @tmpa
	where gno = 0
	group by acomp 
insert into @tmpa(gno,orderby,money,tax)
	select '2',1,SUM(money),sum(tax) from @tmpa
	where gno = 1
select
	gno,acomp,cast(ticketno as int) ticketno,custno,comp,cast(taxrates as nvarchar) + '%' taxrates,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,money),1)),4,12)) money,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,tax),1)),4,12)) tax,@title title
from @tmpa order by orderby,acomp,gno,ticketno,custno,comp desc,taxrates;

z_vccadc6:--z_vccadc6

declare @t_accy nvarchar(10)
declare @t_bmon nvarchar(10)
declare @t_emon nvarchar(10)
declare @i int 
declare @countrecord int
declare @acomp nvarchar(50)
declare @custno nvarchar(10)
declare @money float
declare @title nvarchar(100)
set @t_accy = '[11]'
set @t_bmon = case when '#non'=[1] then @t_accy+'/01' else [1] end 
set @t_emon = case when '#non'=[2] then @t_accy+'/12' else [2] end 
set @i = 0
set @countrecord = 0
set @acomp = ''
set @custno = ''
set @money = 0
set @title =(
				case when LEFT(@t_bmon,3) = LEFT(@t_emon,3) then LEFT(@t_bmon,3) + '年' + RIGHT(@t_bmon,2) + '-' + RIGHT(@t_emon,2) + '月發票開立明細表（客戶別）'
				when LEFT(@t_bmon,3) != LEFT(@t_emon,3) then REPLACE(@t_bmon,'/','年') + '月-' + REPLACE(@t_emon,'/','年') + '月發票開立明細表（客戶別）' end
			)
declare @tmp table(
	gno nvarchar(1),
	idno int identity(0,1),
	noa nvarchar(20),
	acomp nvarchar(50),
	ticketno nvarchar(10),
	custno nvarchar(10),
	comp nvarchar(100),
	taxrates float,
	money float,
	tax float
)
declare @tmpa table(
	gno nvarchar(1),
	idno int identity(0,1),
	orderby int,
	acomp nvarchar(50),
	ticketno nvarchar(10),
	custno nvarchar(10),
	comp nvarchar(100),
	taxrates float,
	money float,
	tax float
)
declare @tmpb table(
	acomp nvarchar(50),
	custno nvarchar(10),
	comp nvarchar(100),
	money float
)
insert into @tmp
	select '0',a.noa,c.nick,b.noq,
	case when a.productno = 'N01' then '0000' 
	when a.productno = 'N011' then '0000' else a.custno end,
	case when (a.productno = 'N011') or (a.productno = 'N03') then a.product
	when (a.productno = 'N01') then (case when a.memo != '' then a.memo else a.product end) else d.comp end,
	isnull(e.taxrate,(select taxrate from custroutines f where (f.custno = a.custno) and (f.cno = '') and (a.datea between f.bdate and f.edate)))
	,a.money,a.tax
	from vcca a
	left join vccars b on (a.noa between binvono and einvono)
	left join acomp c on (a.acomp = c.acomp)
	left join cust d on (a.custno = d.noa)
	left join custroutines e on ((a.custno = e.custno) and (a.cno = e.cno)) and (a.datea between e.bdate and e.edate)
	where (left(a.datea,6) between @t_bmon and @t_emon) and (a.taxtype != '6')
---折讓單
insert into @tmp
	select '0',a.noa + '-1',c.nick,'0',
	case when a.productno = 'N01' then '0000' 
	when a.productno = 'N011' then '0000' else g.custno end,d.comp,
	isnull(e.taxrate,(select taxrate from custroutines f where (g.custno = f.custno) and (f.cno = '') and (b.datea between f.bdate and f.edate)))
	,(a.total)*(-1),''
	from vccbs a
	left join vccb b on a.noa = b.noa
	left join vcca g on a.invono = g.noa
	left join acomp c on (g.acomp = c.acomp)
	left join cust d on (g.custno = d.noa)
	left join custroutines e on ((g.custno = e.custno) and (g.cno = e.cno) and (b.datea between e.bdate and e.edate))
	where (left(b.datea,6) between @t_bmon and @t_emon)
--計算每間公司的每個人一整年總計(調整稅率用)
insert into @tmpb
	select b.nick,a.custno,a.comp,sum(a.money)
	from vcca a
	left join acomp b on (a.acomp = b.acomp)
	where (left(a.datea,3) between left(@t_bmon,3) and left(@t_emon,3)) and (taxtype != '6')
	group by b.nick,a.custno,a.comp
---超過3000萬+1
select @countrecord = COUNT(*) from @tmp
while(@i < @countrecord)
begin
	select @acomp = acomp from @tmp where idno = @i
	select @custno = custno from @tmp where idno = @i
	select @money = money from @tmpb where ((acomp = @acomp) and (custno = @custno))
	update @tmp set taxrates += 1 where @money > 30000000 and idno = @i
	set @i +=1
end
---調整稅率
update @tmp set taxrates = '5' where custno = '0000' 
update @tmp set taxrates = '8' where (CHARINDEX('運輸部',comp) > 0) 
update @tmp set taxrates = '100' where comp = '佣金收入'  or (taxrates is null)
update @tmp set tax = round((money*taxrates)/100,0) where custno != '0000'
insert into @tmpa
	select '0',0,acomp,ticketno,custno,comp,taxrates,SUM(money),
	case when custno != '0000' then round((sum(money)*taxrates)/100,0)
	else SUM(tax) end tax
	from @tmp
	group by custno,comp,acomp,ticketno,taxrates
	order by custno
insert into @tmpa(gno,orderby,custno,comp,money,tax)
	select '1',0,custno,'資售',SUM(money),SUM(tax)
	from @tmpa
	where custno = '0000'
	group by custno
insert into @tmpa(gno,orderby,custno,comp,money,tax)
	select '1',0,custno,comp,SUM(money),SUM(tax)
	from @tmpa
	where custno != '0000'
	group by custno,comp
insert into @tmpa(gno,orderby,money,tax)
	select '2',1,SUM(money),SUM(tax)
	from @tmpa
	where gno = 1
select
	gno,orderby,acomp,cast(ticketno as int) ticketno,custno,comp,cast(taxrates as nvarchar) + '%' taxrates,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,money),1)),4,12)) money,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,tax),1)),4,12)) tax,@title title
from @tmpa order by orderby,custno,comp,gno,acomp,ticketno desc,taxrates;