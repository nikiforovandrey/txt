z_cng1:--z_cng1 
declare @t_pageline int = 7   --------一頁幾行
declare @t_accy nvarchar(20) 
declare @t_bnoa nvarchar(20) 
declare @t_enoa nvarchar(20) 
declare @t_bdate nvarchar(20) 
declare @t_edate nvarchar(20) 
set @t_accy = '[1]'
set @t_bnoa = case when '#non' = [2] then '' else [2] end
set @t_enoa = case when '#non' = [3] then CHAR(255) else [3] end
set @t_bdate = case when '#non' = [4] then '' else [4] end
set @t_edate = case when '#non' = [5] then CHAR(255) else [5] end
--******************************************************************
declare @tmp table( 
	idno int identity(0,1),
	orderno int,
	pageno int,
	gno nvarchar(1), 
	noa nvarchar(30), 
	noq nvarchar(20), 
	typea nvarchar(20),
	sno nvarchar(20), 
	store nvarchar(50), 
	ino nvarchar(20), 
	storin nvarchar(50), 
	datea nvarchar(10), 
	pno nvarchar(20), 
	product nvarchar(50), 
	unit nvarchar(20), 
	mount int, 
	memo nvarchar(MAX), 
	cardeal nvarchar(50), 
	carno nvarchar(20), 
	trant nvarchar(20), 
	tmo int, 
	tmemo nvarchar(MAX),
	class nvarchar(10)
) 

insert into @tmp
select ROW_NUMBER()over(partition by b.noa order by b.noa),1,'0' gno,a.noa,b.noq
,(case when a.typea='1' then '廠內調撥' when a.typea='2' then '委外出庫' when a.typea='3' then '委外入庫' when a.typea='4' then '客戶借出' when a.typea='5' then '客戶歸還' else '調撥' end)
,a.storeno,a.store,a.storinno,a.storin,a.datea,b.productno, 
b.product,b.unit,b.mount,b.memo,case when len(c.nick)>0 then c.nick else LEFT(a.cardeal,3) end, 
a.carno,a.trantype,0,a.memo ,b.class
from cng[1] a 
left join cngs[1] b on a.noa = b.noa 
left join cardeal c on a.cardealno = c.noa 
where (a.noa between @t_bnoa and @t_enoa) 
and (a.datea between @t_bdate and @t_edate) 

declare @a_noa nvarchar(30)
declare @a_count int
declare @idno int
declare @k int = 0 ----差幾頁
declare @pageCount int
declare @orderno int
declare @pageno int

declare cursor_table cursor for
	select noa,count(*),max(orderno) from @tmp group by noa
open cursor_table
fetch next from cursor_table
into @a_noa,@a_count,@orderno
while(@@FETCH_STATUS <> -1)
begin		
	if(@a_count > @t_pageline)
	begin
		set @k = CEILING((cast(@a_count as float)/@t_pageline))
		while(@k > 0)
		begin
			update @tmp set pageno = @k where orderno > ((@k-1)*@t_pageline) and orderno <= (@k*@t_pageline)
			set @k -=1
		end
	end
	fetch next from cursor_table
	into @a_noa,@a_count,@orderno
end
close cursor_table
deallocate cursor_table
update @tmp set orderno = orderno-((pageno-1)*@t_pageline)
declare cursor_table cursor for
	select distinct noa,max(orderno),pageno,min(idno),count(*) from @tmp group by noa,pageno
open cursor_table
fetch next from cursor_table
into @a_noa,@orderno,@pageno,@idno,@a_count
while(@@FETCH_STATUS <> -1)
begin		
	set @k = @t_pageline -(@a_count%@t_pageline)
	set @pageCount = @a_count/@t_pageline
	if(@k < @t_pageline and (@pageCount =0))
	begin
		while(@k > 0)
		begin
			insert into @tmp(gno,orderno,pageno,noa)
				select '0',(@orderno+1),@pageno,@a_noa from @tmp where idno = @idno
			set @k = @k-1
			set @orderno = @orderno +1
		end
	end
	insert into @tmp(gno,orderno,pageno,noa,tmo)
		select '1',(@t_pageline+1),pageno,noa,sum(mount) from @tmp where gno=0 and noa=@a_noa and pageno=@pageno group by noa,pageno
	insert into @tmp(gno,orderno,pageno,noa) 
		select '2',(@t_pageline+2),pageno,noa from @tmp where gno=0 and noa=@a_noa and pageno=@pageno group by noa,pageno
	fetch next from cursor_table
	into @a_noa,@orderno,@pageno,@idno,@a_count
end
close cursor_table
deallocate cursor_table

update a set tmo=(select SUM(mount) from @tmp where a.noa=noa and gno='0') from @tmp a where gno='2'

select idno,orderno,pageno,gno,noa,noq,typea,sno,store,ino,storin,datea,pno,product,unit,memo,cardeal,carno,trant,tmemo,class
,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,mount),1)),4,12)) mount
,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,tmo),1)),4,12)) tmo
from @tmp 
order by noa ,pageno,gno,orderno;
-------------------------------------------------------------------------------------------------------------------------------------------------------------
z_cng2:--z_cng2  
declare @t_bmon nvarchar(20) 
declare @t_emon nvarchar(20) 
declare @t_bstoreno nvarchar(50) 
declare @t_estoreno nvarchar(50) 
declare @t_order nvarchar(50) 

set @t_bmon = case when '#non' = [6] then '' else [6] end
set @t_emon = case when '#non' = [7] then CHAR(255) else [7] end
set @t_bstoreno = case when '#non' = [8] then '' else [8] end
set @t_estoreno = case when '#non' = [9] then CHAR(255) else [9] end
set @t_order = case when '#non' = [12] then '1' else [12] end
--******************************************************************
declare @tmp table(
	gno nvarchar(1), 
	mon  nvarchar(10),
	storeno nvarchar(20),
	stores nvarchar(20),
	typea nvarchar(30), 
	datea nvarchar(20),
	pno nvarchar(50), 
	product nvarchar(90), 
	unit nvarchar(20), 
	omount float,
	imount float, 
	tggno nvarchar(50),  
	tggs nvarchar(100),  
	memo nvarchar(MAX),
	class nvarchar(10)
) 

insert into @tmp
select '0' gno,left(a.datea,6),a.storeno,a.store,'廠內'
,a.datea,b.productno,b.product,b.unit,b.mount,null,a.tggno,c.nick,b.memo,b.class
from view_cng[1] a left join view_cngs[1] b on a.noa=b.noa left join tgg c on a.tggno=c.noa
where a.typea='1' and (left(a.datea,6) between  @t_bmon and @t_emon)
and ( a.storeno between @t_bstoreno and @t_estoreno)

insert into @tmp
select '0' gno,left(a.datea,6),a.storinno,a.storin,'廠內'
,a.datea,b.productno,b.product,b.unit,null,b.mount,a.tggno,c.nick,b.memo,b.class
from view_cng[1] a left join view_cngs[1] b on a.noa=b.noa left join tgg c on a.tggno=c.noa
where a.typea='1' and  (left(a.datea,6) between  @t_bmon and @t_emon)
and ( a.storinno between @t_bstoreno and @t_estoreno)

insert into @tmp
select '0' gno,left(a.datea,6),a.storeno,a.store,'委出'
,a.datea,b.productno,b.product,b.unit,b.mount,null,a.tggno,c.nick,b.memo,b.class
from view_cng[1] a left join view_cngs[1] b on a.noa=b.noa left join tgg c on a.tggno=c.noa
where a.typea='2' and (left(a.datea,6) between  @t_bmon and @t_emon)
and ( a.storeno between @t_bstoreno and @t_estoreno)

insert into @tmp
select '0' gno,left(a.datea,6),a.storinno,a.storin,'委出'
,a.datea,b.productno,b.product,b.unit,null,b.mount,a.tggno,c.nick,b.memo,b.class
from view_cng[1] a left join view_cngs[1] b on a.noa=b.noa left join tgg c on a.tggno=c.noa
where a.typea='2' and (left(a.datea,6) between  @t_bmon and @t_emon)
and ( a.storinno between @t_bstoreno and @t_estoreno)

insert into @tmp
select '0' gno,left(a.datea,6),a.storeno,a.store,'委入'
,a.datea,b.productno,b.product,b.unit,b.mount,null,a.tggno,c.nick,b.memo,b.class
from view_cng[1] a left join view_cngs[1] b on a.noa=b.noa left join tgg c on a.tggno=c.noa
where a.typea='3' and  (left(a.datea,6) between  @t_bmon and @t_emon)
and ( a.storeno between @t_bstoreno and @t_estoreno)

insert into @tmp
select '0' gno,left(a.datea,6),a.storinno,a.storin,'委入'
,a.datea,b.productno,b.product,b.unit,null,b.mount,a.tggno,c.nick,b.memo,b.class
from view_cng[1] a left join view_cngs[1] b on a.noa=b.noa left join tgg c on a.tggno=c.noa
where a.typea='3' and  (left(a.datea,6) between  @t_bmon and @t_emon)
and ( a.storinno between @t_bstoreno and @t_estoreno)

insert into @tmp
select '0' gno,left(a.datea,6),a.storeno,a.store,'借出'
,a.datea,b.productno,b.product,b.unit,b.mount,null,a.tggno,c.nick,b.memo,b.class
from view_cng[1] a left join view_cngs[1] b on a.noa=b.noa left join tgg c on a.tggno=c.noa
where a.typea='4' and (left(a.datea,6) between  @t_bmon and @t_emon)
and ( a.storeno between @t_bstoreno and @t_estoreno)

insert into @tmp
select '0' gno,left(a.datea,6),a.storinno,a.storin,'借出'
,a.datea,b.productno,b.product,b.unit,null,b.mount,a.tggno,c.nick,b.memo,b.class
from view_cng[1] a left join view_cngs[1] b on a.noa=b.noa left join tgg c on a.tggno=c.noa
where a.typea='4' and (left(a.datea,6) between  @t_bmon and @t_emon)
and ( a.storinno between @t_bstoreno and @t_estoreno)

insert into @tmp
select '0' gno,left(a.datea,6),a.storeno,a.store,'歸還'
,a.datea,b.productno,b.product,b.unit,b.mount,null,a.tggno,c.nick,b.memo,b.class
from view_cng[1] a left join view_cngs[1] b on a.noa=b.noa left join tgg c on a.tggno=c.noa
where a.typea='5' and  (left(a.datea,6) between  @t_bmon and @t_emon)
and ( a.storeno between @t_bstoreno and @t_estoreno)

insert into @tmp
select '0' gno,left(a.datea,6),a.storinno,a.storin,'歸還'
,a.datea,b.productno,b.product,b.unit,null,b.mount,a.tggno,c.nick,b.memo,b.class
from view_cng[1] a left join view_cngs[1] b on a.noa=b.noa left join tgg c on a.tggno=c.noa
where a.typea='5' and  (left(a.datea,6) between  @t_bmon and @t_emon)
and ( a.storinno between @t_bstoreno and @t_estoreno)

insert into @tmp(mon,storeno,omount,imount,gno)
select mon,storeno,sum(omount),sum(imount),'1' from @tmp group by mon,storeno

if(@t_order='1')
begin
	select gno,mon,storeno,stores,typea,datea,pno,product,unit,tggno,tggs,memo,class
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,omount),1)),4,12)) omount
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,imount),1)),4,12)) imount
	from @tmp
	order by mon,storeno,gno,datea
end
else
begin
	select gno,mon,storeno,stores,typea,datea,pno,product,unit,tggno,tggs,memo,class
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,omount),1)),4,12)) omount
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,imount),1)),4,12)) imount
	from @tmp
	order by mon,storeno,gno,(case when isnull(class,'')='' then '999/99/99' else class end)
end
;
-------------------------------------------------------------------------------------------------------------------------------------------------------------
z_cng3:--z_cng3  
declare @t_bdate nvarchar(20) 
declare @t_edate nvarchar(20) 
declare @t_bstoreno nvarchar(50) 
declare @t_estoreno nvarchar(50) 

set @t_bdate = case when '#non' = [4] then '' else [4] end
set @t_edate = case when '#non' = [5] then CHAR(255) else [5] end
set @t_bstoreno = case when '#non' = [8] then '' else [8] end
set @t_estoreno = case when '#non' = [9] then CHAR(255) else [9] end
--******************************************************************
declare @tmp table(
	gno nvarchar(1), 
	storeno nvarchar(20),
	stores nvarchar(20),
	typea nvarchar(30), 
	pno nvarchar(50), 
	product nvarchar(90), 
	unit nvarchar(20), 
	omount float,
	imount float, 
	tggno nvarchar(50),  
	tggs nvarchar(100)
) 

insert into @tmp
select '0' gno,storeno,MAX(store),typea,productno,MAX(product),MAX(unit)
,SUM(omount),SUM(imount),tggno,MAX(tgg) from(
select a.storeno,a.store,(case when a.typea='1' then '廠內' else '委外' end) typea
,b.productno,b.product,b.unit,b.mount omount ,null imount,a.tggno,c.nick tgg
from view_cng[1] a left join view_cngs[1] b on a.noa=b.noa left join tgg c on a.tggno=c.noa
where a.typea='1' and (a.datea between  @t_bdate and @t_edate)
and ( a.storeno between @t_bstoreno and @t_estoreno)
union all
select a.storinno,a.storin,(case when a.typea='1' then '廠內' else '委外' end)
,b.productno,b.product,b.unit,null,b.mount,a.tggno,c.nick
from view_cng[1] a left join view_cngs[1] b on a.noa=b.noa left join tgg c on a.tggno=c.noa
where a.typea='1' and  (a.datea between  @t_bdate and @t_edate)
and ( a.storinno between @t_bstoreno and @t_estoreno)
union all
select a.storeno,a.store,'委出'
,b.productno,b.product,b.unit,b.mount,null,a.tggno,c.nick
from view_cng[1] a left join view_cngs[1] b on a.noa=b.noa left join tgg c on a.tggno=c.noa
where a.typea='2' and (a.datea between  @t_bdate and @t_edate)
and ( a.storeno between @t_bstoreno and @t_estoreno)
union all
select a.storinno,a.storin,'委入'
,b.productno,b.product,b.unit,null,b.mount,a.tggno,c.nick
from view_cng[1] a left join view_cngs[1] b on a.noa=b.noa left join tgg c on a.tggno=c.noa
where a.typea='3' and (a.datea between  @t_bdate and @t_edate)
and ( a.storinno between @t_bstoreno and @t_estoreno)
union all
select a.storeno,a.store,'借出'
,b.productno,b.product,b.unit,b.mount,null,a.tggno,c.nick
from view_cng[1] a left join view_cngs[1] b on a.noa=b.noa left join tgg c on a.tggno=c.noa
where a.typea='4' and (a.datea between  @t_bdate and @t_edate)
and ( a.storeno between @t_bstoreno and @t_estoreno)
union all
select a.storinno,a.storin,'歸還'
,b.productno,b.product,b.unit,null,b.mount,a.tggno,c.nick
from view_cng[1] a left join view_cngs[1] b on a.noa=b.noa left join tgg c on a.tggno=c.noa
where a.typea='5' and (a.datea between  @t_bdate and @t_edate)
and ( a.storinno between @t_bstoreno and @t_estoreno)
)tmp group by storeno,typea,productno,tggno

insert into @tmp(storeno,gno)
select storeno,'1' from @tmp group by storeno


select gno,storeno,stores,typea,pno,product,unit,tggno,tggs
,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,omount),1)),4,12)) omount
,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,imount),1)),4,12)) imount
from @tmp
order by storeno,gno
;
-------------------------------------------------------------------------------------------------------------------------------------------------------------
z_cng4:--z_cng4  
declare @t_bdate nvarchar(20) 
declare @t_edate nvarchar(20) 
declare @t_bstoreno nvarchar(50) 
declare @t_estoreno nvarchar(50)
declare @t_bpno nvarchar(50) 
declare @t_epno nvarchar(50)  

set @t_bdate = case when '#non' = [4] then '' else [4] end
set @t_edate = case when '#non' = [5] then CHAR(255) else [5] end
set @t_bstoreno = case when '#non' = [8] then '' else [8] end
set @t_estoreno = case when '#non' = [9] then CHAR(255) else [9] end
set @t_bpno = case when '#non' = [10] then '' else [10] end
set @t_epno = case when '#non' = [11] then CHAR(255) else [11] end
--******************************************************************
declare @tmp table(
	gno nvarchar(1), 
	datea nvarchar(10),
	storeno nvarchar(20),
	stores nvarchar(20),
	typea nvarchar(30), 
	pno nvarchar(50), 
	product nvarchar(90), 
	unit nvarchar(20), 
	mount float,
	tggno nvarchar(50),  
	tggs nvarchar(100)
) 

insert into @tmp
select '0',a.datea,a.storeno,a.store,'廠內調入' typea
,b.productno,b.product,b.unit,b.mount,a.tggno,c.nick tgg
from view_cng[1] a left join view_cngs[1] b on a.noa=b.noa left join tgg c on a.tggno=c.noa
where a.typea='1' and (a.datea between  @t_bdate and @t_edate)
and ( a.storeno between @t_bstoreno and @t_estoreno) and ( b.productno between @t_bpno and @t_epno)
union all
select '0',a.datea,a.storinno,a.storin,'廠內撥出' typea
,b.productno,b.product,b.unit,b.mount,a.tggno,c.nick
from view_cng[1] a left join view_cngs[1] b on a.noa=b.noa left join tgg c on a.tggno=c.noa
where a.typea='1' and  (a.datea between  @t_bdate and @t_edate)
and ( a.storinno between @t_bstoreno and @t_estoreno) and ( b.productno between @t_bpno and @t_epno)
union all
select '0',a.datea,a.storeno,a.store,'委外出庫' typea
,b.productno,b.product,b.unit,b.mount,a.tggno,c.nick
from view_cng[1] a left join view_cngs[1] b on a.noa=b.noa left join tgg c on a.tggno=c.noa
where a.typea='2' and (a.datea between  @t_bdate and @t_edate)
and ( a.storeno between @t_bstoreno and @t_estoreno) and ( b.productno between @t_bpno and @t_epno)
union all
select '0',a.datea,a.storinno,a.storin,'委外入庫' typea
,b.productno,b.product,b.unit,b.mount,a.tggno,c.nick
from view_cng[1] a left join view_cngs[1] b on a.noa=b.noa left join tgg c on a.tggno=c.noa
where a.typea='3' and (a.datea between  @t_bdate and @t_edate)
and ( a.storinno between @t_bstoreno and @t_estoreno) and ( b.productno between @t_bpno and @t_epno)
union all
select '0',a.datea,a.storeno,a.store,'客戶借出' typea
,b.productno,b.product,b.unit,b.mount,a.tggno,c.nick
from view_cng[1] a left join view_cngs[1] b on a.noa=b.noa left join tgg c on a.tggno=c.noa
where a.typea='4' and (a.datea between  @t_bdate and @t_edate)
and ( a.storeno between @t_bstoreno and @t_estoreno) and ( b.productno between @t_bpno and @t_epno)
union all
select '0',a.datea,a.storinno,a.storin,'客戶歸還' typea
,b.productno,b.product,b.unit,b.mount,a.tggno,c.nick
from view_cng[1] a left join view_cngs[1] b on a.noa=b.noa left join tgg c on a.tggno=c.noa
where a.typea='5' and (a.datea between  @t_bdate and @t_edate)
and ( a.storinno between @t_bstoreno and @t_estoreno) and ( b.productno between @t_bpno and @t_epno)

insert into @tmp(pno,gno)
select pno,'1' from @tmp group by pno

select gno,datea,storeno,stores,typea,pno,product,unit,tggno,tggs
,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,mount),1)),4,12)) mount
from @tmp
order by pno,gno,datea
;

-------------------------------------------------------------------------------------------------------------------------------------------------------------
z_cng5:--z_cng5  
declare @t_bstoreno nvarchar(50) 
declare @t_estoreno nvarchar(50)
declare @t_bpno nvarchar(50) 
declare @t_epno nvarchar(50)  

set @t_bstoreno = case when '#non' = [8] then '' else [8] end
set @t_estoreno = case when '#non' = [9] then CHAR(255) else [9] end
set @t_bpno = case when '#non' = [10] then '' else [10] end
set @t_epno = case when '#non' = [11] then CHAR(255) else [11] end

declare @t_stkdate nvarchar(30) --今天日期
set @t_stkdate=CONVERT (VARCHAR(7), GETDATE(),12 )+0890000
set @t_stkdate=left(@t_stkdate,3)+'/'+substring(@t_stkdate,4,2)+'/'+right(@t_stkdate,2)
--******************************************************************
declare @tmp table(
	gno nvarchar(1), 
	storeno nvarchar(20),
	stores nvarchar(20),
	pno nvarchar(50), 
	product nvarchar(90), 
	unit nvarchar(20), 
	mount float
) 

insert into @tmp
select '0',a.storeno,a.store,a.productno,a.product,(select top 1 unit from view_ucaucc where noa=a.productno)
,a.mount from stkucc[1](@t_stkdate,'','') a
where ( a.storeno between @t_bstoreno and @t_estoreno) and ( a.productno between @t_bpno and @t_epno)
and a.productno !='' and a.mount !=0

insert into @tmp(storeno,gno)
select storeno,'1' from @tmp group by storeno

select gno,storeno,stores,pno,product,unit
,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,mount),1)),4,12)) mount
from @tmp
order by storeno,gno,pno
;
