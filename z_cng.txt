z_cng1:--z_cng1 
declare @t_pageline int = 7   --------一頁幾行
declare @t_accy nvarchar(20) 
declare @t_bnoa nvarchar(20) 
declare @t_enoa nvarchar(20) 
declare @t_bdate nvarchar(20) 
declare @t_edate nvarchar(20) 
set @t_accy = '[1]'
set @t_bnoa = case when '#non' = [2] then '' else [2] end
set @t_enoa = case when '#non' = [3] then CHAR(255) else [3] end
set @t_bdate = case when '#non' = [4] then '' else [4] end
set @t_edate = case when '#non' = [5] then CHAR(255) else [5] end
declare @tmp table( 
	idno int identity(0,1),
	orderno int,
	pageno int,
	gno nvarchar(1), 
	noa nvarchar(30), 
	noq nvarchar(20), 
	typea nvarchar(20),
	sno nvarchar(20), 
	store nvarchar(50), 
	ino nvarchar(20), 
	storin nvarchar(50), 
	datea nvarchar(10), 
	pno nvarchar(20), 
	product nvarchar(50), 
	unit nvarchar(20), 
	mount int, 
	memo nvarchar(200), 
	cardeal nvarchar(50), 
	carno nvarchar(20), 
	trant nvarchar(20), 
	tmo int, 
	tmemo nvarchar(200)
) 

insert into @tmp
select ROW_NUMBER()over(partition by b.noa order by b.noa),1,'0' gno,a.noa,b.noq,(case when a.typea='1' then '廠內' else '委外' end),a.storeno,a.store,a.storinno,a.storin,a.datea,b.productno, 
b.product,b.unit,b.mount,b.memo,case when len(c.nick)>0 then c.nick else LEFT(a.cardeal,3) end, 
a.carno,a.trantype,0,a.memo 
from cng[1] a 
left join cngs[1] b on a.noa = b.noa 
left join cardeal c on a.cardealno = c.noa 
where (a.noa between @t_bnoa and @t_enoa) 
and (a.datea between @t_bdate and @t_edate) 

declare @a_noa nvarchar(30)
declare @a_count int
declare @idno int
declare @k int = 0 ----差幾頁
declare @pageCount int
declare @orderno int
declare @pageno int

declare cursor_table cursor for
	select noa,count(*),max(orderno) from @tmp group by noa
open cursor_table
fetch next from cursor_table
into @a_noa,@a_count,@orderno
while(@@FETCH_STATUS <> -1)
begin		
	if(@a_count > @t_pageline)
	begin
		set @k = CEILING((cast(@a_count as float)/@t_pageline))
		while(@k > 0)
		begin
			update @tmp set pageno = @k where orderno > ((@k-1)*@t_pageline) and orderno <= (@k*@t_pageline)
			set @k -=1
		end
	end
	fetch next from cursor_table
	into @a_noa,@a_count,@orderno
end
close cursor_table
deallocate cursor_table
update @tmp set orderno = orderno-((pageno-1)*@t_pageline)
declare cursor_table cursor for
	select distinct noa,max(orderno),pageno,min(idno),count(*) from @tmp group by noa,pageno
open cursor_table
fetch next from cursor_table
into @a_noa,@orderno,@pageno,@idno,@a_count
while(@@FETCH_STATUS <> -1)
begin		
	set @k = @t_pageline -(@a_count%@t_pageline)
	set @pageCount = @a_count/@t_pageline
	if(@k < @t_pageline and (@pageCount =0))
	begin
		while(@k > 0)
		begin
			insert into @tmp(gno,orderno,pageno,noa)
				select '0',(@orderno+1),@pageno,@a_noa from @tmp where idno = @idno
			set @k = @k-1
			set @orderno = @orderno +1
		end
	end
	insert into @tmp(gno,orderno,pageno,noa,tmo)
		select '1',(@t_pageline+1),pageno,noa,sum(mount) from @tmp where gno=0 and noa=@a_noa and pageno=@pageno group by noa,pageno
	insert into @tmp(gno,orderno,pageno,noa) 
		select '2',(@t_pageline+2),pageno,noa from @tmp where gno=0 and noa=@a_noa and pageno=@pageno group by noa,pageno
	fetch next from cursor_table
	into @a_noa,@orderno,@pageno,@idno,@a_count
end
close cursor_table
deallocate cursor_table

update a set tmo=(select SUM(mount) from @tmp where a.noa=noa and gno='0') from @tmp a where gno='2'

select idno,orderno,pageno,gno,noa,noq,typea,sno,store,ino,storin,datea,pno,product,unit,memo,cardeal,carno,trant,tmemo
,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,mount),1)),4,12)) mount
,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,tmo),1)),4,12)) tmo
from @tmp 
order by noa ,pageno,gno,orderno;