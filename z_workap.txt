z_workap1:--z_workap1
declare @t_bdate nvarchar(20)
declare @t_edate nvarchar(20)
declare @t_noa nvarchar(30)
declare @t_merger nvarchar(30)

set @t_bdate = case when '#non' = [2] then '' else [2] end
set @t_edate = case when '#non' = [3] then CHAR(255) else [3] end
set @t_noa = case when '#non' = [4] then '' else [4] end
set @t_merger = case when '#non' = [5] then '' else [5] end

--declare @tmp table(
--	gno nvarchar(1),
--	a_typea nvarchar(20),
--	a_datea nvarchar(10),
--	a_noa nvarchar(20),
--	a_station nvarchar(10),
--	a_process nvarchar(30),
--	a_workno nvarchar(20),
--	a_store nvarchar(20),
--	a_cuano nvarchar(50),
--	a_cuadate nvarchar(10),
--	a_ordeno nvarchar(50),
--	a_mold nvarchar(30),
--	a_productno nvarchar(30),
--	a_products nvarchar(50),
--	a_memo nvarchar(580),
--	b_productno nvarchar(30),
--	b_products nvarchar(50),
--	b_unit nvarchar(4),
--	b_mount float,
--	b_weight float,
--	b_process nvarchar(30),
--	b_typea nvarchar(10),
--	b_mechno nvarchar(30),
--	b_mechs nvarchar(90),
--	b_memo nvarchar(60)
--)
--insert into @tmp
--select
--	'0',
--	case when b.typea = 1 then '發料' else '退料' end typea,
--	b.datea,b.noa,b.station,b.process,b.workno,b.store,b.cuano,b.cuadate,b.ordeno + '-' + b.no2,b.mold,b.productno,
--	b.product,b.memo,a.productno,a.product,a.unit,a.mount,a.weight,a.process,a.typea,a.mechno,a.mech,a.memo
--from workas[1] a
--left join worka[1] b on a.noa = b.noa
--where b.datea between @t_bdate and @t_edate and (len(@t_noa) = 0 or b.noa = @t_noa)
--insert into @tmp(gno,a_noa)
--	select '1',a_noa from @tmp group by a_noa
--select * from @tmp order by a_noa,gno
---************************************************************************************************

declare @tmp table(
	--rceno int identity(0,1),
	gno nvarchar(1),
	a_typea nvarchar(20),
	a_datea nvarchar(10),
	a_timea nvarchar(10),
	a_noa nvarchar(20),
	a_station nvarchar(10),
	a_process nvarchar(30),
	a_store nvarchar(20),
	a_mold nvarchar(30),
	a_memo nvarchar(580),
	a_mechno nvarchar(30),
	a_mechs nvarchar(90),
	
	b_productno nvarchar(30),
	b_products nvarchar(50),
	b_unit nvarchar(4),
	b_mount float,
	b_weight float,
	b_typea nvarchar(10),
	b_memo nvarchar(60),
	b_workno nvarchar(90),
	b_workmount float
)

if(len(@t_merger)=0)
begin
	insert into @tmp ( gno,a_typea,a_datea,a_timea,a_noa,a_station,a_process,a_store,a_mold,a_memo,a_mechno,a_mechs)
	select '0',typea,datea,timea,noa,station,process,store,mold,memo,mechno,mech from view_worka
	insert into @tmp ( gno,a_typea,a_datea,a_timea,a_noa,a_station,a_process,a_store,a_mold,a_memo,a_mechno,a_mechs)
	select '1',typea,datea,timea,noa,station,process,store,mold,memo,mechno,mech from view_worka
	insert into @tmp ( gno,a_noa,b_productno,b_products,b_unit,b_mount,b_weight,b_typea,b_memo,b_workno,b_workmount)
	select '2',a.noa,a.productno,a.product,a.unit,a.mount,a.weight,a.typea,a.memo,a.workno,b.mount from view_workas a
	left join view_work b on a.workno = b.noa
	insert into @tmp ( gno,a_typea,a_datea,a_timea,a_noa,a_station,a_process,a_store,a_mold,a_memo,a_mechno,a_mechs) 
	select '5',typea,datea,timea,noa,station,process,store,mold,memo,mechno,mech from view_worka
end
else
begin
	insert into @tmp ( gno,a_typea,a_datea,a_timea,a_noa,a_station,a_process,a_store,a_mold,a_memo,a_mechno,a_mechs)
	select '0',typea,datea,timea,noa,station,process,store,mold,memo,mechno,mech from view_worka
	insert into @tmp ( gno,a_typea,a_datea,a_timea,a_noa,a_station,a_process,a_store,a_mold,a_memo,a_mechno,a_mechs)
	select '3',typea,datea,timea,noa,station,process,store,mold,memo,mechno,mech from view_worka
	insert into @tmp ( gno,a_noa,b_productno,b_products,b_unit,b_mount,b_weight,b_workmount)
	select '4',a.noa,a.productno,a.product,a.unit,sum(a.mount),sum(a.weight),sum(b.mount) from view_workas a
	left join view_work b on a.workno = b.noa
	group by a.noa,a.productno,a.product,a.unit
	insert into @tmp ( gno,a_typea,a_datea,a_timea,a_noa,a_station,a_process,a_store,a_mold,a_memo,a_mechno,a_mechs) 
	select '5',typea,datea,timea,noa,station,process,store,mold,memo,mechno,mech from view_worka
end

select 
gno,case when a_typea = 1 then '發料' else '退料' end a_typea,a_datea,a_timea,a_noa,a_station,a_process,a_store,a_mold,a_memo
,a_mechno,a_mechs,b_productno,b_products,b_unit
,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,b_mount),1)),4,12)) b_mount
,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,b_weight),1)),4,12)) b_weight
,case b_typea when '1' then '商品' when '2' then '製成品' when '3' then '在製品' when '4' then '原料' when '5' then '物料'
	when '6' then '下腳品' when '7' then '加工' end b_typea
,b_memo,b_workno
,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,b_workmount),1)),4,12)) b_workmount
from @tmp order by a_noa,gno

;
-----------------------------------------------------------------------------------------------------------------------------------------------
z_workap2:--z_workap2
declare @t_xbdate nvarchar(10)
declare @t_xedate nvarchar(10)
declare @t_bsnno nvarchar(10)
declare @t_esnno nvarchar(10)
declare @t_bseno nvarchar(10)
declare @t_eseno nvarchar(10)
declare @t_bpno nvarchar(10)
declare @t_epno nvarchar(10)

set @t_xbdate = case when '#non' = [6] then '' else [6] end
set @t_xedate = case when '#non' = [7] then CHAR(255) else [7] end
set @t_bsnno = case when '#non' = [8] then '' else [8] end
set @t_esnno = case when '#non' = [9] then CHAR(255) else [9] end
set @t_bseno = case when '#non' = [10] then '' else [10] end
set @t_eseno = case when '#non' = [11] then CHAR(255) else [11] end
set @t_bpno = case when '#non' = [12] then '' else [12] end
set @t_epno = case when '#non' = [13] then CHAR(255) else [13] end

declare @t_stkdate nvarchar(30) --倉庫運算日期
set @t_stkdate=CONVERT (VARCHAR(7), GETDATE(),12 )+0890000
set @t_stkdate=left(@t_stkdate,3)+'/'+substring(@t_stkdate,4,2)+'/'+right(@t_stkdate,2)

declare @tmpa table(
	pno nvarchar(50),
	product nvarchar(200),
	stationno nvarchar(50),
	station nvarchar(100),
	gmount float,
	stktmount float,
	diffmount float
)

declare @tmp table(
	gno nvarchar(2),
	pno nvarchar(50),
	product nvarchar(200),
	stationno nvarchar(50),
	station nvarchar(100),
	gmount float,
	stktmount float,
	diffmount float,
	storeno nvarchar(50),
	store nvarchar(100),
	stkmount float
)

insert @tmpa (pno,product,stationno,station,gmount,stktmount)
select b.productno,MAX(b.product),a.stationno,MAX(a.station),round(SUM(b.mount-gmount),2)mount
,(select SUM(mount) mount from stkucc(@t_stkdate,'','') where productno=b.productno and storeno between @t_bseno and @t_eseno)stktmount
from view_work a left join view_works b on a.noa=b.noa 
where a.enda!='1' and a.stationno!=''
and (a.cuadate between @t_xbdate and @t_xedate)
and (a.stationno between @t_bsnno and @t_esnno)
and (b.productno between @t_bpno and @t_epno)
group by b.productno,a.stationno
order by b.productno,a.stationno

update @tmpa set diffmount=-1*(stktmount-gmount)
update @tmpa set diffmount=0 where diffmount<0

insert @tmp
select '0',a.pno,a.product,a.stationno,a.station,a.gmount,a.stktmount,a.diffmount,b.storeno,b.store,b.mount
from @tmpa a left join (select * from stkucc(@t_stkdate,'','') where mount!=0 and storeno between @t_bseno and @t_eseno) b 
on a.pno=b.productno 
order by a.pno,a.stationno,b.storeno

update @tmp set store='(無)' where store is null or store=''

select gno,pno,product,stationno,station,storeno,store
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,gmount),1)),0,30)) gmount
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,stktmount),1)),0,30)) stktmount
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,diffmount),1)),0,30)) diffmount
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,stkmount),1)),0,30)) stkmount
from @tmp order by gno,pno,stationno
;