z_anadc1:--z_anadc1
	declare @t_bdate nvarchar(10)
	declare @t_edate nvarchar(10)
	declare @t_mon nvarchar(10)
	declare @t_bcustno nvarchar(20)
	declare @t_ecustno nvarchar(20)
	declare @t_bpartno nvarchar(20)
	declare @t_epartno nvarchar(20)
	declare @t_bsssno nvarchar(20)
	declare @t_esssno nvarchar(20)

	set @t_bdate = case when '#non'=[2] then '' else [2] end
	set @t_edate = case when '#non'=[3] then char(255) else [3] end
	set @t_mon = case when '#non'=[4] then '' else [4] end
	set @t_bcustno = case when '#non'=[5] then '' else [5] end
	set @t_ecustno = case when '#non'=[6] then CHAR(255) else [6] end
	set @t_bpartno = case when '#non'=[7] then '' else [7] end
	set @t_epartno = case when '#non'=[8] then char(255) else [8] end
	set @t_bsssno = case when '#non'=[9] then '' else [9] end
	set @t_esssno = case when '#non'=[10] then char(255) else [10] end
--*****************************************************************************************
	declare @result table(
		gno nvarchar(1),
		recno int identity(1,1),
		custno nvarchar(20),
		comp nvarchar(50),
		total float
	)
	insert into @result 
	select * from ( 
		--目前cara單據作業每個車主的貢獻(不含舊車牌帳且不含上期欠款與收款) 
		select '0'gno,a.carownerno custno,b.namea comp,a.total from ( 
		select b.carownerno,sum(a.outmoney)total 
		from caras a left join car2 b on a.carno=b.noa and b.carownerno!='' 
		where a.caritemno!='001' and a.outmoney!=0 and (datea between @t_bdate and @t_edate) group by b.carownerno )a 
		left join carOwner b on a.carownerno=b.noa
		union all 
		--目前vcc每個客戶的貢獻(排除健勞勞退) 
		select '0'gno,a.custno,b.comp,a.total from ( 
		select custno,SUM(total)total from vcc[1] where (left(kind,4)!='健勞勞退') and (datea between @t_bdate and @t_edate) group by custno)a 
		left join cust b on a.custno=b.noa 
		union all 
		--目前trans每個客戶的貢獻 
		select '0'gno,a.custno,b.comp,a.total from ( 
		select custno,sum(total2) total from trans[1] where (trandate between @t_bdate and @t_edate) group by custno)a 
		left join cust b on a.custno=b.noa 
	)result where custno between @t_bcustno and @t_ecustno order by total desc 
	
	--插入合計
	insert into @result 
	select '1','','',sum(total) from @result

	select gno,recno,custno,comp
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,total),1)),4,12)) total
	from @result;
--*****************************************************************************************	
z_anadc2:--z_anadc2
	declare @t_bdate nvarchar(10)
	declare @t_edate nvarchar(10)
	declare @t_mon nvarchar(10)
	declare @t_bcustno nvarchar(20)
	declare @t_ecustno nvarchar(20)
	declare @t_bpartno nvarchar(20)
	declare @t_epartno nvarchar(20)
	declare @t_bsssno nvarchar(20)
	declare @t_esssno nvarchar(20)

	set @t_bdate = case when '#non'=[2] then '' else [2] end
	set @t_edate = case when '#non'=[3] then char(255) else [3] end
	set @t_mon = case when '#non'=[4] then '' else [4] end
	set @t_bcustno = case when '#non'=[5] then '' else [5] end
	set @t_ecustno = case when '#non'=[6] then CHAR(255) else [6] end
	set @t_bpartno = case when '#non'=[7] then '' else [7] end
	set @t_epartno = case when '#non'=[8] then char(255) else [8] end
	set @t_bsssno = case when '#non'=[9] then '' else [9] end
	set @t_esssno = case when '#non'=[10] then char(255) else [10] end
--*****************************************************************************************	
	declare @result table(
		gno nvarchar(1),
		recno int identity(1,1),
		custno nvarchar(20),
		comp nvarchar(50),
		total float
	)
	insert into @result 
	select * from ( 
		--目前cara單據作業每個車主的貢獻(不含舊車牌帳且不含上期欠款與收款) 
		select '0'gno,a.carownerno custno,b.namea comp,a.total from ( 
		select b.carownerno,sum(a.outmoney)total 
		from caras a left join car2 b on a.carno=b.noa and b.carownerno!='' 
		where a.caritemno!='001' and a.outmoney!=0 and (datea between @t_bdate and @t_edate) group by b.carownerno )a 
		left join carOwner b on a.carownerno=b.noa
		union all 
		--目前vcc每個客戶的貢獻(排除健勞勞退) 
		select '0'gno,a.custno,b.comp,a.total from ( 
		select custno,SUM(total)total from vcc[1] where (left(kind,4)!='健勞勞退') and (datea between @t_bdate and @t_edate) group by custno)a 
		left join cust b on a.custno=b.noa 
		union all 
		--目前trans每個客戶的貢獻 
		select '0'gno,a.custno,b.comp,a.total from ( 
		select custno,sum(total2) total from trans[1] where (trandate between @t_bdate and @t_edate) group by custno)a 
		left join cust b on a.custno=b.noa 
	)result where custno between @t_bcustno and @t_ecustno order by total desc 
	
	--插入合計
	insert into @result 
	select '1','','',sum(total) from @result

	--插入明細
	declare @t_result table( 
		gno nvarchar(1), 
		recno int, 
		custno nvarchar(20), 
		comp nvarchar(50), 
		datea nvarchar(10),
		itno nvarchar(20),
		item nvarchar(50),
		total float,
		memo nvarchar(MAX)
	)
	
	declare @gno nvarchar(1) 
	declare @recno int
	declare @custno nvarchar(20)
	declare @comp nvarchar(50)
	declare @total float
	
	declare cursor_table cursor for
	select * from @result
	open cursor_table
	fetch next from cursor_table
	into @gno,@recno,@custno,@comp,@total
	while(@@FETCH_STATUS <> -1)
	begin
		if(@gno='0')
		begin
			insert into @t_result
			select '1',@recno,@custno,@comp,'','','',@total,''
			insert into @t_result
			select * from(
				--caras
				select '0'gno,@recno recno,@custno custno,''comp,a.datea,a.caritemno,(a.carno+a.caritem)item,a.outmoney,a.memo from caras a left join car2 b
				on a.carno=b.noa where b.carownerno=@custno and a.caritemno!='001' and a.outmoney!=0 and (datea between @t_bdate and @t_edate)
				union all
				--vcc
				select '0'gno,@recno recno,@custno custno,''comp,a.datea,b.productno,b.product,b.total,b.memo from vcc[1] a left join vccs[1] b on a.noa=b.noa
				where a.custno=@custno and left(a.kind,4)!='健勞勞退' and (a.datea between @t_bdate and @t_edate)
				union all
				--trans
				select '0'gno,@recno recno,@custno custno,''comp,trandate,uccno,carno+'-'+product+'('+straddr+')',total2,po+memo from trans[1]
				where custno=@custno and (trandate between @t_bdate and @t_edate)
			)t_result order by datea
			
		end
		else
		begin
			insert into @t_result
			select '2',@recno,@custno,@comp,'','','',@total,''
		end
		
		fetch next from cursor_table
		into @gno,@recno,@custno,@comp,@total
	end
	close cursor_table
	deallocate cursor_table

	select gno,recno,custno,comp,datea,itno,item,memo
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,total),1)),4,12)) total 
	from @t_result;
	
--trans車牌與交運日(知道當天哪台車運輸哪天東西)
--select '0'gno,@recno recno,@custno custno,''comp,trandate,
--(select uccno+',' from trans[1] b where a.carno=b.carno and a.trandate=b.trandate and custno=@custno FOR XML PATH('')),
--(select product+',' from trans[1] b where a.carno=b.carno and a.trandate=b.trandate and custno=@custno FOR XML PATH('')),
--sum(total2),(select memo+',' from trans[1] b where a.carno=b.carno and a.trandate=b.trandate and custno=@custno FOR XML PATH(''))
-- from trans[1] a
--where custno=@custno and (trandate between @t_bdate and @t_edate) 
--group by trandate,carno
	
--*****************************************************************************************
z_anadc3:--z_anadc3
	declare @t_bdate nvarchar(10)
	declare @t_edate nvarchar(10)
	declare @t_mon nvarchar(10)
	declare @t_bcustno nvarchar(20)
	declare @t_ecustno nvarchar(20)
	declare @t_bpartno nvarchar(20)
	declare @t_epartno nvarchar(20)
	declare @t_bsssno nvarchar(20)
	declare @t_esssno nvarchar(20)

	set @t_bdate = case when '#non'=[2] then '' else [2] end
	set @t_edate = case when '#non'=[3] then char(255) else [3] end
	set @t_mon = case when '#non'=[4] then '' else [4] end
	set @t_bcustno = case when '#non'=[5] then '' else [5] end
	set @t_ecustno = case when '#non'=[6] then CHAR(255) else [6] end
	set @t_bpartno = case when '#non'=[7] then '' else [7] end
	set @t_epartno = case when '#non'=[8] then char(255) else [8] end
	set @t_bsssno = case when '#non'=[9] then '' else [9] end
	set @t_esssno = case when '#non'=[10] then char(255) else [10] end
--*****************************************************************************************	
	declare @result table(
		sssno nvarchar(20),
		namea nvarchar(50),
		total float
	)
	--cara
	insert into @result
	select a.sssno,b.namea,a.total from (
	select sssno,sum(outmoney)total
	from cara a left join caras b on a.noa=b.noa
	where b.caritemno!='001' and b.outmoney!=0 
	and (sssno between @t_bsssno and @t_esssno) and (b.datea between @t_bdate and @t_edate)
	group by sssno)a left join sss b on a.sssno=b.noa
	
	--vcc(目前先根據客戶主檔內的業務來做業績歸屬，若有兩人業務則分攤，如果客戶業務沒有業務，則以vcc內的業務或收款人做業績)
	declare @tmp table(
		sssno nvarchar(20),
		total float
	)--暫存每個業務金額
	
	insert into @tmp
	select noa,0 from sss
	
	declare @vccno nvarchar(20)--vcc的salesno
	declare @vccno2 nvarchar(20)--vcc的salesno2
	declare @custno nvarchar(20)--cust的salesno
	declare @custno2 nvarchar(20)--cust的salesno2
	declare @total float
	
	declare cursor_table cursor for
	select a.salesno,a.salesno2,b.salesno,b.salesno2,a.total
	from vcc[1] a left join cust b on a.custno=b.noa
	where (left(kind,4)!='健勞勞退') and (datea between @t_bdate and @t_edate)
	open cursor_table
	fetch next from cursor_table
	into @vccno,@vccno2,@custno,@custno2,@total
	while(@@FETCH_STATUS <> -1)
	begin
		if(LEN(@custno)>0 or LEN(@custno2)>0)--客戶主檔業務有值
		begin
			if(LEN(@custno)>0 and LEN(@custno2)>0) --兩個業務都有填
			begin
				--業務1
				update @tmp
				set total=total+round((@total/2),0)
				where sssno=@custno
				--業務2
				update @tmp
				set total=total+round((@total/2),0)
				where sssno=@custno2
			end
			else if(LEN(@custno)>0)--只填第一個業務
			begin
				--業務1
				update @tmp
				set total=total+@total
				where sssno=@custno
			end
			else--只填第二個業務
			begin
				--業務2
				update @tmp
				set total=total+@total
				where sssno=@custno2
			end
		end
		else--客戶主檔沒有填寫業務
		begin
			if(LEN(@vccno)>0)--vcc業務有值
			begin
				update @tmp
				set total=total+@total
				where sssno=@vccno
			end
			else if(LEN(@vccno2)>0)--vcc業務無值，以收款人
			begin
				update @tmp
				set total=total+@total
				where sssno=@vccno2
			end
		end
		fetch next from cursor_table
		into @vccno,@vccno2,@custno,@custno2,@total
	end
	close cursor_table
	deallocate cursor_table
	
	
	--tran(不計算外務人員績效，直接以客戶主檔的業務)
	declare cursor_table cursor for
	select b.salesno,b.salesno2,total2 from trans[1] a left join cust b on a.custno=b.noa
	where (trandate between @t_bdate and @t_edate)
	open cursor_table
	fetch next from cursor_table
	into @custno,@custno2,@total
	while(@@FETCH_STATUS <> -1)
	begin
		if(LEN(@custno)>0 or LEN(@custno2)>0)--客戶主檔業務有值
		begin
			if(LEN(@custno)>0 and LEN(@custno2)>0) --兩個業務都有填
			begin
				--業務1
				update @tmp
				set total=total+round((@total/2),0)
				where sssno=@custno
				--業務2
				update @tmp
				set total=total+round((@total/2),0)
				where sssno=@custno2
			end
			else if(LEN(@custno)>0)--只填第一個業務
			begin
				--業務1
				update @tmp
				set total=total+@total
				where sssno=@custno
			end
			else--只填第二個業務
			begin
				--業務2
				update @tmp
				set total=total+@total
				where sssno=@custno2
			end
		end
		
		fetch next from cursor_table
		into @custno,@custno2,@total
	end
	close cursor_table
	deallocate cursor_table
	
	--清除業績為0的員工或不再員工範圍內員工
	delete @tmp
	where total=0 or (sssno not between @t_bsssno and @t_esssno)
	
	--結果插入輸出table
	declare @sssno nvarchar(20)
	declare @namea nvarchar(50)
	
	declare cursor_table cursor for
	select a.sssno,b.namea,a.total from @tmp a left join sss b on a.sssno=b.noa
	open cursor_table
	fetch next from cursor_table
	into @sssno,@namea,@total
	while(@@FETCH_STATUS <> -1)
	begin
		if((select COUNT(*) from @result where sssno=@sssno)>0) --輸出已存在員工
		begin
			update @result
			set total=total+@total
			where sssno=@sssno
		end
		else
		begin
			insert into @result
			select @sssno,@namea,@total
		end
		fetch next from cursor_table
		into @sssno,@namea,@total
	end
	close cursor_table
	deallocate cursor_table
	
	--排名並輸出
	declare @t_result table(
		gno nvarchar(1),
		recno int identity(1,1),
		sssno nvarchar(20),
		namea nvarchar(50),
		total float
	)
	insert into @t_result
	select '0',sssno,namea,total from @result
	order by total desc
	
	--插入合計
	insert into @t_result 
	select '1','','',sum(total) from @t_result

	select gno,recno,sssno,namea
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,total),1)),4,12)) total
	from @t_result;
--*****************************************************************************************
z_anadc4:--z_anadc4
	declare @t_bdate nvarchar(10)
	declare @t_edate nvarchar(10)
	declare @t_mon nvarchar(10)
	declare @t_bcustno nvarchar(20)
	declare @t_ecustno nvarchar(20)
	declare @t_bpartno nvarchar(20)
	declare @t_epartno nvarchar(20)
	declare @t_bsssno nvarchar(20)
	declare @t_esssno nvarchar(20)

	set @t_bdate = case when '#non'=[2] then '' else [2] end
	set @t_edate = case when '#non'=[3] then char(255) else [3] end
	set @t_mon = case when '#non'=[4] then '' else [4] end
	set @t_bcustno = case when '#non'=[5] then '' else [5] end
	set @t_ecustno = case when '#non'=[6] then CHAR(255) else [6] end
	set @t_bpartno = case when '#non'=[7] then '' else [7] end
	set @t_epartno = case when '#non'=[8] then char(255) else [8] end
	set @t_bsssno = case when '#non'=[9] then '' else [9] end
	set @t_esssno = case when '#non'=[10] then char(255) else [10] end
--*****************************************************************************************	
	declare @result table(
		sssno nvarchar(20),
		namea nvarchar(50),
		total float
	)
	--cara
	insert into @result
	select a.sssno,b.namea,a.total from (
	select sssno,sum(outmoney)total
	from cara a left join caras b on a.noa=b.noa
	where b.caritemno!='001' and b.outmoney!=0 
	and (sssno between @t_bsssno and @t_esssno) and (b.datea between @t_bdate and @t_edate)
	group by sssno)a left join sss b on a.sssno=b.noa
	
	--vcc(目前先根據客戶主檔內的業務來做業績歸屬，若有兩人業務則分攤，如果客戶業務沒有業務，則以vcc內的業務或收款人做業績)
	declare @tmp table(
		sssno nvarchar(20),
		total float
	)--暫存每個業務金額
	
	insert into @tmp
	select noa,0 from sss
	
	declare @vccno nvarchar(20)--vcc的salesno
	declare @vccno2 nvarchar(20)--vcc的salesno2
	declare @custno nvarchar(20)--cust的salesno
	declare @custno2 nvarchar(20)--cust的salesno2
	declare @total float
	
	declare cursor_table cursor for
	select a.salesno,a.salesno2,b.salesno,b.salesno2,a.total
	from vcc[1] a left join cust b on a.custno=b.noa
	where (left(kind,4)!='健勞勞退') and (datea between @t_bdate and @t_edate)
	open cursor_table
	fetch next from cursor_table
	into @vccno,@vccno2,@custno,@custno2,@total
	while(@@FETCH_STATUS <> -1)
	begin
		if(LEN(@custno)>0 or LEN(@custno2)>0)--客戶主檔業務有值
		begin
			if(LEN(@custno)>0 and LEN(@custno2)>0) --兩個業務都有填
			begin
				--業務1
				update @tmp
				set total=total+round((@total/2),0)
				where sssno=@custno
				--業務2
				update @tmp
				set total=total+round((@total/2),0)
				where sssno=@custno2
			end
			else if(LEN(@custno)>0)--只填第一個業務
			begin
				--業務1
				update @tmp
				set total=total+@total
				where sssno=@custno
			end
			else--只填第二個業務
			begin
				--業務2
				update @tmp
				set total=total+@total
				where sssno=@custno2
			end
		end
		else--客戶主檔沒有填寫業務
		begin
			if(LEN(@vccno)>0)--vcc業務有值
			begin
				update @tmp
				set total=total+@total
				where sssno=@vccno
			end
			else if(LEN(@vccno2)>0)--vcc業務無值，以收款人
			begin
				update @tmp
				set total=total+@total
				where sssno=@vccno2
			end
		end
		fetch next from cursor_table
		into @vccno,@vccno2,@custno,@custno2,@total
	end
	close cursor_table
	deallocate cursor_table
	
	
	--tran(不計算外務人員績效，直接以客戶主檔的業務)
	declare cursor_table cursor for
	select b.salesno,b.salesno2,total2 from trans[1] a left join cust b on a.custno=b.noa
	where (trandate between @t_bdate and @t_edate)
	open cursor_table
	fetch next from cursor_table
	into @custno,@custno2,@total
	while(@@FETCH_STATUS <> -1)
	begin
		if(LEN(@custno)>0 or LEN(@custno2)>0)--客戶主檔業務有值
		begin
			if(LEN(@custno)>0 and LEN(@custno2)>0) --兩個業務都有填
			begin
				--業務1
				update @tmp
				set total=total+round((@total/2),0)
				where sssno=@custno
				--業務2
				update @tmp
				set total=total+round((@total/2),0)
				where sssno=@custno2
			end
			else if(LEN(@custno)>0)--只填第一個業務
			begin
				--業務1
				update @tmp
				set total=total+@total
				where sssno=@custno
			end
			else--只填第二個業務
			begin
				--業務2
				update @tmp
				set total=total+@total
				where sssno=@custno2
			end
		end
		
		fetch next from cursor_table
		into @custno,@custno2,@total
	end
	close cursor_table
	deallocate cursor_table
	
	--清除業績為0的員工或不再員工範圍內員工
	delete @tmp
	where total=0 or (sssno not between @t_bsssno and @t_esssno)
	
	--結果插入輸出table
	declare @sssno nvarchar(20)
	declare @namea nvarchar(50)
	
	declare cursor_table cursor for
	select a.sssno,b.namea,a.total from @tmp a left join sss b on a.sssno=b.noa
	open cursor_table
	fetch next from cursor_table
	into @sssno,@namea,@total
	while(@@FETCH_STATUS <> -1)
	begin
		if((select COUNT(*) from @result where sssno=@sssno)>0) --輸出已存在員工
		begin
			update @result
			set total=total+@total
			where sssno=@sssno
		end
		else
		begin
			insert into @result
			select @sssno,@namea,@total
		end
		fetch next from cursor_table
		into @sssno,@namea,@total
	end
	close cursor_table
	deallocate cursor_table
	
	--排名並輸出
	declare @t_result table(
		gno nvarchar(1),
		recno int identity(1,1),
		sssno nvarchar(20),
		namea nvarchar(50),
		total float
	)
	insert into @t_result
	select '0',sssno,namea,total from @result
	order by total desc
	
	--插入合計
	insert into @t_result 
	select '1','','',sum(total) from @t_result

	
	--插入每個員工與公司的業績
	declare @tmpa table(
		sssno nvarchar(20),
		custno nvarchar(20),
		total float
	)
	insert into @tmpa
	select a.noa,b.noa,0 from sss a,cust b
	
	declare @xcustno nvarchar(20)
	
	declare cursor_table cursor for
	select a.custno,a.salesno,a.salesno2,b.salesno,b.salesno2,a.total
	from vcc[1] a left join cust b on a.custno=b.noa
	where (left(kind,4)!='健勞勞退') and (datea between @t_bdate and @t_edate)
	open cursor_table
	fetch next from cursor_table
	into @xcustno,@vccno,@vccno2,@custno,@custno2,@total
	while(@@FETCH_STATUS <> -1)
	begin
		if(LEN(@custno)>0 or LEN(@custno2)>0)--客戶主檔業務有值
		begin
			if(LEN(@custno)>0 and LEN(@custno2)>0) --兩個業務都有填
			begin
				--業務1
				update @tmpa
				set total=total+round((@total/2),0)
				where sssno=@custno and custno=@xcustno
				--業務2
				update @tmpa
				set total=total+round((@total/2),0)
				where sssno=@custno2 and custno=@xcustno
			end
			else if(LEN(@custno)>0)--只填第一個業務
			begin
				--業務1
				update @tmpa
				set total=total+@total
				where sssno=@custno and custno=@xcustno
			end
			else--只填第二個業務
			begin
				--業務2
				update @tmpa
				set total=total+@total
				where sssno=@custno2 and custno=@xcustno
			end
		end
		else--客戶主檔沒有填寫業務
		begin
			if(LEN(@vccno)>0)--vcc業務有值
			begin
				update @tmpa
				set total=total+@total
				where sssno=@vccno and custno=@xcustno
			end
			else if(LEN(@vccno2)>0)--vcc業務無值，以收款人
			begin
				update @tmpa
				set total=total+@total
				where sssno=@vccno2 and custno=@xcustno
			end
		end
		fetch next from cursor_table
		into @xcustno,@vccno,@vccno2,@custno,@custno2,@total
	end
	close cursor_table
	deallocate cursor_table
	
	declare cursor_table cursor for
	select a.custno,b.salesno,b.salesno2,total2 from trans[1] a left join cust b on a.custno=b.noa
	where (trandate between @t_bdate and @t_edate)
	open cursor_table
	fetch next from cursor_table
	into @xcustno,@custno,@custno2,@total
	while(@@FETCH_STATUS <> -1)
	begin
		if(LEN(@custno)>0 or LEN(@custno2)>0)--客戶主檔業務有值
		begin
			if(LEN(@custno)>0 and LEN(@custno2)>0) --兩個業務都有填
			begin
				--業務1
				update @tmpa
				set total=total+round((@total/2),0)
				where sssno=@custno and custno=@xcustno
				--業務2
				update @tmpa
				set total=total+round((@total/2),0)
				where sssno=@custno2 and custno=@xcustno
			end
			else if(LEN(@custno)>0)--只填第一個業務
			begin
				--業務1
				update @tmpa
				set total=total+@total
				where sssno=@custno and custno=@xcustno
			end
			else--只填第二個業務
			begin
				--業務2
				update @tmpa
				set total=total+@total
				where sssno=@custno2 and custno=@xcustno
			end
		end
		
		fetch next from cursor_table
		into @xcustno,@custno,@custno2,@total
	end
	close cursor_table
	deallocate cursor_table
	
	--清除業績為0的員工或不再員工範圍內員工
	delete @tmpa
	where total=0 or (sssno not between @t_bsssno and @t_esssno)
	
	
	--插入明細
	declare @x_result table( 
		gno nvarchar(1), 
		recno int, 
		sssno nvarchar(20), 
		namea nvarchar(50), 
		custno nvarchar(20), 
		comp nvarchar(50), 
		total float
	)
	
	declare @gno nvarchar(1) 
	declare @recno int
	
	declare cursor_table cursor for
	select gno,recno,sssno,namea,total from @t_result
	open cursor_table
	fetch next from cursor_table
	into @gno,@recno,@sssno,@namea,@total
	while(@@FETCH_STATUS <> -1)
	begin
		if(@gno=0)
		begin
			insert into @x_result
			select '1',@recno,@sssno,@namea,'','',@total
			
			insert into @x_result
			select * from (
			select '0'gno,@recno recno,@sssno sssno,@namea namea,a.custno custno,b.namea comp,a.total total from (
			select carownerno custno ,sum(outmoney) total from cara a left join caras b on a.noa=b.noa
			where b.caritemno!='001' and b.outmoney!=0 and (a.sssno=@sssno) and (b.datea between @t_bdate and @t_edate)
			group by carownerno)a left join carOwner b on a.custno=b.noa
			union all
			select '0'gno,@recno recno,@sssno sssno,@namea namea,a.custno custno,b.comp comp,a.total total from @tmpa a left join cust b on a.custno=b.noa
			where sssno=@sssno)x_result order by custno
		end
		else
		begin
			insert into @x_result
			select '2',@recno,@sssno,@namea,'','',@total
		end
		
		fetch next from cursor_table
		into @gno,@recno,@sssno,@namea,@total
	end
	close cursor_table
	deallocate cursor_table
	
	select gno,recno,sssno,namea,custno,comp
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,total),1)),4,12)) total
	from @x_result;
--*****************************************************************************************
z_anadc5:--z_anadc5
	declare @t_bdate nvarchar(10)
	declare @t_edate nvarchar(10)
	declare @t_mon nvarchar(10)
	declare @t_bcustno nvarchar(20)
	declare @t_ecustno nvarchar(20)
	declare @t_bpartno nvarchar(20)
	declare @t_epartno nvarchar(20)
	declare @t_bsssno nvarchar(20)
	declare @t_esssno nvarchar(20)

	set @t_bdate = case when '#non'=[2] then '' else [2] end
	set @t_edate = case when '#non'=[3] then char(255) else [3] end
	set @t_mon = case when '#non'=[4] then '' else [4] end
	set @t_bcustno = case when '#non'=[5] then '' else [5] end
	set @t_ecustno = case when '#non'=[6] then CHAR(255) else [6] end
	set @t_bpartno = case when '#non'=[7] then '' else [7] end
	set @t_epartno = case when '#non'=[8] then char(255) else [8] end
	set @t_bsssno = case when '#non'=[9] then '' else [9] end
	set @t_esssno = case when '#non'=[10] then char(255) else [10] end
--*****************************************************************************************
	declare @result table( 
		partno nvarchar(10),
		custno nvarchar(20), 
		comp nvarchar(50), 
		total float 
	) 
	insert into @result 
	select * from ( 
	--目前cara單據作業每個車主的貢獻(不含舊車牌帳且不含上期欠款與收款) 
	select '07'partno,a.carownerno custno,b.namea comp,a.total from ( 
	select b.carownerno,sum(a.outmoney)total 
	from caras a left join car2 b on a.carno=b.noa and b.carownerno!='' 
	where a.caritemno!='001' and a.outmoney!=0 and (datea between @t_mon+'/01' and @t_mon+'/31') group by b.carownerno )a 
	left join carOwner b on a.carownerno=b.noa 
	union all 
	--目前vcc每個客戶的貢獻(排除健勞勞退) 
	select a.partno,a.custno,b.comp,a.total from ( 
	select custno,partno,SUM(total)total from vcc102 where (left(kind,4)!='健勞勞退') and (datea between @t_mon+'/01' and @t_mon+'/31') group by partno,custno)a 
	left join cust b on a.custno=b.noa 
	union all 
	--目前trans每個客戶的貢獻 
	select '08'partno,a.custno,b.comp,a.total from ( 
	select custno,sum(total2) total from trans102 where (trandate between @t_mon+'/01' and @t_mon+'/31') group by custno)a 
	left join cust b on a.custno=b.noa 
	)result order by custno --where custno between @t_bcustno and @t_ecustno 


	declare @tmp table( 
		gno nvarchar(1), 
		partno nvarchar(10),
		custno nvarchar(20), 
		comp nvarchar(50), 
		money float,
		salarycost float,
		partcost float,
		total float
	) 

	--插入收入
	insert into @tmp(gno,partno,custno,comp,money)
	select '0',partno,custno,comp,total from @result
	
	--插入薪資攤提
	declare @partno nvarchar(20)
	declare @total float
	
	declare cursor_table cursor for
	select b.partno,sum(a.total5) from salarys a left join sss b on a.sno=b.noa
	where a.mon=@t_mon group by b.partno
	open cursor_table
	fetch next from cursor_table
	into @partno,@total
	while(@@FETCH_STATUS <> -1)
	begin
		update @tmp
		set salarycost=round(@total*money/(select sum(money) from @tmp where partno=@partno),0)
		where partno=@partno
		
		fetch next from cursor_table
		into @partno,@total
	end
	close cursor_table
	deallocate cursor_table
	
	--插入費用攤提
	declare cursor_table cursor for
		select part,SUM(dmoney-cmoney) total from acccs102_1 a
		where (left(accc5,1)='5' or left(accc5,1)='6' or left(accc5,1)='8' or left(accc5,1)='9') and accc5!='6010.' and part!='' and (accc2 between right(@t_mon,2)+'/01' and right(@t_mon,2)+'/31')
		group by part order by part
		open cursor_table
		fetch next from cursor_table
		into @partno,@total
		while(@@FETCH_STATUS <> -1)
		begin
			update @tmp
			set partcost=round(@total*money/(select sum(money) from @tmp where partno=@partno),0)
			where partno=@partno
			
			fetch next from cursor_table
			into @partno,@total
		end
		close cursor_table
		deallocate cursor_table
		
		--更新損益
		update @tmp
		set total=isnull(money,0)-isnull(salarycost,0)-isnull(partcost,0)
	
	
	----排名並輸出所需的客戶
	declare @t_result table( 
		gno nvarchar(1), 
		recno int identity(1,1),
		partno nvarchar(10),
		part nvarchar(20),
		custno nvarchar(20), 
		comp nvarchar(50), 
		money float,
		salarycost float,
		partcost float,
		total float
	)
	insert into @t_result 
	select a.gno,a.partno,b.part,a.custno,a.comp,a.money,a.salarycost,a.partcost,a.total
	from @tmp a left join part b on a.partno=b.noa where custno between @t_bcustno and @t_ecustno
	order by custno
	
	
	--插入合計 
	insert into @t_result 
	select '1','','','','',sum(money),sum(salarycost),sum(partcost),sum(total) from @t_result 

	select gno,recno,partno,part,custno,comp 
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,money),1)),4,12)) money 
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,salarycost),1)),4,12)) salarycost 
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,partcost),1)),4,12)) partcost 
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,total),1)),4,12)) total 
	from @t_result;
--*****************************************************************************************
z_anadc6:--z_anadc6
	declare @t_bdate nvarchar(10)
	declare @t_edate nvarchar(10)
	declare @t_mon nvarchar(10)
	declare @t_bcustno nvarchar(20)
	declare @t_ecustno nvarchar(20)
	declare @t_bpartno nvarchar(20)
	declare @t_epartno nvarchar(20)
	declare @t_bsssno nvarchar(20)
	declare @t_esssno nvarchar(20)

	set @t_bdate = case when '#non'=[2] then '' else [2] end
	set @t_edate = case when '#non'=[3] then char(255) else [3] end
	set @t_mon = case when '#non'=[4] then '' else [4] end
	set @t_bcustno = case when '#non'=[5] then '' else [5] end
	set @t_ecustno = case when '#non'=[6] then CHAR(255) else [6] end
	set @t_bpartno = case when '#non'=[7] then '' else [7] end
	set @t_epartno = case when '#non'=[8] then char(255) else [8] end
	set @t_bsssno = case when '#non'=[9] then '' else [9] end
	set @t_esssno = case when '#non'=[10] then char(255) else [10] end
--*****************************************************************************************
;
--*****************************************************************************************
z_anadc7:--z_anadc7
	declare @t_bdate nvarchar(10)
	declare @t_edate nvarchar(10)
	declare @t_mon nvarchar(10)
	declare @t_bcustno nvarchar(20)
	declare @t_ecustno nvarchar(20)
	declare @t_bpartno nvarchar(20)
	declare @t_epartno nvarchar(20)
	declare @t_bsssno nvarchar(20)
	declare @t_esssno nvarchar(20)

	set @t_bdate = case when '#non'=[2] then '' else [2] end
	set @t_edate = case when '#non'=[3] then char(255) else [3] end
	set @t_mon = case when '#non'=[4] then '' else [4] end
	set @t_bcustno = case when '#non'=[5] then '' else [5] end
	set @t_ecustno = case when '#non'=[6] then CHAR(255) else [6] end
	set @t_bpartno = case when '#non'=[7] then '' else [7] end
	set @t_epartno = case when '#non'=[8] then char(255) else [8] end
	set @t_bsssno = case when '#non'=[9] then '' else [9] end
	set @t_esssno = case when '#non'=[10] then char(255) else [10] end
--*****************************************************************************************
	declare @result table(
		sssno nvarchar(20),
		namea nvarchar(50),
		total float
	)
	--cara
	insert into @result
	select a.sssno,b.namea,a.total from (
	select sssno,sum(outmoney)total
	from cara a left join caras b on a.noa=b.noa
	where b.caritemno!='001' and b.outmoney!=0 
	and (sssno between @t_bsssno and @t_esssno) and (b.datea between @t_mon+'/01' and @t_mon+'/31')
	group by sssno)a left join sss b on a.sssno=b.noa
	
	--vcc(目前先根據客戶主檔內的業務來做業績歸屬，若有兩人業務則分攤，如果客戶業務沒有業務，則以vcc內的業務或收款人做業績)
	declare @tmp table(
		sssno nvarchar(20),
		total float
	)--暫存每個業務金額
	
	insert into @tmp
	select noa,0 from sss
	
	declare @vccno nvarchar(20)--vcc的salesno
	declare @vccno2 nvarchar(20)--vcc的salesno2
	declare @custno nvarchar(20)--cust的salesno
	declare @custno2 nvarchar(20)--cust的salesno2
	declare @total float
	
	declare cursor_table cursor for
	select a.salesno,a.salesno2,b.salesno,b.salesno2,a.total
	from vcc[1] a left join cust b on a.custno=b.noa
	where (left(kind,4)!='健勞勞退') and (datea between @t_mon+'/01' and @t_mon+'/31')
	open cursor_table
	fetch next from cursor_table
	into @vccno,@vccno2,@custno,@custno2,@total
	while(@@FETCH_STATUS <> -1)
	begin
		if(LEN(@custno)>0 or LEN(@custno2)>0)--客戶主檔業務有值
		begin
			if(LEN(@custno)>0 and LEN(@custno2)>0) --兩個業務都有填
			begin
				--業務1
				update @tmp
				set total=total+round((@total/2),0)
				where sssno=@custno
				--業務2
				update @tmp
				set total=total+round((@total/2),0)
				where sssno=@custno2
			end
			else if(LEN(@custno)>0)--只填第一個業務
			begin
				--業務1
				update @tmp
				set total=total+@total
				where sssno=@custno
			end
			else--只填第二個業務
			begin
				--業務2
				update @tmp
				set total=total+@total
				where sssno=@custno2
			end
		end
		else--客戶主檔沒有填寫業務
		begin
			if(LEN(@vccno)>0)--vcc業務有值
			begin
				update @tmp
				set total=total+@total
				where sssno=@vccno
			end
			else if(LEN(@vccno2)>0)--vcc業務無值，以收款人
			begin
				update @tmp
				set total=total+@total
				where sssno=@vccno2
			end
		end
		fetch next from cursor_table
		into @vccno,@vccno2,@custno,@custno2,@total
	end
	close cursor_table
	deallocate cursor_table
	
	
	--tran(不計算外務人員績效，直接以客戶主檔的業務)
	declare cursor_table cursor for
	select b.salesno,b.salesno2,total2 from trans[1] a left join cust b on a.custno=b.noa
	where (trandate between @t_mon+'/01' and @t_mon+'/31')
	open cursor_table
	fetch next from cursor_table
	into @custno,@custno2,@total
	while(@@FETCH_STATUS <> -1)
	begin
		if(LEN(@custno)>0 or LEN(@custno2)>0)--客戶主檔業務有值
		begin
			if(LEN(@custno)>0 and LEN(@custno2)>0) --兩個業務都有填
			begin
				--業務1
				update @tmp
				set total=total+round((@total/2),0)
				where sssno=@custno
				--業務2
				update @tmp
				set total=total+round((@total/2),0)
				where sssno=@custno2
			end
			else if(LEN(@custno)>0)--只填第一個業務
			begin
				--業務1
				update @tmp
				set total=total+@total
				where sssno=@custno
			end
			else--只填第二個業務
			begin
				--業務2
				update @tmp
				set total=total+@total
				where sssno=@custno2
			end
		end
		
		fetch next from cursor_table
		into @custno,@custno2,@total
	end
	close cursor_table
	deallocate cursor_table
	
	--清除業績為0的員工或不再員工範圍內員工
	delete @tmp
	where total=0 or (sssno not between @t_bsssno and @t_esssno)
	
	--結果插入輸出table
	declare @sssno nvarchar(20)
	declare @namea nvarchar(50)
	
	declare cursor_table cursor for
	select a.sssno,b.namea,a.total from @tmp a left join sss b on a.sssno=b.noa
	open cursor_table
	fetch next from cursor_table
	into @sssno,@namea,@total
	while(@@FETCH_STATUS <> -1)
	begin
		if((select COUNT(*) from @result where sssno=@sssno)>0) --輸出已存在員工
		begin
			update @result
			set total=total+@total
			where sssno=@sssno
		end
		else
		begin
			insert into @result
			select @sssno,@namea,@total
		end
		fetch next from cursor_table
		into @sssno,@namea,@total
	end
	close cursor_table
	deallocate cursor_table
	
	
	--插入收入
	declare @tmpa table(
		partno nvarchar(20),
		sssno nvarchar(20),
		namea nvarchar(50),
		money float,
		salary float,
		partcost float,
		total float
	)
	
	insert into @tmpa (partno,sssno,namea,money)
	select b.partno,a.sssno,a.namea,a.total from @result a left join sss b on a.sssno=b.noa
	
	insert into @tmpa (partno,sssno,namea)
	select partno,noa,namea from sss
	where noa not in (select sssno from @result) and noa!='Z001'
	
	--更新薪資
	declare cursor_table cursor for
	select sno,total5 from salarys where mon=@t_mon
	open cursor_table
	fetch next from cursor_table
	into @sssno,@total
	while(@@FETCH_STATUS <> -1)
	begin
		update @tmpa
		set salary=@total
		where sssno=@sssno
		
		fetch next from cursor_table
		into @sssno,@total
	end
	close cursor_table
	deallocate cursor_table
	
	--更新部門費用攤提(只分攤給收入的人)
	declare @partno nvarchar(20)
	
	declare cursor_table cursor for
	select part,SUM(dmoney-cmoney) total from acccs[1]_1 a
	where (left(accc5,1)='5' or left(accc5,1)='6' or left(accc5,1)='8' or left(accc5,1)='9') and accc5!='6010.' and part!='' and (accc2 between right(@t_mon,2)+'/01' and right(@t_mon,2)+'/31')
	group by part order by part
	open cursor_table
	fetch next from cursor_table
	into @partno,@total
	while(@@FETCH_STATUS <> -1)
	begin
		update @tmpa
		set partcost=(case when(select sum(isnull(money,0)) from @tmpa where partno=@partno)>0 then round((@total*(money/(select sum(isnull(money,0)) from @tmpa where partno=@partno))),0) else round(@total/(select count(*) from sss where partno=@partno),0) end )
		where partno=@partno
		
		fetch next from cursor_table
		into @partno,@total
	end
	close cursor_table
	deallocate cursor_table
	
	--更新損益
	update @tmpa
	set total=isnull(money,0)-isnull(salary,0)-isnull(partcost,0)
	
	
	--排名並輸出
	declare @t_result table(
		gno nvarchar(1),
		recno int identity(1,1),
		sssno nvarchar(20),
		namea nvarchar(50),
		money float,
		salary float,
		partcost float,
		total float
	)
	insert into @t_result
	select '0',sssno,namea,money,salary,partcost,total from @tmpa
	where (partno between @t_bpartno and @t_epartno) and  (sssno between @t_bsssno and @t_esssno)
	order by sssno
	
	--插入合計
	insert into @t_result 
	select '1','','',sum(money),sum(salary),sum(partcost),sum(total) from @t_result

	select gno,recno,sssno,namea
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,money),1)),4,12)) money
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,salary),1)),4,12)) salary
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,partcost),1)),4,12)) partcost
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,total),1)),4,12)) total
	from @t_result;
--*****************************************************************************************
z_anadc8:--z_anadc8
	declare @t_bdate nvarchar(10)
	declare @t_edate nvarchar(10)
	declare @t_mon nvarchar(10)
	declare @t_bcustno nvarchar(20)
	declare @t_ecustno nvarchar(20)
	declare @t_bpartno nvarchar(20)
	declare @t_epartno nvarchar(20)
	declare @t_bsssno nvarchar(20)
	declare @t_esssno nvarchar(20)

	set @t_bdate = case when '#non'=[2] then '' else [2] end
	set @t_edate = case when '#non'=[3] then char(255) else [3] end
	set @t_mon = case when '#non'=[4] then '' else [4] end
	set @t_bcustno = case when '#non'=[5] then '' else [5] end
	set @t_ecustno = case when '#non'=[6] then CHAR(255) else [6] end
	set @t_bpartno = case when '#non'=[7] then '' else [7] end
	set @t_epartno = case when '#non'=[8] then char(255) else [8] end
	set @t_bsssno = case when '#non'=[9] then '' else [9] end
	set @t_esssno = case when '#non'=[10] then char(255) else [10] end
--*****************************************************************************************
SET QUOTED_IDENTIFIER OFF
	declare @result table(
		sssno nvarchar(20),
		namea nvarchar(50),
		total float
	)
	declare @tmp table(
		sssno nvarchar(20),
		total float
	)
	declare @tmpa table(
		partno nvarchar(20),
		sssno nvarchar(20),
		namea nvarchar(50),
		money float,
		salary float,
		partcost float,
		total float
	)
	IF OBJECT_ID('tempdb..#t_result')is not null
	BEGIN
		   drop table #t_result
	END
	--年度表
	create table #t_result(
		gno nvarchar(1),
		recno int identity(1,1),
		sssno nvarchar(20),
		namea nvarchar(50),
		money01 float,
		salary01 float,
		partcost01 float,
		total01 float,
		money02 float,
		salary02 float,
		partcost02 float,
		total02 float,
		money03 float,
		salary03 float,
		partcost03 float,
		total03 float,
		money04 float,
		salary04 float,
		partcost04 float,
		total04 float,
		money05 float,
		salary05 float,
		partcost05 float,
		total05 float,
		money06 float,
		salary06 float,
		partcost06 float,
		total06 float,
		money07 float,
		salary07 float,
		partcost07 float,
		total07 float,
		money08 float,
		salary08 float,
		partcost08 float,
		total08 float,
		money09 float,
		salary09 float,
		partcost09 float,
		total09 float,
		money10 float,
		salary10 float,
		partcost10 float,
		total10 float,
		money11 float,
		salary11 float,
		partcost11 float,
		total11 float,
		money12 float,
		salary12 float,
		partcost12 float,
		total12 float
	)
	declare @vccno nvarchar(20)--vcc的salesno
	declare @vccno2 nvarchar(20)--vcc的salesno2
	declare @custno nvarchar(20)--cust的salesno
	declare @custno2 nvarchar(20)--cust的salesno2
	declare @total float
	declare @sssno nvarchar(20)
	declare @namea nvarchar(50)
	declare @partno nvarchar(20)
	declare @money float
	declare @salary float
	declare @partcost float
	declare @cmd nvarchar(max)
	
	--設定月份
	declare @x_mon int
	set @x_mon=1
	
	while(@x_mon<=12)
	begin
		set @t_mon='[1]/'+right(('0'+cast(@x_mon as nvarchar(10))),2)
		
		--cara
		insert into @result
		select a.sssno,b.namea,a.total from (
		select sssno,sum(outmoney)total
		from cara a left join caras b on a.noa=b.noa
		where b.caritemno!='001' and b.outmoney!=0 
		and (sssno between @t_bsssno and @t_esssno) and (b.datea between @t_mon+'/01' and @t_mon+'/31')
		group by sssno)a left join sss b on a.sssno=b.noa
		
		--vcc(目前先根據客戶主檔內的業務來做業績歸屬，若有兩人業務則分攤，如果客戶業務沒有業務，則以vcc內的業務或收款人做業績)
		
		insert into @tmp
		select noa,0 from sss
		
		declare cursor_table cursor for
		select a.salesno,a.salesno2,b.salesno,b.salesno2,a.total
		from vcc[1] a left join cust b on a.custno=b.noa
		where (left(kind,4)!='健勞勞退') and (datea between @t_mon+'/01' and @t_mon+'/31')
		open cursor_table
		fetch next from cursor_table
		into @vccno,@vccno2,@custno,@custno2,@total
		while(@@FETCH_STATUS <> -1)
		begin
			if(LEN(@custno)>0 or LEN(@custno2)>0)--客戶主檔業務有值
			begin
				if(LEN(@custno)>0 and LEN(@custno2)>0) --兩個業務都有填
				begin
					--業務1
					update @tmp
					set total=total+round((@total/2),0)
					where sssno=@custno
					--業務2
					update @tmp
					set total=total+round((@total/2),0)
					where sssno=@custno2
				end
				else if(LEN(@custno)>0)--只填第一個業務
				begin
					--業務1
					update @tmp
					set total=total+@total
					where sssno=@custno
				end
				else--只填第二個業務
				begin
					--業務2
					update @tmp
					set total=total+@total
					where sssno=@custno2
				end
			end
			else--客戶主檔沒有填寫業務
			begin
				if(LEN(@vccno)>0)--vcc業務有值
				begin
					update @tmp
					set total=total+@total
					where sssno=@vccno
				end
				else if(LEN(@vccno2)>0)--vcc業務無值，以收款人
				begin
					update @tmp
					set total=total+@total
					where sssno=@vccno2
				end
			end
			fetch next from cursor_table
			into @vccno,@vccno2,@custno,@custno2,@total
		end
		close cursor_table
		deallocate cursor_table
		
		
		--tran(不計算外務人員績效，直接以客戶主檔的業務)
		declare cursor_table cursor for
		select b.salesno,b.salesno2,total2 from trans[1] a left join cust b on a.custno=b.noa
		where (trandate between @t_mon+'/01' and @t_mon+'/31')
		open cursor_table
		fetch next from cursor_table
		into @custno,@custno2,@total
		while(@@FETCH_STATUS <> -1)
		begin
			if(LEN(@custno)>0 or LEN(@custno2)>0)--客戶主檔業務有值
			begin
				if(LEN(@custno)>0 and LEN(@custno2)>0) --兩個業務都有填
				begin
					--業務1
					update @tmp
					set total=total+round((@total/2),0)
					where sssno=@custno
					--業務2
					update @tmp
					set total=total+round((@total/2),0)
					where sssno=@custno2
				end
				else if(LEN(@custno)>0)--只填第一個業務
				begin
					--業務1
					update @tmp
					set total=total+@total
					where sssno=@custno
				end
				else--只填第二個業務
				begin
					--業務2
					update @tmp
					set total=total+@total
					where sssno=@custno2
				end
			end
			
			fetch next from cursor_table
			into @custno,@custno2,@total
		end
		close cursor_table
		deallocate cursor_table
		
		
		--清除業績為0的員工或不再員工範圍內員工
		delete @tmp
		where total=0 or (sssno not between @t_bsssno and @t_esssno)
		
		--結果插入輸出table
		
		declare cursor_table cursor for
		select a.sssno,b.namea,a.total from @tmp a left join sss b on a.sssno=b.noa
		open cursor_table
		fetch next from cursor_table
		into @sssno,@namea,@total
		while(@@FETCH_STATUS <> -1)
		begin
			if((select COUNT(*) from @result where sssno=@sssno)>0) --輸出已存在員工
			begin
				update @result
				set total=total+@total
				where sssno=@sssno
			end
			else
			begin
				insert into @result
				select @sssno,@namea,@total
			end
			fetch next from cursor_table
			into @sssno,@namea,@total
		end
		close cursor_table
		deallocate cursor_table
		
		
		--插入收入
		insert into @tmpa (partno,sssno,namea,money)
		select b.partno,a.sssno,a.namea,a.total from @result a left join sss b on a.sssno=b.noa
		
		insert into @tmpa (partno,sssno,namea)
		select partno,noa,namea from sss
		where noa not in (select sssno from @result) and noa!='Z001'
		
		
		--更新薪資
		declare cursor_table cursor for
		select sno,total5 from salarys where mon=@t_mon
		open cursor_table
		fetch next from cursor_table
		into @sssno,@total
		while(@@FETCH_STATUS <> -1)
		begin
			update @tmpa
			set salary=@total
			where sssno=@sssno
			
			fetch next from cursor_table
			into @sssno,@total
		end
		close cursor_table
		deallocate cursor_table
		
		--更新部門費用攤提(只分攤給收入的人)
		
		declare cursor_table cursor for
		select part,SUM(dmoney-cmoney) total from acccs[1]_1 a
		where (left(accc5,1)='5' or left(accc5,1)='6' or left(accc5,1)='8' or left(accc5,1)='9') and accc5!='6010.' and part!='' and (accc2 between right(@t_mon,2)+'/01' and right(@t_mon,2)+'/31')
		group by part order by part
		open cursor_table
		fetch next from cursor_table
		into @partno,@total
		while(@@FETCH_STATUS <> -1)
		begin
			update @tmpa
			set partcost=(case when(select sum(isnull(money,0)) from @tmpa where partno=@partno)>0 then round((@total*(money/(select sum(isnull(money,0)) from @tmpa where partno=@partno))),0) else round(@total/(select count(*) from sss where partno=@partno),0) end )
			where partno=@partno
			
			fetch next from cursor_table
			into @partno,@total
		end
		close cursor_table
		deallocate cursor_table
		
		--更新損益
		update @tmpa
		set total=isnull(money,0)-isnull(salary,0)-isnull(partcost,0)
	
	
	--寫入到年度表
		if(@x_mon=1)
		begin
			insert into #t_result(gno,sssno,namea,money01,salary01,partcost01,total01)
			select '0',sssno,namea,money,salary,partcost,total from @tmpa
			where (partno between @t_bpartno and @t_epartno) and  (sssno between @t_bsssno and @t_esssno)
			order by sssno
		end
		else
		begin
			declare cursor_table cursor for
			select sssno,money,salary,partcost,total from @tmpa
			where (partno between @t_bpartno and @t_epartno) and  (sssno between @t_bsssno and @t_esssno)
			open cursor_table
			fetch next from cursor_table
			into @sssno,@money,@salary,@partcost,@total
			while(@@FETCH_STATUS <> -1)
			begin
				set @cmd="update #t_result set money"+right(@t_mon,2)+"=@money,salary"+right(@t_mon,2)+"=@salary,partcost"+right(@t_mon,2)+"=@partcost,total"+right(@t_mon,2)+"=@total where sssno='"+@sssno+"'"
				EXECUTE sp_executesql @cmd,@params=N'@money float,@salary float,@partcost float,@total float',@money=@money,@salary=@salary,@partcost=@partcost,@total=@total
				
				fetch next from cursor_table
				into @sssno,@money,@salary,@partcost,@total
			end
			close cursor_table
			deallocate cursor_table
		end
	
	--清除table
		delete @result
		delete @tmp
		delete @tmpa
	
		set @x_mon=@x_mon+1
	end
	
	--插入合計
	insert into #t_result 
	select '1','','',sum(money01),sum(salary01),sum(partcost01),sum(total01)
	,sum(money02),sum(salary02),sum(partcost02),sum(total02)
	,sum(money03),sum(salary03),sum(partcost03),sum(total03)
	,sum(money04),sum(salary04),sum(partcost04),sum(total04)
	,sum(money05),sum(salary05),sum(partcost05),sum(total05)
	,sum(money06),sum(salary06),sum(partcost06),sum(total06)
	,sum(money07),sum(salary07),sum(partcost07),sum(total07)
	,sum(money08),sum(salary08),sum(partcost08),sum(total08)
	,sum(money09),sum(salary09),sum(partcost09),sum(total09)
	,sum(money10),sum(salary10),sum(partcost10),sum(total10)
	,sum(money11),sum(salary11),sum(partcost11),sum(total11)
	,sum(money12),sum(salary12),sum(partcost12),sum(total12) from #t_result

	select gno,recno,sssno,namea
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,money01),1)),4,12)) money01
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,salary01),1)),4,12)) salary01
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,partcost01),1)),4,12)) partcost01
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,total01),1)),4,12)) total01
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,money02),1)),4,12)) money02
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,salary02),1)),4,12)) salary02
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,partcost02),1)),4,12)) partcost02
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,total02),1)),4,12)) total02
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,money03),1)),4,12)) money03
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,salary03),1)),4,12)) salary03
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,partcost03),1)),4,12)) partcost03
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,total03),1)),4,12)) total03
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,money04),1)),4,12)) money04
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,salary04),1)),4,12)) salary04
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,partcost04),1)),4,12)) partcost04
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,total04),1)),4,12)) total04
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,money05),1)),4,12)) money05
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,salary05),1)),4,12)) salary05
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,partcost05),1)),4,12)) partcost05
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,total05),1)),4,12)) total05
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,money06),1)),4,12)) money06
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,salary06),1)),4,12)) salary06
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,partcost06),1)),4,12)) partcost06
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,total06),1)),4,12)) total06
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,money07),1)),4,12)) money07
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,salary07),1)),4,12)) salary07
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,partcost07),1)),4,12)) partcost07
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,total07),1)),4,12)) total07
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,money08),1)),4,12)) money08
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,salary08),1)),4,12)) salary08
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,partcost08),1)),4,12)) partcost08
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,total08),1)),4,12)) total08
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,money09),1)),4,12)) money09
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,salary09),1)),4,12)) salary09
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,partcost09),1)),4,12)) partcost09
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,total09),1)),4,12)) total09
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,money10),1)),4,12)) money10
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,salary10),1)),4,12)) salary10
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,partcost10),1)),4,12)) partcost10
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,total10),1)),4,12)) total10
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,money11),1)),4,12)) money11
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,salary11),1)),4,12)) salary11
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,partcost11),1)),4,12)) partcost11
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,total11),1)),4,12)) total11
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,money12),1)),4,12)) money12
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,salary12),1)),4,12)) salary12
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,partcost12),1)),4,12)) partcost12
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,total12),1)),4,12)) total12
	from #t_result;
--*****************************************************************************************
