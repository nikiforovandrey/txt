z_acin1:--z_acin1
	declare @t_bdate nvarchar(10)
	declare @t_edate nvarchar(10)
	declare @t_baccno nvarchar(25)
	declare @t_eaccno nvarchar(25)
	declare @t_bpart nvarchar(18)
	declare @t_epart nvarchar(18)
	set @t_bdate = case when '#non'=[2] then '' else [2] end
	set @t_edate = case when '#non'=[3] then char(255) else [3] end
	set @t_baccno = case when '#non'=[4] then '' else [4] end
	set @t_eaccno = case when '#non'=[5] then char(255) else [5] end
	set @t_bpart = case when '#non'=[6] then '' else [6] end
	set @t_epart = case when '#non'=[7] then char(255) else [7] end
	declare @tmp table(
			gno nvarchar(1),
			acc1 nvarchar(20),
			acc2 nvarchar(50),
			dmoney int,
			cmoney int,
			[money] int
	)
	insert into @tmp
	select '0' gno, R1.acc1 acc1, R1.acc2 acc2, R2.dmoney dmoney, R2.cmoney cmoney, isnull(R2.cmoney,0)-isnull(R2.dmoney,0) money
	from
		(select acc1,acc2 from acc102_1 where (acc1 between @t_baccno and @t_eaccno) and (LEFT(acc1,1)='4' or LEFT(acc1,2)='71')) as R1
	left join (select accc5, sum(dmoney) dmoney, sum(cmoney) cmoney 
			   from acccs[1] where (accc2 between @t_bdate and @t_edate) and (part between @t_bpart and @t_epart) group by accc5) as R2
	on R1.acc1 = R2.accc5 
	where isnull(R2.dmoney,0)-isnull(R2.cmoney,0)!=0
	
	select gno,acc1,acc2,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,isnull(dmoney,0)),1)),4,12)) dmoney,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,isnull(cmoney,0)),1)),4,12)) cmoney,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,isnull(money,0)),1)),4,12)) money
	from @tmp
	order by acc1;

--------------------------------------------------------------------------------------------------------------------------------------------------------
z_acin2:--z_acin2
	declare @t_bdate nvarchar(10)
	declare @t_edate nvarchar(10)
	declare @t_baccno nvarchar(25)
	declare @t_eaccno nvarchar(25)
	declare @t_bpart nvarchar(18)
	declare @t_epart nvarchar(18)
	set @t_bdate = case when '#non'=[2] then '' else [2] end
	set @t_edate = case when '#non'=[3] then char(255) else [3] end
	set @t_baccno = case when '#non'=[4] then '' else [4] end
	set @t_eaccno = case when '#non'=[5] then char(255) else [5] end
	set @t_bpart = case when '#non'=[6] then '' else [6] end
	set @t_epart = case when '#non'=[7] then char(255) else [7] end
	
	declare @tmp table(
			gno nvarchar(1),
			acc1 nvarchar(20),
			acc2 nvarchar(50),
			m01 int,
			m02 int,
			m03 int,
			m04 int,
			m05 int,
			m06 int,
			m07 int,
			m08 int,
			m09 int,
			m10 int,
			m11 int,
			m12 int,
			total int
	)
	insert into @tmp
	select '0' gno, R0.acc1 acc1, R0.acc2 acc2, 
			isnull(R1.cmoney,0)-isnull(R1.dmoney,0) m01,
			isnull(R2.cmoney,0)-isnull(R2.dmoney,0) m02,
			isnull(R3.cmoney,0)-isnull(R3.dmoney,0) m03,
			isnull(R4.cmoney,0)-isnull(R4.dmoney,0) m04,
			isnull(R5.cmoney,0)-isnull(R5.dmoney,0) m05,
			isnull(R6.cmoney,0)-isnull(R6.dmoney,0) m06,
			isnull(R7.cmoney,0)-isnull(R7.dmoney,0) m07,
			isnull(R8.cmoney,0)-isnull(R8.dmoney,0) m08,
			isnull(R9.cmoney,0)-isnull(R9.dmoney,0) m09,
			isnull(R10.cmoney,0)-isnull(R10.dmoney,0) m10,
			isnull(R11.cmoney,0)-isnull(R11.dmoney,0) m11,
			isnull(R12.cmoney,0)-isnull(R12.dmoney,0) m12,
			isnull(R13.cmoney,0)-isnull(R13.dmoney,0) total
	from
		(select acc1,acc2 from acc[1] where (acc1 between @t_baccno and @t_eaccno) and (LEFT(acc1,1)='4' or LEFT(acc1,2)='71')) as R0
	left join (select accc5, sum(dmoney) dmoney, sum(cmoney) cmoney 
			   from acccs[1] where left(accc2,2)='01' and (accc2 between @t_bdate and @t_edate) and (part between @t_bpart and @t_epart) group by accc5) as R1
	on R0.acc1 = R1.accc5 
	left join (select accc5, sum(dmoney) dmoney, sum(cmoney) cmoney 
			   from acccs[1] where left(accc2,2)='02' and (accc2 between @t_bdate and @t_edate) and (part between @t_bpart and @t_epart) group by accc5) as R2		   
	on R0.acc1 = R2.accc5 
	left join (select accc5, sum(dmoney) dmoney, sum(cmoney) cmoney 
			   from acccs[1] where left(accc2,2)='03' and (accc2 between @t_bdate and @t_edate) and (part between @t_bpart and @t_epart) group by accc5) as R3
	on R0.acc1 = R3.accc5 
	left join (select accc5, sum(dmoney) dmoney, sum(cmoney) cmoney 
			   from acccs[1] where left(accc2,2)='04' and (accc2 between @t_bdate and @t_edate) and (part between @t_bpart and @t_epart) group by accc5) as R4
	on R0.acc1 = R4.accc5 
	left join (select accc5, sum(dmoney) dmoney, sum(cmoney) cmoney 
			   from acccs[1] where left(accc2,2)='05' and (accc2 between @t_bdate and @t_edate) and (part between @t_bpart and @t_epart) group by accc5) as R5
	on R0.acc1 = R5.accc5 
	left join (select accc5, sum(dmoney) dmoney, sum(cmoney) cmoney 
			   from acccs[1] where left(accc2,2)='06' and (accc2 between @t_bdate and @t_edate) and (part between @t_bpart and @t_epart) group by accc5) as R6
	on R0.acc1 = R6.accc5 
	left join (select accc5, sum(dmoney) dmoney, sum(cmoney) cmoney 
			   from acccs[1] where left(accc2,2)='07' and (accc2 between @t_bdate and @t_edate) and (part between @t_bpart and @t_epart) group by accc5) as R7
	on R0.acc1 = R7.accc5 
	left join (select accc5, sum(dmoney) dmoney, sum(cmoney) cmoney 
			   from acccs[1] where left(accc2,2)='08' and (accc2 between @t_bdate and @t_edate) and (part between @t_bpart and @t_epart) group by accc5) as R8
	on R0.acc1 = R8.accc5 
	left join (select accc5, sum(dmoney) dmoney, sum(cmoney) cmoney 
			   from acccs[1] where left(accc2,2)='09' and (accc2 between @t_bdate and @t_edate) and (part between @t_bpart and @t_epart) group by accc5) as R9
	on R0.acc1 = R9.accc5 
	left join (select accc5, sum(dmoney) dmoney, sum(cmoney) cmoney 
			   from acccs[1] where left(accc2,2)='10' and (accc2 between @t_bdate and @t_edate) and (part between @t_bpart and @t_epart) group by accc5) as R10
	on R0.acc1 = R10.accc5 
	left join (select accc5, sum(dmoney) dmoney, sum(cmoney) cmoney 
			   from acccs[1] where left(accc2,2)='11' and (accc2 between @t_bdate and @t_edate) and (part between @t_bpart and @t_epart) group by accc5) as R11
	on R0.acc1 = R11.accc5 
	left join (select accc5, sum(dmoney) dmoney, sum(cmoney) cmoney 
			   from acccs[1] where left(accc2,2)='12' and (accc2 between @t_bdate and @t_edate) and (part between @t_bpart and @t_epart) group by accc5) as R12
	on R0.acc1 = R12.accc5 
	left join (select accc5, sum(dmoney) dmoney, sum(cmoney) cmoney 
			   from acccs[1] where (accc2 between @t_bdate and @t_edate) and (part between @t_bpart and @t_epart) group by accc5) as R13
	on R0.acc1 = R13.accc5 
	where not(isnull(R1.dmoney-R1.cmoney,0)=0 and isnull(R2.dmoney-R2.cmoney,0)=0 and isnull(R3.dmoney-R3.cmoney,0)=0 and
			  isnull(R4.dmoney-R4.cmoney,0)=0 and isnull(R5.dmoney-R5.cmoney,0)=0 and isnull(R6.dmoney-R6.cmoney,0)=0 and
			  isnull(R7.dmoney-R7.cmoney,0)=0 and isnull(R8.dmoney-R8.cmoney,0)=0 and isnull(R9.dmoney-R9.cmoney,0)=0 and
			  isnull(R10.dmoney-R10.cmoney,0)=0 and isnull(R11.dmoney-R11.cmoney,0)=0 and isnull(R12.dmoney-R12.cmoney,0)=0)
	select gno,acc1,acc2,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,m01),1)),4,12)) m01,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,m02),1)),4,12)) m02,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,m03),1)),4,12)) m03,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,m04),1)),4,12)) m04,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,m05),1)),4,12)) m05,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,m06),1)),4,12)) m06,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,m07),1)),4,12)) m07,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,m08),1)),4,12)) m08,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,m09),1)),4,12)) m09,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,m10),1)),4,12)) m10,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,m11),1)),4,12)) m11,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,m12),1)),4,12)) m12,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,total),1)),4,12)) total
	from @tmp
	order by acc1;
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
z_acout1:--z_acout1
	declare @t_bdate nvarchar(10)
	declare @t_edate nvarchar(10)
	declare @t_baccno nvarchar(25)
	declare @t_eaccno nvarchar(25)
	declare @t_bpart nvarchar(18)
	declare @t_epart nvarchar(18)
	set @t_bdate = case when '#non'=[2] then '' else [2] end
	set @t_edate = case when '#non'=[3] then char(255) else [3] end
	set @t_baccno = case when '#non'=[4] then '' else [4] end
	set @t_eaccno = case when '#non'=[5] then char(255) else [5] end
	set @t_bpart = case when '#non'=[6] then '' else [6] end
	set @t_epart = case when '#non'=[7] then char(255) else [7] end
	
	declare @tmp table(
			gno nvarchar(1),
			acc1 nvarchar(20),
			acc2  nvarchaR(50),
			dmoney int,
			cmoney int,
			[money] int
	)
	insert into @tmp
	select '0' gno, R1.acc1 acc1, R1.acc2 acc2, R2.dmoney dmoney, R2.cmoney cmoney, isnull(R2.dmoney,0)-isnull(R2.cmoney,0) money
	from
		(select acc1,acc2 from acc[1] where (acc1 between @t_baccno and @t_eaccno) and (LEFT(acc1,1)>='5' and LEFT(acc1,2)!='71')) as R1
	left join (select accc5, sum(dmoney) dmoney, sum(cmoney) cmoney 
			   from acccs[1] where (accc2 between @t_bdate and @t_edate) and (part between @t_bpart and @t_epart) group by accc5) as R2
	on R1.acc1 = R2.accc5 
	where isnull(R2.dmoney,0)-isnull(R2.cmoney,0)!=0
	
	select gno,acc1,acc2,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,dmoney),1)),4,12))  dmoney,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,cmoney),1)),4,12)) cmoney,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,money),1)),4,12)) money
	from @tmp
	order by acc1;
----------------------------------------------------------------------------------------------------------------------------------------------------------
z_acout2:--z_acout2
	declare @t_bdate nvarchar(10)
	declare @t_edate nvarchar(10)
	declare @t_baccno nvarchar(25)
	declare @t_eaccno nvarchar(25)
	declare @t_bpart nvarchar(18)
	declare @t_epart nvarchar(18)
	set @t_bdate = case when '#non'=[2] then '' else [2] end
	set @t_edate = case when '#non'=[3] then char(255) else [3] end
	set @t_baccno = case when '#non'=[4] then '' else [4] end
	set @t_eaccno = case when '#non'=[5] then char(255) else [5] end
	set @t_bpart = case when '#non'=[6] then '' else [6] end
	set @t_epart = case when '#non'=[7] then char(255) else [7] end
	
	declare @tmp table(
			gno nvarchar(1),
			acc1 nvarchar(20),
			acc2 nvarchar(50),
			m01 int,
			m02 int,
			m03 int,
			m04 int,
			m05 int,
			m06 int,
			m07 int,
			m08 int,
			m09 int,
			m10 int,
			m11 int,
			m12 int,
			total int
	)
	insert into @tmp
	select '0' gno, R0.acc1 acc1, R0.acc2 acc2, 
			isnull(R1.dmoney,0)-isnull(R1.cmoney,0) m01,
			isnull(R2.dmoney,0)-isnull(R2.cmoney,0) m02,
			isnull(R3.dmoney,0)-isnull(R3.cmoney,0) m03,
			isnull(R4.dmoney,0)-isnull(R4.cmoney,0) m04,
			isnull(R5.dmoney,0)-isnull(R5.cmoney,0) m05,
			isnull(R6.dmoney,0)-isnull(R6.cmoney,0) m06,
			isnull(R7.dmoney,0)-isnull(R7.cmoney,0) m07,
			isnull(R8.dmoney,0)-isnull(R8.cmoney,0) m08,
			isnull(R9.dmoney,0)-isnull(R9.cmoney,0) m09,
			isnull(R10.dmoney,0)-isnull(R10.cmoney,0) m10,
			isnull(R11.dmoney,0)-isnull(R11.cmoney,0) m11,
			isnull(R12.dmoney,0)-isnull(R12.cmoney,0) m12,
			isnull(R13.dmoney,0)-isnull(R13.cmoney,0) total
	from
		(select acc1,acc2 from acc[1] where (acc1 between @t_baccno and @t_eaccno) and (LEFT(acc1,1)>='5' and LEFT(acc1,2)!='71')) as R0
	left join (select accc5, sum(dmoney) dmoney, sum(cmoney) cmoney 
			   from acccs[1] where left(accc2,2)='01' and (accc2 between @t_bdate and @t_edate) and (part between @t_bpart and @t_epart) group by accc5) as R1
	on R0.acc1 = R1.accc5 
	left join (select accc5, sum(dmoney) dmoney, sum(cmoney) cmoney 
			   from acccs[1] where left(accc2,2)='02' and (accc2 between @t_bdate and @t_edate) and (part between @t_bpart and @t_epart) group by accc5) as R2		   
	on R0.acc1 = R2.accc5 
	left join (select accc5, sum(dmoney) dmoney, sum(cmoney) cmoney 
			   from acccs[1] where left(accc2,2)='03' and (accc2 between @t_bdate and @t_edate) and (part between @t_bpart and @t_epart) group by accc5) as R3
	on R0.acc1 = R3.accc5 
	left join (select accc5, sum(dmoney) dmoney, sum(cmoney) cmoney 
			   from acccs[1] where left(accc2,2)='04' and (accc2 between @t_bdate and @t_edate) and (part between @t_bpart and @t_epart) group by accc5) as R4
	on R0.acc1 = R4.accc5 
	left join (select accc5, sum(dmoney) dmoney, sum(cmoney) cmoney 
			   from acccs[1] where left(accc2,2)='05' and (accc2 between @t_bdate and @t_edate) and (part between @t_bpart and @t_epart) group by accc5) as R5
	on R0.acc1 = R5.accc5 
	left join (select accc5, sum(dmoney) dmoney, sum(cmoney) cmoney 
			   from acccs[1] where left(accc2,2)='06' and (accc2 between @t_bdate and @t_edate) and (part between @t_bpart and @t_epart) group by accc5) as R6
	on R0.acc1 = R6.accc5 
	left join (select accc5, sum(dmoney) dmoney, sum(cmoney) cmoney 
			   from acccs[1] where left(accc2,2)='07' and (accc2 between @t_bdate and @t_edate) and (part between @t_bpart and @t_epart) group by accc5) as R7
	on R0.acc1 = R7.accc5 
	left join (select accc5, sum(dmoney) dmoney, sum(cmoney) cmoney 
			   from acccs[1] where left(accc2,2)='08' and (accc2 between @t_bdate and @t_edate) and (part between @t_bpart and @t_epart) group by accc5) as R8
	on R0.acc1 = R8.accc5 
	left join (select accc5, sum(dmoney) dmoney, sum(cmoney) cmoney 
			   from acccs[1] where left(accc2,2)='09' and (accc2 between @t_bdate and @t_edate) and (part between @t_bpart and @t_epart) group by accc5) as R9
	on R0.acc1 = R9.accc5 
	left join (select accc5, sum(dmoney) dmoney, sum(cmoney) cmoney 
			   from acccs[1] where left(accc2,2)='10' and (accc2 between @t_bdate and @t_edate) and (part between @t_bpart and @t_epart) group by accc5) as R10
	on R0.acc1 = R10.accc5 
	left join (select accc5, sum(dmoney) dmoney, sum(cmoney) cmoney 
			   from acccs[1] where left(accc2,2)='11' and (accc2 between @t_bdate and @t_edate) and (part between @t_bpart and @t_epart) group by accc5) as R11
	on R0.acc1 = R11.accc5 
	left join (select accc5, sum(dmoney) dmoney, sum(cmoney) cmoney 
			   from acccs[1] where left(accc2,2)='12' and (accc2 between @t_bdate and @t_edate) and (part between @t_bpart and @t_epart) group by accc5) as R12
	on R0.acc1 = R12.accc5 
	left join (select accc5, sum(dmoney) dmoney, sum(cmoney) cmoney 
			   from acccs[1] where (accc2 between @t_bdate and @t_edate) and (part between @t_bpart and @t_epart) group by accc5) as R13
	on R0.acc1 = R13.accc5 
	where not(isnull(R1.dmoney-R1.cmoney,0)=0 and isnull(R2.dmoney-R2.cmoney,0)=0 and isnull(R3.dmoney-R3.cmoney,0)=0 and
			  isnull(R4.dmoney-R4.cmoney,0)=0 and isnull(R5.dmoney-R5.cmoney,0)=0 and isnull(R6.dmoney-R6.cmoney,0)=0 and
			  isnull(R7.dmoney-R7.cmoney,0)=0 and isnull(R8.dmoney-R8.cmoney,0)=0 and isnull(R9.dmoney-R9.cmoney,0)=0 and
			  isnull(R10.dmoney-R10.cmoney,0)=0 and isnull(R11.dmoney-R11.cmoney,0)=0 and isnull(R12.dmoney-R12.cmoney,0)=0)
	select gno,acc1,acc2,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,m01),1)),4,12))  m01,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,m02),1)),4,12))  m02,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,m03),1)),4,12))  m03,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,m04),1)),4,12))  m04,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,m05),1)),4,12))  m05,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,m06),1)),4,12))  m06,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,m07),1)),4,12))  m07,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,m08),1)),4,12))  m08,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,m09),1)),4,12))  m09,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,m10),1)),4,12))  m10,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,m11),1)),4,12))  m11,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,m12),1)),4,12))  m12,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,total),1)),4,12))  total
	from @tmp 
	order by acc1;