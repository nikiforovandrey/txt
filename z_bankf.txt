z_bankf1:--z_bankf1
declare @t_bxdate nvarchar(20)
declare @t_exdate nvarchar(20)
declare @t_xcno nvarchar(max)
set @t_bxdate = case when '#non' = [2] then '' else [2] end
set @t_exdate = case when '#non' = [3] then CHAR(255) else [3] end
set @t_xcno = case when '#non' = [6] then '' else [6] end
---------------------------------------------------------------------------
declare @cmd nvarchar(max)
declare @string nvarchar(max)
declare @n int
-------------------------------------------------------------------
	IF OBJECT_ID('tempdb..#acomp')is not null
	BEGIN
		set @cmd = 'drop table #acomp'
		EXECUTE sp_executesql @cmd
	END
	create table #acomp(
		noa nvarchar(20)
	)
	set @string = @t_xcno
	while(1=1)
	begin
		set @n = PATINDEX('%,%',@string)
		if @n=0
		begin
			if LEN(@string)>0
			begin
				insert into #acomp select @string
			end
			break
		end
		insert into #acomp select LEFT(@string,@n-1)	
		set @string = SUBSTRING(@string,@n+1,LEN(@string)-@n)
	end
--------------------------------------------------------------------------------
declare @tmp table (
		gno  nvarchar(1),
		noa nvarchar(30),
		cno nvarchar(20),
		acomp nvarchar(90),
		indate nvarchar(20),
		lcno nvarchar(30),
		bankno nvarchar(20),
		bank nvarchar(50),
		account nvarchar(50),
		money1 float,
		autos nvarchar(10),
		undate nvarchar(20),
		money2 float
)
insert into @tmp
select '0' gno,a.noa,a.cno,a.acomp,a.indate,a.lcno,a.bankno,a.bank,a.account,a.money,
case a.auto when  '1' then '是' when '0' then '否' end,a.undate,a.money2 
from bankf a
left join #acomp b on a.cno = b.noa
where (a.indate between @t_bxdate and @t_exdate) 
and(b.noa  is  not  null)
insert into @tmp
select '1' gno,'',cno,max(acomp),'','','','','',sum(money1),
'','',sum(money2)
from @tmp
group by cno

insert into @tmp
select '2' gno,'',CHAR(255),max(acomp),'','','','','',sum(money1),
'','',sum(money2)
from @tmp
where gno = 1

select gno,noa,cno,acomp,indate,lcno,bankno,bank,account,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,money1),1)),4,12)) money1,autos,undate,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,money2),1)),4,12)) money2
from @tmp;
--------------------------------------------------------------------------------------------------------
z_bankf2:--
declare @t_benddate nvarchar(10)
declare @t_eenddate nvarchar(10)
declare @t_bxlcno nvarchar(20)
declare @t_exlcno nvarchar(90)
set @t_benddate = case when '#non' = [2] then '' else [2] end
set @t_eenddate = case when '#non' = [3] then CHAR(255) else [3] end
set @t_bxlcno = case when '#non' = [6] then '' else [6] end
set @t_exlcno = case when '#non' = [7] then '' else [7] end
declare @tmp table(
	gno nvarchar(1),
	noa nvarchar(25),
	bank nvarchar(90),
	money float,
	indate nvarchar(10),
	enddate nvarchar(10),
	date3 nvarchar(10),
	money4 float,
	tax float,
	memo nvarchar(max)
)
insert into @tmp 
select 
		'0',a.lcno,a.bank,b.money,b.indate,b.enddate,a.date,a.money,(a.money *0.1),a.memo
	from bankf2 a 
	left join bankf b on a.lcno = b.noa
	where (b.enddate between @t_benddate and @t_eenddate) and (a.lcno between @t_bxlcno and @t_exlcno) 
insert into @tmp(gno,noa,money4,tax) 
select '1',noa,SUM(money4),SUM(tax) from @tmp group by noa 
select 
	gno,noa,bank, 
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,money),1)),4,12)) money,indate,enddate,date3, 
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,money4),1)),4,12)) money4, 
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,tax),1)),4,12)) tax,memo 
from @tmp;