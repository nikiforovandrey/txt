z_cut1:--z_cut1
declare @t_accy nvarchar(20)
declare @t_bnoa nvarchar(20)
declare @t_enoa nvarchar(20)
set @t_accy = '[2]'
set @t_bnoa = case when '#non' = [3] then ' ' else [3] end
set @t_enoa = case when '#non' = [4] then CHAR(255) else [4] end
declare @tmp table(
		gno nvarchar(1),
		noa nvarchar(30),
		noq nvarchar(20),
		typea nvarchar(10),
		datea nvarchar(10),
		ordeno nvarchar(20),
		storeno2 nvarchar(20),
		sdate nvarchar(10),
		uno nvarchar(20),
		product nvarchar(50),
		[source] nvarchar(20),
		spec nvarchar(20),
		class nvarchar(20),
		size nvarchar(40),
		mech nvarchar(30),
		eweight float,
		mount float,
		gweight float,
		storeno nvarchar(20),
		useno nvarchar(20),
		csize nvarchar(40),
		smount float,
		theory float,
		hweight float,
		weightb float,
		bno nvarchar(20),
		timea nvarchar(20),
		memo nvarchar(200)
) 
insert into @tmp
select '0' gno, a.noa, b.noq, a.typea,a.datea,a.ordeno,c.storeno,c.sdate,a.uno,c.product,c.source,c.spec,c.class,
dbo.csize(a.kind,c.dime,c.width,c.lengthb,c.radius),
a.mech,a.eweight,a.mount,a.gweight,b.storeno,b.custno,
dbo.csize(a.kind,b.dime,b.width,b.lengthb,b.radius),
b.mount,b.theory,b.hweight,b.weight,b.bno,b.time,a.memo
from cut[2] a
left join cuts[2] b on a.noa = b.noa
left join uccc c on c.noa = a.uno

select *
from @tmp;
--*******************************************************************************************************************************************************************************************
z_cut2:--z_cut2
declare @t_accy nvarchar(20)
declare @t_bnoa nvarchar(20)
declare @t_enoa nvarchar(20)
declare @t_bdate nvarchar(20)
declare @t_edate nvarchar(20)
set @t_accy = '[2]'
set @t_bnoa = case when '#non' = [3] then ' ' else [3] end
set @t_enoa = case when '#non' = [4] then CHAR(255) else [4] end
set @t_bdate = case when '#non' = [5] then ' ' else [5] end
set @t_edate = case when '#non' = [6] then CHAR(255) else [6] end
declare @tmp table(
		gno  nvarchar(1),
		noa nvarchar(30),
		noq nvarchar(20),
		datea nvarchar(10),
		uno nvarchar(20),
		productno nvarchar(20),
		product nvarchar(50),
		spec nvarchar(20),
		bsize nvarchar(50),
		gweight float,
		bno nvarchar(20),
		esize nvarchar(20),
		mount float,
		theory float,
		weightb float,
		itype nvarchar(30),
		totbweight float,
		totrweight float,
		totgweight float,
		totweightb float
)
insert into @tmp
select '0' gno,a.noa,b.noq,a.datea,a.uno,a.productno,a.product,a.spec,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.dime),1)),4,12))+' x '+
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.width),1)),4,12))+' x '+
case when a.lengthb = 0 then 'C' else reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.lengthb),1)),4,12)) end,
a.gweight,b.bno,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,b.dime),1)),4,12))+' x '+
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,b.width),1)),4,12))+' x '+
case when b.lengthb = 0 then 'C' else reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,b.lengthb),1)),4,12)) end,
b.mount,b.theory,b.weight,c.itype,0,0,0,0
from cut[2] a
left join cuts[2] b on a.noa = b.noa
left join uccc c on a.uno = c.noa
where (a.datea between @t_bdate and @t_edate)

insert into @tmp
select '1' gno,'','','','','','','','',0,'','',0,0,0,'',SUM(case when not(itype='代工') then gweight end),
SUM(case when itype='代工' then gweight end ),SUM(gweight),SUM(theory)
from @tmp

select *
from @tmp;
--*************************************************************************************************************************************
z_cut3:--z_cut3
declare @pagecount int
declare @t_tel nvarchar(20)
declare @t_accy nvarchar(20)
declare @t_bnoa nvarchar(30)
declare @t_enoa nvarchar(30)
set @pageCount = 7
set @t_tel ='[1]'
set @t_accy = '[2]'
set @t_bnoa = case when '#non' = [3] then '' else [3] end
set @t_enoa = case when '#non' = [4] then CHAR(255) else [4] end
declare @tmpa table(
		gno nvarchar(1),
		noa nvarchar(30),
		noq nvarchar(20),
		comp nvarchar(50),
		datea nvarchar(10),
		type2 nvarchar(20),
		uno nvarchar(20),
		spec nvarchar(20),
		gtime nvarchar(20),
		product nvarchar(50),
		size nvarchar(90),
		gweight float,
		mech nvarchar(20),
		class nvarchar(20),
		eweight float,
		custno nvarchar(20),
		esize nvarchar(90),
		mount float,
		theory float,
		weightb float,
		tmemo nvarchar(200),
		xbutt nvarchar(20),
		bno nvarchar(20),
		memo nvarchar(200),
		worker nvarchar(20)
)
insert into @tmpa
select '0' gno,a.noa,b.noq,a.tgg,a.datea,case a.type2 when '1' then '分條' 
when '2' then '剪板' when '3' then '分捲'
when '4' then '貼膜' when '5' then '壓延'
when '6' then '領料' when '7' then '退火'
when '8' then '壓脫' end,a.uno,a.spec,a.gtime,a.product,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.dime),1)),4,12))+' x '+
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.width),1)),4,12))+' x '+
case when a.lengthb = 0 then 'C' else reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.lengthb),1)),4,12)) end,
a.gweight,a.mech,c.class,a.eweight,b.custno,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,b.dime),1)),4,12))+' x '+
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,b.width),1)),4,12))+' x '+
case when b.lengthb = 0 then 'C' else reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,b.lengthb),1)),4,12)) end,
b.mount,b.theory,b.weight,b.memo,b.xbutt,b.bno,a.memo,a.worker
from cut[2] a 
left join cuts[2] b on a.noa = b.noa
left join uccc c on c.noa = a.uno
where (a.noa between @t_bnoa and @t_enoa)

declare @tmp table(
		gno nvarchar(1),
		noa nvarchar(30),
		noq nvarchar(20),
		comp nvarchar(50),
		datea nvarchar(10),
		type2 nvarchar(20),
		uno nvarchar(20),
		spec nvarchar(20),
		gtime nvarchar(20),
		product nvarchar(50),
		size nvarchar(90),
		gweight float,
		mech nvarchar(20),
		class nvarchar(20),
		eweight float,
		custno nvarchar(20),
		esize nvarchar(90),
		mount float,
		theory float,
		weightb float,
		tmemo nvarchar(200),
		xbutt nvarchar(20),
		bno nvarchar(20),
		memo nvarchar(200),
		worker nvarchar(20),
		recno int,
		currecno int,
		curpage int,
		totpage int
)
insert into @tmp
select a.*,ROW_NUMBER()over(order by gno) recno,0 currecno,0 curpage,0 totpage 
				 from( 
				select  gno,noa,noq,comp,datea,type2,uno,spec,gtime,product,size,gweight,mech,
				class,eweight,custno,esize,mount,theory,weightb,tmemo,xbutt,bno,memo,worker
				from @tmpa a
				 )a
declare @noa nvarchar(30)
	declare @count int
	declare @t_count int
	declare @recno int
	declare @currecno int
	declare @curpage int
	declare @totpage int
	declare @t_noa nvarchar(30)
	declare @t_currecno float
	set @t_currecno = 0
	
	declare cursor_table cursor for
	select noa,min(recno) from @tmp group by noa
	open cursor_table
	fetch next from cursor_table
	into @noa,@recno
	while(@@FETCH_STATUS <> -1)
	begin
		update @tmp set currecno = recno - @recno +1 where noa=@noa
		fetch next from cursor_table
		into @noa,@recno
	end
	close cursor_table
	deallocate cursor_table
	--------------------------------------------------
	declare @count1 int
	declare @count2 int
	declare cursor_table cursor for
	select noa,count(*) count1,(count(*)/@pageCount+1)*@pageCount count2 from @tmp group by noa
	open cursor_table
	fetch next from cursor_table
	into @noa,@count1,@count2
	while(@@FETCH_STATUS <> -1)
	begin
		while(@count1<@count2) and not(@count1 % @pagecount = 0)
		begin
			insert into @tmp (gno,noa,currecno)VALUES(0,@noa,@count1+1)
			set @count1=@count1+1
		end
		fetch next from cursor_table
		into @noa,@count1,@count2
	end
	close cursor_table
	deallocate cursor_table
	
	---------------------------------------------------
	declare cursor_table cursor for
	select noa,max(currecno) from @tmp group by noa
	open cursor_table
	fetch next from cursor_table
	into @noa,@currecno
	while(@@FETCH_STATUS <> -1)
	begin
		update @tmp set totpage = (@currecno-@currecno%@pagecount)/@pagecount where noa=@noa
		fetch next from cursor_table
		into @noa,@currecno
	end
	close cursor_table
	deallocate cursor_table
	
	declare cursor_table cursor for
	select noa,recno,currecno from @tmp
	open cursor_table
	fetch next from cursor_table
	into @noa,@recno,@currecno
	while(@@FETCH_STATUS <> -1)
	begin
		update @tmp set curpage = FLOOR((@currecno-1)/@pagecount)+1 where noa=@noa and recno=@recno
		fetch next from cursor_table
		into @noa,@recno,@currecno
	end
		close cursor_table
	deallocate cursor_table


select gno,noa,noq,comp,datea,type2,uno,spec,gtime,product,size,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,gweight),1)),4,12)) gweight,mech,class,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,eweight),1)),4,12)) eweight,custno,esize,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,mount),1)),4,12)) mount,theory,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,weightb),1)),4,12)) weightb,tmemo,xbutt,bno,
memo,worker,recno,currecno,curpage,totpage,CONVERT(nvarchar(5),curpage)+'/'+CONVERT(nvarchar(5),totpage) page
from @tmp
order by noa,currecno;
--**************************************************************************************************************************
z_cut4:--z_cut4
declare @t_accy nvarchar(20)
declare @t_bdate nvarchar(10)
declare @t_edate nvarchar(10)
declare @t_btggno nvarchar(20)
declare @t_etggno nvarchar(20)
set @t_accy = '[2]'
set @t_bdate = case when '#non' = [5] then '' else [5] end
set @t_edate = case when '#non' = [6] then CHAR(255) else [6] end
set @t_btggno = case when '#non' = [7] then '' else [7] end
set @t_etggno = case when '#non' = [8] then CHAR(255) else [8] end
declare @tmp table(
		gno nvarchar(1),
		noa nvarchar(30),
		noq nvarchar(20),
		tggno nvarchar(20),
		comp nvarchar(50),
		tel nvarchar(20),
		mon nvarchar(10),
		fax nvarchar(20),
		addr nvarchar(90),
		datea nvarchar(10),
		uno nvarchar(30),
		spec nvarchar(20),
		product nvarchar(20),
		size nvarchar(20),
		mount float,
		weightb float,
		wprice float,
		totmoney float,
		totcount float,
		totweight float,
		totmount float	
)
insert into @tmp
select '0' gno,a.noa,b.noq,a.tggno,a.tgg,isnull(c.tel,''),a.mon,isnull(c.fax,''),isnull(c.addr_invo,''),a.datea,a.uno,a.spec,a.product,
case when a.typea='5' then  reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,b.radius),1)),4,12))+' x '+
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,b.width),1)),4,12))+' x '+
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,b.dime),1)),4,12))+' x '+
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,b.lengthb),1)),4,12))  else 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,b.radius),1)),4,12)) +' x '+
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,b.width),1)),4,12)) +' x '+ 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,b.lengthb),1)),4,12)) end,
b.mount,b.weight,b.wprice,round(b.weight*b.wprice,0),0,0,0
from cut[2] a
left join cuts[2] b on a.noa = b.noa
left join tgg c on c.noa = a.tggno
where (a.tggno between @t_btggno and @t_etggno) and
(a.datea between @t_bdate and @t_edate) 
insert into @tmp
select '1' gno,'','',tggno,'','','','','','','','','','',0,0,0,SUM(totmoney),COUNT(noa),SUM(weightb),SUM(mount)
from @tmp
group by tggno

select *
from @tmp
order by  tggno,gno;
--******************************************************************************************************************************************
z_cut5:--z_cut5
declare @t_bdate nvarchar(10)
declare @t_edate nvarchar(10)
declare @t_bmechno nvarchar(20)
declare @t_emechno nvarchar(20)
declare @t_pageline int = 8   --------一頁幾行
set @t_bdate = case when '#non' = [5] then '' else [5] end
set @t_edate = case when '#non' = [6] then CHAR(255) else [6] end
set @t_bmechno = case when '#non' = [9] then '' else [9] end
set @t_emechno = case when '#non' = [10] then CHAR(255) else [10] end
declare @tmp table(
	gno nvarchar(1),
	idno int identity(0,1),
	orderno int,
	pageno int,
	noa nvarchar(30),
	noq nvarchar(20),
	mechno nvarchar(30),
	mech nvarchar(90),
	datea nvarchar(10),
	uno nvarchar(30),
	product nvarchar(50),
	spec nvarchar(40),
	size nvarchar(max),
	mount float,
	oweightb float,
	gweight float,
	esize nvarchar(max),
	emount float,
	theory float,
	hweight float,
	weightb float,
	timea nvarchar(20),
	comp nvarchar(20)
)
insert into @tmp
	select '0' gno,ROW_NUMBER()over(partition by a.mechno order by a.mechno),0,a.noa,b.noq,a.mechno,a.mech,a.datea,a.uno,a.product,a.spec,
	dbo.csize(a.kind,a.dime,a.width,a.lengthb,a.radius),a.mount,a.oweight,a.gweight,
	dbo.csize(a.kind,b.dime,b.width,b.lengthb,b.radius),
	b.mount,b.theory,b.hweight,b.weight,b.time,case when len(c.nick)> 0 then c.nick else LEFT(b.comp,4) end
	from cut[2] a
	left join cuts[2] b on a.noa = b.noa
	left join cust c on b.custno = c.noa
	where (a.datea between @t_bdate and @t_edate) and
	(a.mechno between @t_bmechno and @t_emechno) and
	not(LEN(a.mech) = 0)

declare @a_mechno nvarchar(30)
declare @a_count int
declare @idno int
declare @k int = 0 ----差幾頁
declare @pageCount int
declare @orderno int
declare @pageno int
declare cursor_table cursor for
	select mechno,count(*),max(orderno) from @tmp group by mechno
open cursor_table
fetch next from cursor_table
into @a_mechno,@a_count,@orderno
while(@@FETCH_STATUS <> -1)
begin		
	if(@a_count > @t_pageline)
	begin
		set @k = CEILING((cast(@a_count as float)/@t_pageline))
		while(@k > 0)
		begin
			update @tmp set pageno = @k where orderno > ((@k-1)*@t_pageline) and orderno <= (@k*@t_pageline)
			set @k -=1
		end
	end
	fetch next from cursor_table
	into @a_mechno,@a_count,@orderno
end
close cursor_table
deallocate cursor_table
update @tmp set orderno = orderno-((pageno-1)*@t_pageline)
declare cursor_table cursor for
	select distinct mechno,max(orderno),pageno,min(idno),count(*) from @tmp group by mechno,pageno
open cursor_table
fetch next from cursor_table
into @a_mechno,@orderno,@pageno,@idno,@a_count
while(@@FETCH_STATUS <> -1)
begin		
	set @k = @t_pageline -(@a_count%@t_pageline)
	set @pageCount = @a_count/@t_pageline
	if(@k < @t_pageline and (@pageCount =0))
	begin
		while(@k > 0)
		begin
			insert into @tmp(gno,orderno,pageno,mechno)
				select '0',(@orderno+1),@pageno,@a_mechno from @tmp where idno = @idno
			set @k = @k-1
			set @orderno = @orderno +1
		end
	end
	insert into @tmp(gno,orderno,pageno,mechno,mount,weightb,gweight)
		select '1',(@t_pageline+1),pageno,mechno,sum(mount),sum(weightb),sum(gweight) from @tmp where gno=0 and mechno=@a_mechno and pageno=@pageno group by mechno,pageno
	insert into @tmp(gno,orderno,pageno,mechno) 
		select '2',(@t_pageline+2),pageno,mechno from @tmp where gno=0 and mechno=@a_mechno and pageno=@pageno group by mechno,pageno
	fetch next from cursor_table
	into @a_mechno,@orderno,@pageno,@idno,@a_count
end
close cursor_table
deallocate cursor_table
select gno,noa,noq,mechno,mech,datea,uno,product,spec,size,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,mount),1)),4,12)) mount,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,oweightb),1)),4,12)) oweightb,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,gweight),1)),4,12)) gweight,
esize,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,emount),1)),4,12)) emount,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,theory),1)),4,12)) theory,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,hweight),1)),4,12)) hweight,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,weightb),1)),4,12)) weightb,
timea,comp
from @tmp order by mechno desc,pageno,gno,orderno;