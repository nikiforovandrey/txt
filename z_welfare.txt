z_welfare1:--z_welfare1
declare @t_bdate nvarchar(10)
declare @t_edate nvarchar(10)
set @t_bdate = case when '#non'=[1] then '' else [1] end
set @t_edate = case when '#non'=[2] then char(255) else [2] end
declare @tmp table( 
gno nvarchar(1),
recno int, 
noa nvarchar(20), 
noq nvarchar(10),
datea nvarchar(10), 
product nvarchar(50), 
income int, 
pay int, 
total float 
) 
insert into @tmp 
select '0' gno,ROW_NUMBER()over(order by noa,noq,product)as recno,R1.noa,R1.noq,
R1.datea,R1.product,R1.income,R1.pay,R1.total
from( 
select '0' gno,'1' noa,'' noq,'' datea,'期初金額' product,0 income
,0 pay,0 total from welfare 
where (datea< @t_bdate)
union 
select '0' gno,a.noa noa,b.noq noq,a.datea datea,b.product product,isnull(b.income,0) income,isnull(b.pay,0) pay,0 total
from welfare a
left join welfares b on a.noa = b.noa 
where datea <= @t_edate 
) as R1 
declare @gno nvarchar(20)
declare @t_gno nvarchar(20)
declare @noa nvarchar(20)
declare @noq nvarchar(20)
declare @recno int
declare @datea nvarchar(20)
declare @product nvarchar(20)
declare @income int
declare @pay int
declare @total int
declare @t_income int
declare @t_pay int
declare @t_total int
set @t_gno = 'qwert'
set @t_income = 0
set @t_pay = 0
set @t_total = 0

declare cursor_table cursor for 
select gno,noa,noq,datea,product,income,pay,total,recno from @tmp 
open cursor_table 
fetch next from cursor_table 
into @gno,@noa,@noq,@datea,@product,@income,@pay,@total,@recno
while(@@FETCH_STATUS <> -1) 
begin 
if (@t_gno != @gno) 
begin 
set @t_gno = @gno
set @t_income = @income
set @t_pay = @pay
set @t_total = @income - @pay 
end 
else 
begin 
set @t_income = @t_income +@income
set @t_pay = @t_pay +@pay 
set @t_total = @t_total + @income - @pay 
end 
update @tmp set total = @t_total where recno= @recno  
fetch next from cursor_table 
into @gno,@noa,@noq,@datea,@product,@income,@pay,@total,@recno	
end 
close cursor_table 
deallocate cursor_table 
declare @tmpa table( 
gno nvarchar(1),
recno int, 
noa nvarchar(20), 
noq nvarchar(10),
datea nvarchar(10), 
product nvarchar(50), 
income int, 
pay int, 
total float 
)
insert into @tmpa
select gno,recno,noa,noq,datea,product,income,pay,total
from @tmp
where datea between @t_bdate and @t_edate

insert into @tmpa
select '1',0,'2','','','',SUM(income),SUM(pay),0
from @tmpa

select 
gno,noa,noq,datea,product, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,isnull(income,0)),1)),4,12)) income, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,isnull(pay,0)),1)),4,12)) pay, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,isnull(total,0)),1)),4,12)) total 
from @tmpa order by gno,datea;
--*****************************************************************************************************
z_welfare2:--z_welfare2
declare @t_bdate nvarchar(10)
declare @t_edate nvarchar(10)
set @t_bdate = case when '#non'=[1] then '' else [1] end
set @t_edate = case when '#non'=[2] then char(255) else [2] end
declare @tmp table(
	gno nvarchar(1),
	noa nvarchar(20),
	datea nvarchar(10),
	income nvarchar(15),
	pay nvarchar(15),
	total nvarchar(15),
	inpaymemo nvarchar(200)
)
insert into @tmp
	select '2' gno,noa,datea,income,pay,'0',inpaymemo from welfare where (datea between @t_bdate and @t_edate)
insert into @tmp
select '0' gno,'','',sum(cast(income as int)),sum(cast(pay as int)),(sum(cast(income as int)) - sum(cast(pay as int))),inpaymemo from @tmp group by inpaymemo
insert into @tmp
select '1' gno,'','',sum(cast(income as int)),sum(cast(pay as int)),(sum(cast(income as int)) - sum(cast(pay as int))),'' from @tmp where (gno = 0) group by gno
select gno,inpaymemo,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,isnull(income,0)),1)),4,12)) income,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,isnull(pay,0)),1)),4,12)) pay,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,isnull(total,0)),1)),4,12)) total
from @tmp where (gno != 2);