z_lc1:--z_lc1
declare @t_bacc1 nvarchar(30)
declare @t_eacc1 nvarchar(30)
declare @t_floata nvarchar(50)

set @t_bacc1 = case when '#non'=[2] then '' else [2] end
set @t_eacc1 = case when '#non'=[3] then char(255) else [3] end
set @t_floata = case when '#non'=[4] then '0' else [4] end
------------------------------------------------------------------------------------------------------------------------------------------------
declare @tmp table(
	gno nvarchar(1),
	lc_acc1 nvarchar(30),
	lc_namea nvarchar(90),
	lc_credit float,
	lc_expire float,
	lc_accno1 nvarchar(30),
	lc_rate float,
	lc_datea nvarchar(10),
	lc_accno2 nvarchar(30),
	lc_conrate1 float,
	lc_conrate2 float,
	lc_accno4 nvarchar(30),
	lc_bank nvarchar(50),
	lc_coin nvarchar(50),
	lcs_noa nvarchar(30),
	lcs_datea nvarchar(10),
	lcs_tgg nvarchar(90),
	lcs_money float,
	lcs_unpay float,
	lcs_memo nvarchar(max),
	lcs_paydate nvarchar(10),
	lcs_lcdate nvarchar(10),
	lcs_lcmoney float,
	lcs_coin nvarchar(90),
	accmoney float,
	acc2money float,
	acc4money float,
	gqbmoney float
)
insert into @tmp
select '0' gno,b.acc1,b.namea,b.credit,b.expire,b.accno,b.rate,b.datea,b.accno2,b.conrate1,b.conrate2,b.accno4,b.bank,b.coin,
a.noa,a.datea,a.tgg,a.money,a.unpay,'' memo,a.paydate,a.lcdate,a.lcmoney,a.coin
,isnull((select sum((dmoney-cmoney)*(case when left(accc5,1)='1' or left(accc5,1)='5' or left(accc5,1)='6' or left(accc5,1)='8' or left(accc5,2)='73' then 1 else -1 end)) from view_acccs[1]_1 where accc5=b.accno),0)
,isnull((select sum((dmoney-cmoney)*(case when left(accc5,1)='1' or left(accc5,1)='5' or left(accc5,1)='6' or left(accc5,1)='8' or left(accc5,2)='73' then 1 else -1 end)) from view_acccs[1]_1 where accc5=b.accno2),0)
,isnull((select sum((dmoney-cmoney)*(case when left(accc5,1)='1' or left(accc5,1)='5' or left(accc5,1)='6' or left(accc5,1)='8' or left(accc5,2)='73' then 1 else -1 end)) from view_acccs[1]_1 where accc5=b.accno4),0)
,isnull((select sum(case when typea='1' then 1 when typea='2' then -1 else 0 end *money) from  gqb where tbankno=b.bankno and isnull(enda,'')=''),0)
from lcs a	left join lc b on (b.noa = left(a.noa,len(b.noa))) and (len(a.noa) = len(b.noa)+3)
where a.unpay > 0 and (b.acc1 between @t_bacc1 and @t_eacc1)

declare @lcs_noa nvarchar(30)
declare @lcss_datea nvarchar(10)
declare @lcss_pay float
declare @i int = 0
declare @lcss_payTmp nvarchar(50) = ''
declare cursor_table cursor for
select lcs_noa from @tmp
open cursor_table
fetch next from cursor_table
into @lcs_noa
while(@@FETCH_STATUS <> -1)
begin
	set @i = 0
	declare cursor_table2 cursor for
		select datea,pay from lcss where noa=@lcs_noa order by noq
	open cursor_table2
	fetch next from cursor_table2
	into @lcss_datea,@lcss_pay
	while(@@FETCH_STATUS <> -1)
	begin
		if(@i = 2)
		begin
			update @tmp set lcs_memo = lcs_memo + '<br>'
			set @i = 0
		end
		else
			set @i +=1
		if(isnull(@lcss_datea,'') != '')
		begin
			set @lcss_payTmp = reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,@lcss_pay),1)),4,12))
			update @tmp set lcs_memo = lcs_memo + '　' +@lcss_datea+' ( ' + @lcss_payTmp +' )　' where lcs_noa = @lcs_noa
		end
		fetch next from cursor_table2
		into @lcss_datea,@lcss_pay
	end
	close cursor_table2
	deallocate cursor_table2
	fetch next from cursor_table
	into @lcs_noa
end
close cursor_table
deallocate cursor_table
update @tmp set lcs_memo = replace(lcs_memo,'<br><br>','')
update @tmp set lcs_memo = substring(lcs_memo,5,len(lcs_memo)) where left(lcs_memo,4) = '<br>'
update @tmp set lcs_memo = left(lcs_memo,len(lcs_memo)-6) where right(lcs_memo,6) = '　　<br>'
insert into @tmp(gno,lc_acc1,lc_credit,lcs_money)
	select '1',lc_acc1,lc_credit,sum(lcs_money) from @tmp group by lc_acc1,lc_credit
update @tmp set lcs_memo=reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,(lc_credit-lcs_money)),1)),4,12)) where gno = '1'
select
	gno,lc_acc1,lc_namea,lc_bank,
	reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,lc_credit),1)),4,30)) lc_credit,
	cast(lc_expire as nvarchar) +' 天' lc_expire,
	lc_accno1
	,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,lc_rate),1)),0,30)) lc_rate
	,lc_datea,lc_accno2,
	'定存 ' + reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,lc_conrate1),1)),0,30)) + ' %' lc_conrate1,
	'客票 ' + reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,lc_conrate2),1)),0,30)) + ' %' lc_conrate2,
	lc_accno4,lcs_datea,lcs_tgg,
	reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,lcs_money),1)),4,30)) lcs_money,
	lcs_memo,lcs_paydate,lcs_lcdate,lcs_coin
	,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,lcs_lcmoney),1)),4,30)) lcs_lcmoney
	,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,lcs_unpay),1)),4,30)) lcs_unpay
	,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,accmoney),1)),4,30)) accmoney
	,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,acc2money),1)),4,30)) acc2money
	,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,acc4money),1)),4,30)) acc4money
	,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,gqbmoney),1)),4,30)) gqbmoney
	
from @tmp order by lc_acc1,gno,lcs_datea;
--******************************************************************************************************