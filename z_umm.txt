z_umm01:--z_umm01 銷帳記錄
	SET QUOTED_IDENTIFIER OFF
	declare @cmd nvarchar(max)
	declare @t_accy nvarchar(10)
	declare @t_bdate nvarchar(10)
	declare @t_edate nvarchar(10)
	declare @t_bmon nvarchar(10)
	declare @t_emon nvarchar(10)
	declare @t_bcustno nvarchar(20)
	declare @t_ecustno nvarchar(20)
	declare @t_part nvarchar(max)
	declare @t_deadline nvarchar(10)
	
	set @t_accy='[1]'
	set @t_bdate = case when '#non'=[2] then '' else [2] end
	set @t_edate = case when '#non'=[3] then CHAR(255) else [3] end
	set @t_bmon = case when '#non'=[4] then '' else [4] end
	set @t_emon = case when '#non'=[5] then CHAR(255) else [5] end
	set @t_bcustno = case when '#non'=[6] then '' else [6] end
	set @t_ecustno = case when '#non'=[7] then CHAR(255) else [7] end
	set @t_part = case when '#non'=[8] then '' else [8] end
	set @t_deadline = case when '#non'=[9] then CHAR(255) else [9] end
	-----------------------------------------------------------------------
	declare @string nvarchar(max)
	declare @n int
	IF OBJECT_ID('tempdb..#part')is not null
	BEGIN
		set @cmd = 'drop table #part'
		EXECUTE sp_executesql @cmd
	END
	create table #part(
		noa nvarchar(20)
	)
	set @string = @t_part
	while(1=1)
	begin
		set @n = PATINDEX('%,%',@string)
		if @n=0
		begin
			if LEN(@string)>0
			begin
				insert into #part select @string
			end
			break
		end
		insert into #part select LEFT(@string,@n-1)	
		set @string = SUBSTRING(@string,@n+1,LEN(@string)-@n)
	end
	-------------------------------------------------------------------------------------------------------------
	
	
	
	;


z_umm4:--z_umm4
declare @t_accy nvarchar(20)
declare @t_bxdate nvarchar(20)
declare @t_exdate nvarchar(20)
set @t_accy = '[9]'
set @t_bxdate = case when '#non' = [7] then '' else [7] end
set @t_exdate = case when '#non' = [8] then CHAR(255) else [8] end
declare @tmp table( 
gno nvarchar(1), 
noa nvarchar(20), 
accc3 nvarchar(20), 
accc2 nvarchar(20), 
accc6 nvarchar(50), 
memo nvarchar(max), 
dc nvarchar(20), 
inmoney int, 
paymoney int, 
ainmoney int, 
binmoney int, 
cinmoney int, 
apaymoney int, 
bpaymoney int, 
cpaymoney int, 
atotal int, 
btotal int, 
ctotal int, 
title nvarchar(20), 
zno nvarchar(20), 
azno nvarchar(20), 
acc1 nvarchar(20) 
) 
insert into @tmp 
select '0' gno,case when b.zno='umm' or b.zno='pay' then left(a.zno,11)end,b.accc3,isnull(a.accc2,''),b.accc6, 
b.accc7,b.dc ,case when dc = '1' and b.dmoney > 0 then b.dmoney  end,  
case when dc = '2' and b.cmoney > 0 then b.cmoney end ,
case when LEFT(b.accc5,4) = '1111' and dc = 1 then b.dmoney end,
case when left(b.accc5,4) = '1112' and dc = 1 then b.dmoney end, 
case when left(b.accc5,4) = '1121' and dc = 1 then b.dmoney end, 
case when left(b.accc5,4) = '1111' and dc = 2 then b.cmoney end, 
case when left(b.accc5,4) = '1112' and dc = 2 then b.cmoney end, 
case when left(b.accc5,4) = '2121' and dc = 2 then b.cmoney end, 
0,0,0, 
(case when @t_bxdate = @t_exdate then '日' else '月' end),b.zno,a.zno,b.accc5 
from acccs[9] b 
left join accc[9] a on a.accc3 = b.accc3 
where (a.accc2 between @t_bxdate and @t_exdate) and ( 
(left(b.accc5,4) = '1111' or left(b.accc5,4) = '1112') 
or (left(b.accc5,4) = '1121' and b.zno = 'umm' or left(b.accc5,4) = '1121' and b.zno = 'pay' or left(b.accc5,4) = '2121' and b.zno = 'umm' or left(b.accc5,4) = '2121' and b.zno = 'pay')) 

insert into @tmp 
select '1' gno,'',CHAR(255),'','' ,'','',SUM(inmoney),SUM(paymoney),sum(ainmoney),sum(binmoney),sum(cinmoney),sum(apaymoney), 
sum(bpaymoney),sum(cpaymoney),0,0,0,'','','',''
from @tmp 
insert into @tmp 
select '2' gno,'',CHAR(255),'','','','',0,0,0,0,0,0,0,0,ainmoney-apaymoney,binmoney-bpaymoney,cinmoney-cpaymoney,'','','' ,'' 
from @tmp 
where gno = 1 



select gno,noa,accc3,accc2,accc6,memo,dc , 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,inmoney),1)),4,12)) inmoney, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,paymoney),1)),4,12)) paymoney, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,ainmoney),1)),4,12)) ainmoney, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,binmoney),1)),4,12)) binmoney, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,cinmoney),1)),4,12)) cinmoney, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,apaymoney),1)),4,12)) apaymoney, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,bpaymoney),1)),4,12)) bpaymoney, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,cpaymoney),1)),4,12)) cpaymoney, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,atotal),1)),4,12)) atotal, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,btotal),1)),4,12)) btotal, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,ctotal),1)),4,12)) ctotal,title,zno,azno,acc1 
from @tmp 
order by accc3,gno ;
------------------------------------------------------------------------------------------------------------------
z_umm2:--z_umm2
declare @t_cno nvarchar(20)
declare @t_part nvarchar(20)
declare @t_bdate nvarchar(20)
declare @t_edate nvarchar(20)
declare @t_bcustno nvarchar(20)
declare @t_ecustno nvarchar(20)
set @t_cno = case when '#non' = [1] then '' else [1] end
set @t_part = case when '#non' = [2] then '' else [2] end
set @t_bdate = case when '#non' = [3] then '' else [3] end
set @t_edate = case when '#non' = [4] then CHAR(255) else [4] end
set @t_bcustno = case when '#non' = [5] then '' else [5] end
set @t_ecustno = case when '#non' = [6] then CHAR(255) else [6] end
declare @tmp table( 
gno nvarchar(1), 
noa nvarchar(30), 
noq nvarchar(20), 
datea nvarchar(10), 
cno nvarchar(20), 
acc1 nvarchar(20),
typea nvarchar(50), 
custno nvarchar(20), 
comp nvarchar(50), 
[money] int, 
chgs int, 
paysales int, 
mons nvarchar(6), 
part nvarchar(10), 
vccno nvarchar(20), 
unpay int, 
checkno nvarchar(20), 
bank nvarchar(20), 
indate nvarchar(10), 
acomp nvarchar(50), 
account nvarchar(20), 
memo nvarchar(200) 
) 
insert into @tmp 
select '0' gno,b.noa,b.noq,a.datea,a.cno,b.acc1,b.acc2,a.custno,left(a.comp,4),b.money,b.chgs,b.paysale,b.mon,b.part,b.vccno,a.unpay, 
b.checkno,b.bank,b.indate,left(a.acomp,4),b.account,b.memo 
from umm a 
left join umms b on b.noa = a.noa 
where (LEN(@t_cno) = 0 or a.cno = @t_cno) and 
(LEN(@t_part) = 0 or b.part = @t_part) and 
(a.datea between @t_bdate and @t_edate) 

insert into @tmp
select '1' gno,'','','','','','',custno,MAX(comp),sum(money),sum(chgs),sum(paysales),'','','',sum(unpay), 
'','','','','','' m
from @tmp
group by custno 

select gno,noa,noq,datea,cno,acc1,typea,custno,comp, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,money),1)),4,12)) money, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,chgs),1)),4,12)) chgs, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,paysales),1)),4,12)) paysales, 
mons,part,vccno,unpay,checkno,bank,indate,acomp,account,memo 
from @tmp 
order by custno,gno,part,typea; 

--*************************************************************************************************************************************
z_umm5:--z_umm5
declare @t_cno nvarchar(20)
declare @t_part nvarchar(20)
declare @t_bdate nvarchar(20)
declare @t_edate nvarchar(20)
declare @t_bcustno nvarchar(20)
declare @t_ecustno nvarchar(20)
set @t_cno = case when '#non' = [1] then '' else [1] end
set @t_part = case when '#non' = [2] then '' else [2] end
set @t_bdate = case when '#non' = [3] then '' else [3] end
set @t_edate = case when '#non' = [4] then CHAR(255) else [4] end
set @t_bcustno = case when '#non' = [5] then '' else [5] end
set @t_ecustno = case when '#non' = [6] then CHAR(255) else [6] end
declare @tmp table(
		gno nvarchar(1),
		noa nvarchar(30),
		noq nvarchar(20),
		datea nvarchar(10),
		cno nvarchar(20),
		typea nvarchar(50),
		custno nvarchar(20),
		comp nvarchar(50),
		[money] int,
		chgs int,
		paysales int,
		mons nvarchar(6),
		part nvarchar(10),
		vccno nvarchar(20),
		unpay int,
		checkno nvarchar(20),
		bank nvarchar(20),
		indate nvarchar(10),
		opay int,
		unopay int,
		textopay int
)

--上期資料
insert into @tmp
select '0' gno,null,'000',null,null,'上期餘額',a.custno,left(a.comp,4),null,null,null,null,null,null,null,
null,null,null,sum(a.opay),sum(a.unopay),0
from umm a
left join umms b on b.noa = a.noa
where (LEN(@t_cno) = 0 or a.cno = @t_cno) and
(LEN(@t_part) = 0 or b.part = @t_part) and
(a.datea <@t_bdate)  and
(a.custno between @t_bcustno and @t_ecustno)
group by a.custno,a.comp


--指定時間的資料
insert into @tmp
select '0' gno,b.noa,b.noq,a.datea,a.cno,b.acc2,a.custno,left(a.comp,4),b.money,b.chgs,b.paysale,b.mon,b.part,b.vccno,a.unpay,
b.checkno,b.bank,b.indate,a.opay,a.unopay,0
from umm a
left join umms b on b.noa = a.noa
where (LEN(@t_cno) = 0 or a.cno = @t_cno) and
(LEN(@t_part) = 0 or b.part = @t_part) and
(a.datea between @t_bdate and @t_edate) and
(a.custno between @t_bcustno and @t_ecustno)

insert into @tmp
select '1' gno,'','','','','',custno,'',SUM(money),SUM(chgs),SUM(paysales),'','','',0,
'','','',0,0,0
from @tmp
group by custno

--只保留一筆預收金額
update @tmp
set opay=0
where noq>'001'

select gno,noa,noq,datea,cno,typea,custno,comp,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,money),1)),4,12)) money,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,chgs),1)),4,12)) chgs,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,paysales),1)),4,12)) paysales,
mons,part,vccno,unpay,checkno,bank,indate,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,opay),1)),4,12)) opay,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,unopay),1)),4,12)) unopay,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,textopay),1)),4,12)) textopay
from @tmp
order by custno,gno,noq;
----------------------------------------------------------------------------------------------
z_umm6:--z_umm6
declare @t_bscno nvarchar(20)
declare @t_escno nvarchar(20)
declare @t_bcustno nvarchar(20)
declare @t_ecustno nvarchar(20)
declare @t_xmon nvarchar(10)
declare @t_xaccy nvarchar(20)
set @t_xaccy = '[10]'
set @t_bscno = case when '#non' = [11] then '' else [11] end
set @t_escno = case when '#non' = [12] then CHAR(255) else [12] end
set @t_bcustno = case when '#non' = [5] then '' else [5] end
set @t_ecustno = case when '#non' = [6] then CHAR(255) else [6] end
set @t_xmon = case when '#non' = [13] then '' else [13] end
declare @tmpa table(
		gno nvarchar(1),
		n nvarchar(20),
		datea nvarchar(10),
		mon nvarchar(10),
		custno nvarchar(20),
		comp nvarchar(50),
		money1 float,--前期未收
		tax float,--稅額
		money3 float,--本期應收
		money4 float,--已收
		total float,--應收總計
		textopay float,--預收餘額
		noa nvarchar(20),
		cno nvarchar(20)
)
insert into @tmpa 
select '0' gno,'',b.datea,c.mon,b.custno,case when LEN(d.nick)>0 then d.nick else LEFT(b.comp,4) end,c.unpay,c.tax,b.sale,b.total,c.payed-c.unpay,b.opay-b.unopay,b.noa,c.cno 
from umms a 
left join umm b on a.noa = b.noa 
left join trd102 c on a.vccno = c.noa
left join cust d on b.custno = d.noa
union 
select '0' gno,'',b.datea,c.mon,b.custno,case when LEN(d.nick)>0 then d.nick else LEFT(b.comp,4) end
,c.unpay,c.tax,b.sale,b.total,c.payed-c.unpay,b.opay-b.unopay,b.noa,c.cno 
from umms a 
left join umm b on a.noa = b.noa 
left join vcc102 c on a.vccno = c.noa 
left join cust d on b.custno = d.noa
union 
select '0' gno,'',b.datea,c.mon,b.custno,case when LEN(d.nick)>0 then d.nick else LEFT(b.comp,4) end
,case when c.total <0 then c.total end,0,b.sale,b.total,c.total,b.opay-b.unopay,b.noa,c.cno 
from umms a 
left join umm b on a.noa = b.noa 
left join cara c on a.vccno = c.noa 
left join cust d on b.custno = d.noa


declare @tmp table(
		gno nvarchar(1),
		n int,
		datea nvarchar(10),
		mon nvarchar(10),
		custno nvarchar(20),
		comp nvarchar(50),
		money1 float,--前期未收
		tax float,--稅額
		money3 float,--本期應收
		money4 float,--已收
		total float,--應收總計
		textopay float--預收餘額
)
insert into @tmp
select gno,ROW_NUMBER()over(order by noa,datea)as n,datea,mon,custno,comp,money1,tax,money3,money4,total,textopay
from @tmpa
where (cno between @t_bscno and @t_escno) and
(custno between  @t_bcustno and @t_ecustno) and
(LEN(@t_xmon) = 0 or @t_xmon = mon)
select gno,n,datea,mon,custno,comp,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,money1),1)),4,12)) money1,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,tax),1)),4,12)) tax,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,money3),1)),4,12)) money3,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,money4),1)),4,12)) money4,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,total),1)),4,12)) total,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,textopay),1)),4,12)) textopay
from @tmp;
----------------------------------------------------------------
z_umm7:--z_umm7
declare @t_bscno nvarchar(20)
declare @t_escno nvarchar(20)
declare @t_bcustno nvarchar(20)
declare @t_ecustno nvarchar(20)
declare @t_xmon nvarchar(10)
declare @t_xaccy nvarchar(20)
set @t_xaccy = '[10]'
set @t_bscno = case when '#non' = [11] then '' else [11] end
set @t_escno = case when '#non' = [12] then CHAR(255) else [12] end
set @t_bcustno = case when '#non' = [5] then '' else [5] end
set @t_ecustno = case when '#non' = [6] then CHAR(255) else [6] end
set @t_xmon = case when '#non' = [13] then '' else [13] end
declare @tmpa table(
		gno nvarchar(1),
		n nvarchar(20),
		datea nvarchar(10),
		mon nvarchar(10),
		custno nvarchar(20),
		comp nvarchar(50),
		money1 float,--前期未收
		tax float,--稅額
		money3 float,--本期應收
		money4 float,--已收
		total float,--應收總計
		textopay float,--預收餘額
		noa nvarchar(20),
		cno nvarchar(20)
)
insert into @tmpa 
select '0' gno,'',b.datea,c.mon,b.custno,case when LEN(d.nick)>0 then d.nick else LEFT(b.comp,4) end,c.unpay,c.tax,b.sale,b.total,c.payed-c.unpay,b.opay-b.unopay,b.noa,c.cno 
from umms a 
left join umm b on a.noa = b.noa 
left join trd102 c on a.vccno = c.noa
left join cust d on b.custno = d.noa
union 
select '0' gno,'',b.datea,c.mon,b.custno,case when LEN(d.nick)>0 then d.nick else LEFT(b.comp,4) end
,c.unpay,c.tax,b.sale,b.total,c.payed-c.unpay,b.opay-b.unopay,b.noa,c.cno 
from umms a 
left join umm b on a.noa = b.noa 
left join vcc102 c on a.vccno = c.noa 
left join cust d on b.custno = d.noa
union 
select '0' gno,'',b.datea,c.mon,b.custno,case when LEN(d.nick)>0 then d.nick else LEFT(b.comp,4) end
,case when c.total <0 then c.total end,0,b.sale,b.total,c.total,b.opay-b.unopay,b.noa,c.cno 
from umms a 
left join umm b on a.noa = b.noa 
left join cara c on a.vccno = c.noa 
left join cust d on b.custno = d.noa


declare @tmp table(
		gno nvarchar(1),
		mon nvarchar(10),
		custno nvarchar(20),
		comp nvarchar(50),
		money1 float,--前期未收
		tax float,--稅額
		money3 float,--本期應收
		money4 float,--已收
		total float,--應收總計
		textopay float--預收餘額
)
insert into @tmp
select '0'gno,mon,custno,comp,sum(money1),sum(tax),sum(money3),sum(money4),sum(total),sum(textopay)
from @tmpa
where (cno between @t_bscno and @t_escno) and
(custno between  @t_bcustno and @t_ecustno) and
(LEN(@t_xmon) = 0 or @t_xmon = mon)
group by mon,custno,comp
select gno,
ROW_NUMBER()over(order by mon,custno)as n,mon,custno,comp,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,money1),1)),4,12)) money1,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,tax),1)),4,12)) tax,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,money3),1)),4,12)) money3,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,money4),1)),4,12)) money4,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,total),1)),4,12)) total,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,textopay),1)),4,12)) textopay
from @tmp;
