z_ordcstp1:--z_ordcstp1
declare @t_bdate nvarchar(20)
declare @t_edate nvarchar(20)
declare @t_noa nvarchar(30)
declare @t_pageline int = 8   --------一頁幾行
set @t_bdate = case when '#non' = [2] then '' else [2] end
set @t_edate = case when '#non' = [3] then CHAR(255) else [3] end
set @t_noa = case when '#non' = [4] then '' else [4] end
declare @tmp table(
	gno nvarchar(1),
	idno int identity(0,1),
	orderno int,
	pageno int,
	a_noa nvarchar(30),
	a_odate nvarchar(10),
	a_kind nvarchar(15),
	a_tggno nvarchar(30),
	a_tggs nvarchar(90),
	a_tel nvarchar(90),
	a_fax nvarchar(90),
	a_addr_a nvarchar(max),
	a_addr_b nvarchar(max),
	a_trantype nvarchar(max),
	a_paytype nvarchar(max),
	b_productno nvarchar(30),
	b_products nvarchar(90),
	b_unit nvarchar(15),
	b_mount float,
	b_weight float,
	b_price float,
	b_total float,
	b_memo nvarchar(max)
)
insert into @tmp
select
	'0',ROW_NUMBER()over(partition by a.noa order by a.noa)
	,0,a.noa,a.odate,a.kind,a.tggno,c.comp,a.tel,a.fax,a.addr,a.addr2,a.trantype,a.paytype,
	b.productno,b.product,b.unit,b.mount,b.weight,b.price,b.total,b.memo
from view_ordc[1] a
left join view_ordcs[1] b on a.noa = b.noa
left join tgg c on a.tggno = c.noa
where (a.odate between @t_bdate and @t_edate) and (len(@t_noa) = 0 or @t_noa = a.noa) 
order by a.noa,b.no2
update @tmp set a_kind = (case a_kind when 'A1' then '鋼捲鋼板' when 'B2' then '鋼管' when 'C3' then '鋼筋' when 'A4' then '鋼胚' end)

declare @a_noa nvarchar(30)
declare @a_count int
declare @idno int
declare @k int = 0 ----差幾頁
declare @pageCount int
declare @orderno int
declare @pageno int

declare cursor_table cursor for
	select a_noa,count(*),max(orderno) from @tmp group by a_noa
open cursor_table
fetch next from cursor_table
into @a_noa,@a_count,@orderno
while(@@FETCH_STATUS <> -1)
begin		
	if(@a_count > @t_pageline)
	begin
		set @k = CEILING((cast(@a_count as float)/@t_pageline))
		while(@k > 0)
		begin
			update @tmp set pageno = @k where orderno > ((@k-1)*@t_pageline) and orderno <= (@k*@t_pageline)
			set @k -=1
		end
	end
	fetch next from cursor_table
	into @a_noa,@a_count,@orderno
end
close cursor_table
deallocate cursor_table
update @tmp set orderno = orderno-((pageno-1)*@t_pageline)
declare cursor_table cursor for
	select distinct a_noa,max(orderno),pageno,min(idno),count(*) from @tmp group by a_noa,pageno
open cursor_table
fetch next from cursor_table
into @a_noa,@orderno,@pageno,@idno,@a_count
while(@@FETCH_STATUS <> -1)
begin		
	set @k = @t_pageline -(@a_count%@t_pageline)
	set @pageCount = @a_count/@t_pageline
	if(@k < @t_pageline and (@pageCount =0))
	begin
		while(@k > 0)
		begin
			insert into @tmp(gno,orderno,pageno,a_noa)
				select '0',(@orderno+1),@pageno,@a_noa from @tmp where idno = @idno
			set @k = @k-1
			set @orderno = @orderno +1
		end
	end
	insert into @tmp(gno,orderno,pageno,a_noa,b_mount,b_total,b_weight)
		select '1',(@t_pageline+1),pageno,a_noa,sum(b_mount),sum(b_total),sum(b_weight) from @tmp where gno=0 and a_noa=@a_noa and pageno=@pageno group by a_noa,pageno
	insert into @tmp(gno,orderno,pageno,a_noa) 
		select '2',(@t_pageline+2),pageno,a_noa from @tmp where gno=0 and a_noa=@a_noa and pageno=@pageno group by a_noa,pageno
	fetch next from cursor_table
	into @a_noa,@orderno,@pageno,@idno,@a_count
end
close cursor_table
deallocate cursor_table
select
	gno,a_noa,a_odate,a_kind,a_tggno,a_tggs,a_tel,a_fax,a_addr_a,a_addr_b,a_trantype,a_paytype,b_productno,b_products,b_unit,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,b_mount),1)),4,12)) b_mount,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,b_weight),1)),4,12)) b_weight,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,b_price),1)),4,12)) b_price,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,b_total),1)),4,12)) b_total,b_memo
from @tmp order by a_noa desc,pageno,gno,orderno;