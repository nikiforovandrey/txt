z_tire5:--z_tire5
	declare @cmd nvarchar(max)
	declare @t_accy nvarchar(10)
	declare @t_bmon nvarchar(10)
	declare @t_emon nvarchar(10)
	declare @t_bproductno nvarchar(20)
	declare @t_eproductno nvarchar(20)
	declare @t_tireno nvarchar(20)
	declare @t_mon nvarchar(10)
	declare @t_btggno nvarchar(20)
	declare @t_etggno nvarchar(20)
	declare @t_carno nvarchar(20)
	declare @t_carplateno nvarchar(20)
	
	set @t_accy = '[1]'
	set @t_bmon = case when '#non'=[2] then '' else [2] end
	set @t_emon = case when '#non'=[3] then char(255) else [3] end
	set @t_bproductno = case when '#non'=[4] then '' else [4] end
	set @t_eproductno = case when '#non'=[5] then char(255) else [5] end
	set @t_tireno = case when '#non'=[6] then '' else [6] end	
	set @t_mon = case when '#non'=[7] then '' else [7] end
	set @t_btggno = case when '#non'=[8] then '' else [8] end
	set @t_etggno = case when '#non'=[9] then char(255) else [9] end
	set @t_carno = case when '#non'=[10] then '' else [10] end
	set @t_carplateno = case when '#non'=[11] then '' else [11] end
	------------------------------------------------------------------------------------------------------------------
	declare @tmp table(
		gno nvarchar(3),
		driverno nvarchar(20),
		driver nvarchar(20),
		carno nvarchar(20),
		carplateno nvarchar(20),
		ppno nvarchar(20),
		ppname nvarchar(40),
		outdate nvarchar(10),
		price float,
		mount float,
		[money] float
	)
	
	insert into @tmp 
	select '0',b.driverno,b.driver,b.carno,b.carplateno,a.productno,a.product,b.outdate,a.price,a.mount,a.[money]
	from fixouts a
	left join fixout b on a.noa=b.noa
	where len(a.tireno)=0 
	and (isnull(b.mon,'')  between @t_bmon and @t_emon)
	and (ISNULL(a.productno,'') between @t_bproductno and @t_eproductno)
	and (len(@t_carno)=0 or @t_carno=b.carno)
	and (len(@t_carplateno)=0 or @t_carplateno=b.carplateno)
	order by a.productno,b.outdate,a.noa,a.noq
	
	insert into @tmp
	select '1','','','','',ppno,'','',SUM(isnull(price,0)),SUM(mount),SUM([money]) from @tmp where gno='0' group by ppno
	insert into @tmp 
	select '2','','','','',CHAR(255),'','',SUM(isnull(price,0)),SUM(mount),SUM([money]) from @tmp where gno='0'
	
	select * 
	,isnull(carplateno,'') carpno
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,price),1)),4,12)) cprice
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,mount),1)),4,12)) cmount
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,[money]),1)),4,12)) cmoney
	from @tmp order by ppno,gno;
	
z_tire4:--z_tire4
	declare @cmd nvarchar(max)
	declare @t_accy nvarchar(10)
	declare @t_bmon nvarchar(10)
	declare @t_emon nvarchar(10)
	declare @t_bproductno nvarchar(20)
	declare @t_eproductno nvarchar(20)
	declare @t_tireno nvarchar(20)
	declare @t_mon nvarchar(10)
	declare @t_btggno nvarchar(20)
	declare @t_etggno nvarchar(20)
	
	set @t_accy = '[1]'
	set @t_bmon = case when '#non'=[2] then '' else [2] end
	set @t_emon = case when '#non'=[3] then char(255) else [3] end
	set @t_bproductno = case when '#non'=[4] then '' else [4] end
	set @t_eproductno = case when '#non'=[5] then char(255) else [5] end
	set @t_tireno = case when '#non'=[6] then '' else [6] end	
	set @t_mon = case when '#non'=[7] then '' else [7] end
	set @t_btggno = case when '#non'=[8] then '' else [8] end
	set @t_etggno = case when '#non'=[9] then char(255) else [9] end
	--------------------------------------
	declare @tmp table(
		gno nvarchar(3),
		tggno nvarchar(20),
		comp nvarchar(40),
		nick nvarchar(20),
		datea nvarchar(10),
		indate nvarchar(10), 
		noa nvarchar(20),
		noq nvarchar(10),
		tireno  nvarchar(20),
		productno nvarchar(20),
		product  nvarchar(40),
		price float,
		mount float,
		[money] float,
		discount float
	)
	insert  into  @tmp
	select '0',b.tggno,c.comp,c.nick,b.datea,b.indate,a.noa,a.noq,a.tireno,a.productno,a.product,a.price,a.mount,a.[money],null
	from  fixins  a
	left join fixin b on a.noa=b.noa
	left join tgg c on b.tggno=c.noa
	where (b.mon between @t_bmon and @t_emon)
	and (b.tggno between @t_btggno and @t_etggno)
	
	insert  into  @tmp
	select  '1',tggno,comp,nick,'','','','','','','',0,SUM(ISNULL(mount,0)),SUM(ISNULL([money],0)),null
	from  @tmp 
	where gno='0'
	group by tggno,comp,nick
	
	declare @discount float
	select @discount=0
	select @discount=SUM(ISNULL(b.discount,0)) from (select noa from @tmp group by noa) a
	left join fixin b on a.noa=b.noa
	
	insert  into  @tmp
	select  '2',CHAR(255),'','','','','','','','','',0,SUM(ISNULL(mount,0)),SUM(ISNULL([money],0)),@discount
	from  @tmp 
	where gno='0'
	
	if @t_bmon=@t_emon
		set @cmd = '帳款月份：'+@t_bmon
	else
		set @cmd = '帳款月份：'+@t_bmon+'～'+@t_emon
		
	select  *  
	,@cmd titlea
	,productno pp
	,product pn
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,price),1)),4,12)) cprice
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,mount),1)),4,12)) cmount
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,[money]),1)),4,12)) cmoney
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,discount),1)),4,12)) cd
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,[money]-discount),1)),4,12)) tt
	from  @tmp  order  by  tggno,gno,productno,indate,noa,noq,tireno;

z_tire3:--z_tire3
	declare @cmd nvarchar(max)
	declare @t_accy nvarchar(10)
	declare @t_bmon nvarchar(10)
	declare @t_emon nvarchar(10)
	declare @t_bproductno nvarchar(20)
	declare @t_eproductno nvarchar(20)
	declare @t_tireno nvarchar(20)
	declare @t_mon nvarchar(10)
	declare @t_btggno nvarchar(20)
	declare @t_etggno nvarchar(20)
	
	set @t_accy = '[1]'
	set @t_bmon = case when '#non'=[2] then '' else [2] end
	set @t_emon = case when '#non'=[3] then char(255) else [3] end
	set @t_bproductno = case when '#non'=[4] then '' else [4] end
	set @t_eproductno = case when '#non'=[5] then char(255) else [5] end
	set @t_tireno = case when '#non'=[6] then '' else [6] end	
	set @t_mon = case when '#non'=[7] then '' else [7] end
	set @t_btggno = case when '#non'=[8] then '' else [8] end
	set @t_etggno = case when '#non'=[9] then char(255) else [9] end
	------------------------------------------------------------------------------------------------------------------
	declare @tmp table(
		gno nvarchar(3),
		n nvarchar(3),
		p nvarchar(3),
		noa nvarchar(30),
		noq nvarchar(20),
		productno nvarchar(20),
		product  nvarchar(40),
		datea nvarchar(10),
		mon nvarchar(20),
		typea nvarchar(10),
		memo nvarchar(20),
		price float,
		mount float,
		totmount float,
		[money] float,
		inmoney float,
		outmoney float
	)
	insert  into  @tmp
	select '0','','0.2',b.noa,a.noq,a.productno,a.product,b.indate,b.mon,'B','進貨',a.price,a.mount,0,a.[money],a.[money],0
	from fixins a
	left join fixin b on a.noa=b.noa
	where len(ISNULL(a.tireno,''))=0 
	and (b.mon <= @t_emon)
	and (a.productno between @t_bproductno and @t_eproductno)
	
	insert  into  @tmp
	select '0','','0.2',b.noa,a.noq,a.productno,a.product,b.outdate,b.mon,'C','領料',a.price,a.mount,0,a.[money],0,a.[money]
	from fixouts a
	left join fixout b on a.noa=b.noa
	where len(ISNULL(a.tireno,''))=0 
	and (b.mon <= @t_emon)
	and (a.productno between @t_bproductno and @t_eproductno)
	
	insert into @tmp
	select '0','','0.2',noa,'001',noa,namea,isnull(begindate,''),LEFT(begindate,6),'D','期初',inprice,isnull(beginmount,0),0,beginmoney,0,0
	from fixucc
	where len(beginmoney) > 0  and len(begindate)>0 and
	(noa between @t_bproductno and @t_eproductno)
	
	--------------------------------------------------------------------------
	declare @productno nvarchar(20)
	declare @product nvarchar(60)
	declare @noa nvarchar(30)
	declare @noq nvarchar(20)
	declare @mount float
	declare @totmount float
	declare @datea nvarchar(20)
	declare @typea nvarchar(30)
	declare @memo nvarchar(50)
	declare @price float
	declare @money float
	declare @inmoney float
	declare @outmoney float
    declare @mon nvarchar(20)
    declare @n nvarchar(3)
	-----------------------------------------------------------------------------
	declare @bmount float
	declare cursor_table cursor for
	select productno from @tmp group by productno
	open cursor_table
	fetch next from cursor_table
	into @productno
	while(@@FETCH_STATUS <> -1)
	begin
		set @totmount = 0 
		set @bmount = 0
		declare cursor_table2 cursor for
		select noa,noq,product,typea,datea,mon,isnull(mount,0) from @tmp where productno=@productno  order by productno,datea,typea,noa,noq
		open cursor_table2
		fetch next from cursor_table2
		into @noa,@noq,@product,@typea,@datea,@mon,@mount
		while(@@FETCH_STATUS <> -1)
		begin
			
			if(@typea='D')
				set @totmount = @mount
			else
			begin
				set @totmount = @totmount + case when @typea='C' then -@mount else @mount end
			end
			update @tmp set totmount=@totmount where noa=@noa and noq=@noq
			if(@mon < @t_bmon)
			begin
				set @bmount=@totmount
			end
			fetch next from cursor_table2
			into @noa,@noq,@product,@typea,@datea,@mon,@mount
		end
		close cursor_table2
		deallocate cursor_table2	
		insert into @tmp(gno,p,typea,productno,product,noa,memo,totmount)values('1','0.3','',@productno,@product,'庫存量','小計',isnull(@totmount,0))

		insert into @tmp(gno,p,typea,productno,product,noa,memo,totmount)values('0','0.1','',@productno,@product,'前期存量','前期',isnull(@bmount,0))

		fetch next from cursor_table
		into @productno
	end
	close cursor_table
	deallocate cursor_table
	
	delete @tmp where mon < @t_bmon
	-------------------------------------------------------------------------------
	declare cursor_table cursor for
	select productno,max(price),sum([money]),sum(inmoney),sum(outmoney) from @tmp group by productno
	open cursor_table
	fetch next from cursor_table
	into @productno,@price,@money,@inmoney,@outmoney
	while(@@FETCH_STATUS <> -1)
	begin
		update @tmp set [money] = totmount *@price,inmoney = @inmoney,outmoney = @outmoney,price = @price
		where productno = @productno and gno = 1

		fetch next from cursor_table
		into @productno,@price,@money,@inmoney,@outmoney
	end
	close cursor_table
	deallocate cursor_table
	------------------------------------------------------
	declare cursor_table cursor for
	select productno,count(*) from @tmp group by productno
	open cursor_table
	fetch next from cursor_table
	into @productno,@n
	while(@@FETCH_STATUS <> -1)
	begin
		update @tmp set n = @n 
		where productno = @productno 
		fetch next from cursor_table
		into @productno,@n
	end
	close cursor_table
	deallocate cursor_table
	delete @tmp where n = 2 and totmount = 0
	
-----------------------------------------------------------------------------------------
	insert into @tmp
	select '2','','0.4','','',CHAR(255),CHAR(255),CHAR(255),CHAR(255),'','合計',0,0,0,0,SUM(inmoney),SUM(outmoney)
	from @tmp 
	where gno = 1
	update @tmp set price=null where price=0 
	if @t_bmon=@t_emon
		set @cmd = '帳款月份：'+@t_bmon
	else
		set @cmd = '帳款月份：'+@t_bmon+'～'+@t_emon
	select @cmd titlea  
	,*  
	,productno pp
	,product pn
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,price),1)),4,12)) cprice
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,mount),1)),4,12)) cmount
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,totmount),1)),4,12)) totmount
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,[money]),1)),4,12)) cmoney
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,[inmoney]),1)),4,12)) cm1
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,[outmoney]),1)),4,12)) cm2
	from  @tmp 
	order by productno,p,datea,typea,noa,noq;
	------------------------------------------------------------------------------------------
z_tire2:--z_tire2
	declare @cmd nvarchar(max)
	declare @t_accy nvarchar(10)
	declare @t_bmon nvarchar(10)
	declare @t_emon nvarchar(10)
	declare @t_bproductno nvarchar(20)
	declare @t_eproductno nvarchar(20)
	declare @t_tireno nvarchar(20)
	declare @t_mon nvarchar(10)
	declare @t_btggno nvarchar(20)
	declare @t_etggno nvarchar(20)
	declare @t_carno nvarchar(20)
	declare @t_carplateno nvarchar(20)
	
	set @t_accy = '[1]'
	set @t_bmon = case when '#non'=[2] then '' else [2] end
	set @t_emon = case when '#non'=[3] then char(255) else [3] end
	set @t_bproductno = case when '#non'=[4] then '' else [4] end
	set @t_eproductno = case when '#non'=[5] then char(255) else [5] end
	set @t_tireno = case when '#non'=[6] then '' else [6] end	
	set @t_mon = case when '#non'=[7] then '' else [7] end
	set @t_btggno = case when '#non'=[8] then '' else [8] end
	set @t_etggno = case when '#non'=[9] then char(255) else [9] end
	set @t_carno = case when '#non'=[10] then '' else [10] end
	set @t_carplateno = case when '#non'=[11] then '' else [11] end
	------------------------------------------------------------------------------------------------------------------
	declare @tmp table(
		gno nvarchar(3),
		tireno nvarchar(20),
		carno nvarchar(20),
		carplateno nvarchar(20),
		ppno nvarchar(20),
		ppname nvarchar(40),
		outdate nvarchar(10),
		price float,
		mount float,
		position nvarchar(2)
	)
	
	insert into @tmp 
	select '0',a.tireno,b.carno,b.carplateno,a.productno,a.product,b.outdate,a.price,1,a.position
	from fixouts a
	left join fixout b on a.noa=b.noa
	where len(isnull(a.tireno,''))>0
	and (isnull(b.mon,'')  between @t_bmon and @t_emon)
	and (ISNULL(a.productno,'') between @t_bproductno and @t_eproductno)
	and (len(@t_carno)=0 or @t_carno=b.carno)
	and (len(@t_carplateno)=0 or @t_carplateno=b.carplateno) 
	and (len(@t_tireno) = 0 or @t_tireno = a.tireno) 
	order by b.outdate,a.noa,a.noq
	
	insert into @tmp
	select '1','','','','','','',SUM(isnull(price,0)),SUM(mount),null from @tmp where gno='0'
	
	select * 
	,position pos
	,isnull(carplateno,'') carpno
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,price),1)),4,12)) cprice
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,mount),1)),4,12)) cmount
	from @tmp order by gno;

z_tire1:--z_tire1輪胎庫存
	declare @cmd nvarchar(max)
	declare @t_accy nvarchar(10)
	declare @t_bmon nvarchar(10)
	declare @t_emon nvarchar(10)
	declare @t_bproductno nvarchar(20)
	declare @t_eproductno nvarchar(20)
	declare @t_tireno nvarchar(20)
	declare @t_mon nvarchar(10)
	declare @t_btggno nvarchar(20)
	declare @t_etggno nvarchar(20)
	
	set @t_accy = '[1]'
	set @t_bmon = case when '#non'=[2] then '' else [2] end
	set @t_emon = case when '#non'=[3] then char(255) else [3] end
	set @t_bproductno = case when '#non'=[4] then '' else [4] end
	set @t_eproductno = case when '#non'=[5] then char(255) else [5] end
	set @t_tireno = case when '#non'=[6] then '' else [6] end	
	set @t_mon = case when '#non'=[7] then '' else [7] end
	set @t_btggno = case when '#non'=[8] then '' else [8] end
	set @t_etggno = case when '#non'=[9] then char(255) else [9] end
	------------------------------------------------------------------------------------------------------------------
	if exists(select * from (select tireno,COUNT(1) mount from fixins where len(tireno)>0 group by tireno) a where mount>1)
	begin
		select '胎號重複'
		return
	end
	------------------------------------------------------------------------------------------------------------------
	declare @tireno nvarchar(30)
	declare @indate nvarchar(10)
	declare @inmon nvarchar(10)
	declare @outdate nvarchar(10)
	declare @outmon nvarchar(10)
	declare @mount float
	declare @money float
	declare @productno nvarchar(20)
	declare @product nvarchar(40)
	declare @inmount float
	declare @inmoney float
	declare @outmount float
	declare @outmoney float
	------------------------------------------------------------------------------------------------------------------
	declare @tmp table(
		tireno nvarchar(20),
		productno nvarchar(20),
		product nvarchar(40),
		indate nvarchar(10),
		inmon nvarchar(10),
		outdate nvarchar(10),
		outmon nvarchar(10),
		price float
		primary  key(tireno)
	)
	insert into @tmp
	select a.tireno,a.productno,a.product,b.indate,b.mon,'','',a.price
	from fixins a
	left join fixin b on a.noa=b.noa
	where len(ISNULL(a.tireno,''))>0 and isnull(b.mon,'')<=@t_mon
	
	declare cursor_table cursor for
	select tireno from @tmp
	open cursor_table
	fetch next from cursor_table
	into @tireno
	while(@@FETCH_STATUS <> -1)
	begin
		select @outdate='',@outmon=''
		select top(1) @outdate=b.outdate,@outmon=b.mon from fixouts a left join fixout b on a.noa=b.noa where tireno=@tireno
		update @tmp set outdate=@outdate,outmon=@outmon where tireno=@tireno
		
		fetch next from cursor_table
		into @tireno
	end
	close cursor_table
	deallocate cursor_table
	------------------------------------------------------------------------------------------------------------------
	select @inmoney=0,@inmount=0,@outmoney=0,@outmount=0
	select @inmount=COUNT(1),@inmoney=SUM(isnull(price,0)) from @tmp where inmon=@t_mon
	select @outmount=COUNT(1),@outmoney=SUM(isnull(price,0)) from @tmp where outmon=@t_mon
	-----------------------------------------------------------------------------------------------------------------
	declare @tmp1  table(
		gno  nvarchar(3),
		titlea  nvarchar(40),
		tireno nvarchar(20),
		ppno  nvarchar(20),
		ppname nvarchar(40),
		indate nvarchar(10),
		mt1 float,
		my1 float,
		mt2 float,
		my2 float,
		mt3 float,
		my3 float
	)
	insert into @tmp1
	select '0',('月份：'+@t_mon),tireno,productno,product,indate,1,price,0,0,0,0
	from @tmp where len(outmon)=0 or outmon>@t_mon
	
	insert into @tmp1
	select '1',('月份：'+@t_mon),'','','','',COUNT(mt1),SUM(my1),@inmount,@inmoney,@outmount,@outmoney
	from @tmp1 where gno='0'
	
	select *
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,mt1),1)),4,12)) cmt1
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,my1),1)),4,12)) cmy1
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,mt2),1)),4,12)) cmt2
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,my2),1)),4,12)) cmy2
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,mt3),1)),4,12)) cmt3
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,my3),1)),4,12)) cmy3
	from @tmp1 order by gno,ppno,tireno;