z_vcctran1:--z_vcctran1
declare @t_accy nvarchar(10)
declare @t_bxnoa nvarchar(20)
declare @t_exnoa nvarchar(20)
declare @t_bdate nvarchar(20)
declare @t_edate nvarchar(20)
declare @t_bcustno nvarchar(20)
declare @t_ecustno nvarchar(20)
set @t_accy = '[1]'
set @t_bxnoa = case when '#non' = [2] then '' else [2] end
set @t_exnoa = case when '#non' = [3] then CHAR(255) else [3] end
set @t_bdate = case when '#non' = [4] then '' else [4] end
set @t_edate = case when '#non' = [5] then CHAR(255) else [5] end
set @t_bcustno = case when '#non' = [6] then '' else [6] end
set @t_ecustno = case when '#non' = [7] then CHAR(255) else [7] end
declare @tmp table( 
gno nvarchar(1), 
noa nvarchar(30), 
noq nvarchar(20), 
datea nvarchar(10), 
typea nvarchar(10), 
custno nvarchar(20), 
comp nvarchar(50), 
mon nvarchar(10), 
invo nvarchar(20), 
part nvarchar(20), 
sales nvarchar(20), 
bpart nvarchar(20), 
bsales nvarchar(20), 
tranmoney int, 
tmoney int, 
tax int, 
ttotal int, 
tmemo nvarchar(200), 
pno nvarchar(20), 
product nvarchar(50), 
unit nvarchar(10), 
mount int, 
price int, 
total int, 
memo nvarchar(200) 
) 
insert into @tmp 
select '0' gno,a.noa,b.noq,a.datea,a.typea,a.custno,a.comp,a.mon,a.invono,a.part,a.sales,a.part2,a.sales2, 
case when a.typea = '2' then -1*a.tranmoney else 1*tranmoney end,case when a.typea = '2' then -1*a.money else 1*a.money end,
case when a.typea = '2' then -1*a.tax else 1*a.tax end,case when a.typea='2' then -1*a.total else 1*a.total end,a.memo,b.productno,b.product,b.unit,b.mount
,case when a.typea = '2' then -1*b.price else 1*b.price end,
case when a.typea = '2' then -1*b.total else 1*b.total end,b.memo 
from view_vcc[1] a 
left join view_vccs[1] b on a.noa = b.noa 
where (a.noa between @t_bxnoa and @t_exnoa) and 
--(a.datea between @t_bdate and @t_edate) and 
(isnull(a.custno,'') between @t_bcustno and @t_ecustno) 

insert into @tmp 
select '1' gno,noa,'','','',MAX(custno),'','','','','','','', 
MAX(tranmoney),MAX(tmoney),MAX(tax),MAX(ttotal),MAX(tmemo),'','','',0,0,0,'' 
from @tmp 
group by noa 

select gno,noa,datea,typea,custno,comp,mon,invo,part,sales,bpart,bsales, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,tranmoney),1)),4,12)) tranmoney, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,tmoney),1)),4,12)) tmoney, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,tax),1)),4,12)) tax, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,ttotal),1)),4,12)) ttotal, 
tmemo,pno,product,unit, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,mount),1)),4,12)) mount, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,price),1)),4,12)) price, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,total),1)),4,12)) total, 
memo 
from @tmp 
order by noa,gno;
--------------------------------------------------------------------------------------------------------
z_vcctran2:--z_vcctran2
declare @t_bdate nvarchar(20)
declare @t_edate nvarchar(20)
declare @t_bcustno nvarchar(20)
declare @t_ecustno nvarchar(20)
declare @t_bpartno nvarchar(20)
declare @t_epartno nvarchar(20)
declare @t_bsalesno nvarchar(20)
declare @t_esalesno nvarchar(20)
set @t_bdate = case when '#non' = [4] then '' else [4] end
set @t_edate = case when '#non' = [5] then CHAR(255) else [5] end
set @t_bcustno = case when '#non' = [6] then '' else [6] end
set @t_ecustno = case when '#non' = [7] then CHAR(255) else [7] end
set @t_bpartno = case when '#non' = [8] then '' else [8] end
set @t_epartno = case when '#non' = [9] then CHAR(255) else [9] end
set @t_bsalesno = case when '#non' = [14] then '' else [14] end
set @t_esalesno = case when '#non' = [15] then CHAR(255) else [15] end
declare @tmp table( 
gno nvarchar(1), 
part nvarchar(20),
datea nvarchar(10), 
custno nvarchar(20), 
comp nvarchar(40), 
serial nvarchar(20),
salesno nvarchar(20),
sales nvarchar(20),
total decimal(12, 0) 
) 
insert into @tmp 
select '0' gno,part,datea,custno,case when len(b.nick)>0 then b.nick else LEFT(a.comp,4) end,b.serial,a.salesno,a.sales,case when a.typea = '2' then -1*total else 1*total end
from view_vcc102 a 
left join cust b on a.comp = b.comp 
where ((a.datea between @t_bdate and @t_edate) and (isnull(a.custno,0) between @t_bcustno and @t_ecustno)) and
(isnull(a.partno,'') between @t_bpartno and @t_epartno) and (a.salesno between @t_bsalesno and @t_esalesno)

insert into @tmp
select '1' gno,'',char(255),CHAR(255),'','','','',SUM(total)
from @tmp


select gno,part,datea,custno,comp,serial,salesno,sales, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,total),1)),4,12)) total 
from @tmp order by datea,custno,comp,gno;
-----------------------------------------------------------------------------------------------------
z_vcctran3:--z_vcctran3
declare @t_accy nvarchar(10)
declare @t_bdate nvarchar(20)
declare @t_edate nvarchar(20)
declare @t_bcustno nvarchar(20)
declare @t_ecustno nvarchar(20)
declare @t_bpartno nvarchar(20)
declare @t_epartno nvarchar(20)
set @t_accy = '[1]'
set @t_bdate = case when '#non' = [4] then '' else [4] end
set @t_edate = case when '#non' = [5] then CHAR(255) else [5] end
set @t_bcustno = case when '#non' = [6] then '' else [6] end
set @t_ecustno = case when '#non' = [7] then CHAR(255) else [7] end
set @t_bpartno = case when '#non' = [8] then '' else [8] end
set @t_epartno = case when '#non' = [9] then CHAR(255) else [9] end
declare @tmp table( 
gno nvarchar(1), 
noa nvarchar(20), 
datea nvarchar(10), 
partno nvarchar(20), 
part nvarchar(40), 
custno nvarchar(20), 
comp nvarchar(40), 
serial nvarchar(20),
product nvarchar(200),
total float,
payed float, 
unpay float,
[money]  float
) 
insert into @tmp 
select '0' gno,a.noa,a.datea,a.partno,a.part,a.custno,
case when len(c.nick)>0 then c.nick else LEFT(a.comp,4) end,
c.serial,b.product
,0,0,0
,case when a.typea='2' then -1*b.total else 1*b.total end 
from view_vcc[1] a 
left join view_vccs[1] b on a.noa = b.noa
left join cust c on a.comp = c.comp 
where (a.datea between @t_bdate and @t_edate) and 
(a.custno between @t_bcustno and @t_ecustno) and 
(a.partno between @t_bpartno and @t_epartno) and a.unpay != 0

union
select '1' gno,a.noa,'','','','','','',''
,case when a.typea='2' then -1*a.total else 1*a.total end 
,case when a.typea='2' then -1*a.payed else 1*a.payed end
,case when a.typea='2' then -1*a.unpay else 1*a.unpay end ,0
from view_vcc[1] a 
left join @tmp b on a.noa = b.noa 
where (a.datea between @t_bdate and @t_edate) and 
(a.custno between @t_bcustno and @t_ecustno) and 
(a.partno between @t_bpartno and @t_epartno) and a.unpay != 0


select gno,noa,datea,partno,part,custno,comp,serial,product, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,total),1)),4,12)) total,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,payed),1)),4,12)) payed,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,unpay),1)),4,12)) unpay,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,money),1)),4,12)) money  
from @tmp 
order by noa,partno,gno;
-----------------------------------------------------------------------------------------
z_vcctran4:--z_vcctran4
declare @t_accy nvarchar(10)
declare @t_bdate nvarchar(20)
declare @t_edate nvarchar(20)
declare @t_bcustno nvarchar(20)
declare @t_ecustno nvarchar(20)
declare @t_bpartno nvarchar(20)
declare @t_epartno nvarchar(20)
declare @t_bsalesno nvarchar(20)
declare @t_esalesno nvarchar(20)
set @t_accy = '[1]'
set @t_bdate = case when '#non' = [4] then '' else [4] end
set @t_edate = case when '#non' = [5] then CHAR(255) else [5] end
set @t_bcustno = case when '#non' = [6] then '' else [6] end
set @t_ecustno = case when '#non' = [7] then CHAR(255) else [7] end
set @t_bpartno = case when '#non' = [8] then '' else [8] end
set @t_epartno = case when '#non' = [9] then CHAR(255) else [9] end
set @t_bsalesno = case when '#non' = [14] then '' else [14] end
set @t_esalesno = case when '#non' = [15] then CHAR(255) else [15] end
declare @tmp table(
		gno nvarchar(1),
		datea nvarchar(10),
		partno nvarchar(20),
		part nvarchar(40),
		custno nvarchar(20),
		comp nvarchar(40),
		salesno nvarchar(20),
		sales nvarchar(40),
		total float,
		payed float,
		unpay float
)
insert into @tmp
select '' gno,datea,partno,part,custno,
case when len(b.nick)>0 then b.nick else left(a.comp,4) end,a.salesno,a.sales,
case when a.typea = '2' then -1*total else 1*total end,
case when a.typea = '2' then -1*payed else 1*payed end,
case when a.typea = '2' then -1*unpay else 1*unpay end
from view_vcc[1] a
left join cust b on a.comp = b.comp
where (a.datea between @t_bdate and @t_edate) and
(a.custno between @t_bcustno and @t_ecustno) and 
(a.partno between @t_bpartno and @t_epartno) and
(a.salesno between @t_bsalesno and @t_esalesno) and unpay != 0

insert into @tmp
select '0' gno,'',partno,part,custno,comp,salesno,sales,SUM(total),SUM(payed),SUM(unpay)
from @tmp
group by custno,comp,partno,part,salesno,sales

insert into @tmp
select '1' gno,'',partno,part,CHAR(255),CHAR(255),CHAR(255),CHAR(255),SUM(total),SUM(payed),SUM(unpay) 
from @tmp
where gno = ''
group by partno,part

insert into @tmp
select '2' gno,'',CHAR(255),CHAR(255),CHAR(255),CHAR(255),CHAR(255),CHAR(255),SUM(total),SUM(payed),SUM(unpay) 
from @tmp
where gno = 1

select gno,datea,partno,part,custno,comp,salesno,sales,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,total),1)),4,12)) total,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,payed),1)),4,12)) payed,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,unpay),1)),4,12)) unpay
from @tmp 
where len(gno) != 0
order by partno,custno;


