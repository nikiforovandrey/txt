z_cuap1:--z_cuap1
declare @t_ordeno nvarchar(30)
set @t_ordeno = case when '#non' =  [2] then '' else  [2] end
declare @tmp table(
	gno nvarchar(1),
	ordeno nvarchar(30),
	no2 nvarchar(10),
	productno nvarchar(30),
	products nvarchar(90),
	gdemand float,
	emount float,
	ordcmount float,
	ordenotv float,
	stockmount float,
	ndemand float,
	datea nvarchar(10)
)

insert into @tmp
	select '0',b.ordeno,b.no2,a.productno,a.product,isnull(a.mount,0),isnull(a.emount,0),0,isnull(c.notv,0),0,0,
	b.datea
	from works[1] a
	left join work[1] b on a.noa = b.noa
	left join ordes[1] c on (b.ordeno = c.noa) and (b.no2 = c.no2)
	where (len(@t_ordeno) = 0 or b.ordeno = @t_ordeno)
update @tmp set ndemand = (gdemand-emount+ordcmount+ordenotv+stockmount)

declare @datea nvarchar(10)
declare @productno nvarchar(90)
declare cursor_table cursor for
	select datea,productno from @tmp
open cursor_table
fetch next from cursor_table
into @datea,@productno
while(@@FETCH_STATUS <> -1)
begin
	update @tmp set stockmount = isnull((select mount from stkucc[1](@datea,'',@productno) where storeno = ''),0) where datea = @datea and productno = @productno
	fetch next from cursor_table
	into @datea,@productno
end
close cursor_table
deallocate cursor_table
insert into @tmp
	select
		'1',ordeno,no2,'','',sum(gdemand),sum(emount),sum(ordcmount),
		sum(ordenotv),sum(stockmount),sum(ndemand),''
	from @tmp
	group by ordeno,no2
select
	gno,
	case when len(ordeno) = 0 or ordeno is null then '' 
	when len(ordeno) >0 and len(no2) = 0 then ordeno 
	else ordeno + '-' + no2 end ordeno,
	productno,products,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,gdemand),1)),4,12)) gdemand,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,emount),1)),4,12)) emount,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,ordcmount),1)),4,12)) ordcmount,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,ordenotv),1)),4,12)) ordenotv,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,stockmount),1)),4,12)) stockmount,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,ndemand),1)),4,12)) ndemand
from @tmp order by ordeno,no2,gno;
