z_cuap1:--z_cuap1
declare @t_btggno nvarchar(20)
declare @t_etggno nvarchar(20)
set @t_btggno = case when '#non' = [5] then '' else [5] end
set @t_etggno = case when '#non' = [6] then CHAR(255) else [6] end
declare @tmp table(
	gno nvarchar(1),
	ordeno nvarchar(30),
	no2 nvarchar(10),
	productno nvarchar(30),
	products nvarchar(90),
	gdemand float,
	emount float,
	ordcmount float,
	ordenotv float,
	stockmount float,
	ndemand float
)

insert into @tmp
	select '0',b.ordeno,b.no2,a.productno,a.product,isnull(a.mount,0),isnull(a.emount,0),0,isnull(c.notv,0),0,0	
	from works[1] a
	left join work[1] b on a.noa = b.noa
	left join ordes[1] c on (b.ordeno = c.noa) and (b.no2 = c.no2)
	where b.tggno between @t_btggno and @t_etggno
update @tmp set ndemand = (gdemand-emount+ordcmount+ordenotv+stockmount)
insert into @tmp
	select
		'1',ordeno,no2,'','',sum(gdemand),sum(emount),sum(ordcmount),
		sum(ordenotv),sum(stockmount),sum(ndemand)
	from @tmp
	group by ordeno,no2
select
	gno,
	case when len(ordeno) = 0 or ordeno is null then '' 
	when len(ordeno) >0 and len(no2) = 0 then ordeno 
	else ordeno + '-' + no2 end ordeno,
	productno,products,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,gdemand),1)),4,12)) gdemand,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,emount),1)),4,12)) emount,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,ordcmount),1)),4,12)) ordcmount,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,ordenotv),1)),4,12)) ordenotv,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,stockmount),1)),4,12)) stockmount,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,ndemand),1)),4,12)) ndemand
from @tmp order by ordeno,no2,gno;
