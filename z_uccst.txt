z_uccst1:--z_uccst1
declare @t_bdate nvarchar(10)
declare @t_edate nvarchar(10)
declare @t_bproductno nvarchar(10)
declare @t_eproductno nvarchar(10)
set @t_bdate = case when '#non'=[2] then '' else [2] end
set @t_edate = case when '#non'=[3] then char(255) else [3] end
set @t_bproductno = case when '#non'=[4] then '' else [4] end
set @t_eproductno = case when '#non'=[5] then char(255) else [5] end
declare @tmp table(
	gno nvarchar(1),
	datea nvarchar(10),
	storeno nvarchar(30),
	uno nvarchar(50),
	products nvarchar(90),
	productno nvarchar(30),
	class nvarchar(30),
	spec nvarchar(30),
	sizea nvarchar(max),
	mount float,
	weight float
)
insert into @tmp
	select
		'0',a.datea,a.storeno,a.uno,a.product,a.productno,a.class,a.spec,
		case when isnull(a.radius,0) = 0 then cast(isnull(a.dime,0) as nvarchar) + ' x ' + cast(isnull(a.width,0) as nvarchar) + ' x ' + cast(isnull(a.lengthb,0) as nvarchar)
		else cast(isnull(a.radius,0) as nvarchar) + ' x ' + cast(isnull(a.width,0) as nvarchar)  + ' x ' + cast(isnull(a.dime,0) as nvarchar) + ' x ' + cast(isnull(a.lengthb,0) as nvarchar) end sizea,
		b.emount mount,b.eweight weight
	from view_uccb a
	left join uccy b on b.uno = a.uno
	where (a.datea between @t_bdate and @t_edate) and (a.productno between @t_bproductno and @t_eproductno)
	
insert into @tmp(gno,productno,mount,weight)
	select '1',productno,sum(mount),sum(weight) from @tmp group by productno
select
	gno,datea,storeno,uno,products,productno,class,spec,sizea,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,mount),1)),4,12)) mount,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,weight),1)),4,12)) weight
from @tmp order by productno,gno,datea,uno;