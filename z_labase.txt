z_labase1:--z_labase1
declare @t_bxmon nvarchar(10)
declare @t_exmon nvarchar(10)
declare @t_bxnoa nvarchar(20)
declare @t_exnoa nvarchar(20)
set @t_bxmon = case when '#non' = [1] then '' else [1] end
set @t_exmon = case when '#non' = [2] then CHAR(255) else [2] end
set @t_bxnoa = case when '#non' = [3] then '' else [3] end
set @t_exnoa = case when '#non' = [4] then CHAR(255) else [4] end
declare @tmp table(
		gno nvarchar(1),
		mon nvarchar(10),
		comp nvarchar(90),
		he_comp int,
		la_comp int,
		re_comp int,
		sssptotal int,
		ssstotal int,
		total int
)
insert into @tmp
select '0' gno,a.mon,a.comp,SUM(a.he_comp),SUM(a.la_comp),SUM(a.re_comp),SUM(case when b.issssp = 1 then a.he_comp end)+SUM(case when b.issssp = 1 then a.la_comp end)+SUM(case when b.issssp = 1 then a.re_comp end),
SUM(case when b.issssp = 0 then a.he_comp end)+SUM(case when b.issssp = 0 then a.la_comp end)+SUM(case when b.issssp = 0 then a.re_comp end),
SUM(a.he_comp)+SUM(a.la_comp)+SUM(a.re_comp)
from salinsures a
left join labase b on a.noa = b.noa
where (a.mon between @t_bxmon and @t_exmon) and
(a.noa between @t_bxnoa and @t_exnoa)
group by a.mon,a.comp

select gno,mon,comp,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,he_comp),1)),4,12)) he_comp,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,la_comp),1)),4,12)) la_comp,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,re_comp),1)),4,12)) re_comp,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,sssptotal),1)),4,12)) sssptotal,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,ssstotal),1)),4,12)) ssstotal,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,total),1)),4,12)) total
from @tmp;