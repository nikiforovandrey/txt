z_gift1:--z_gift1
declare @t_bdate nvarchar(20)
declare @t_edate nvarchar(20)
declare @t_tsendmemo nvarchar(20)
set @t_bdate = case when '#non' = [1] then '' else [1] end
set @t_edate = case when '#non' = [2] then CHAR(255) else [2] end
set @t_tsendmemo = case when '#non' = [3] then '' else [3] end
declare @tmp table(
		gno nvarchar(1),
		n int identity,
		nick nvarchar(20),
		comp nvarchar(50),
		tel nvarchar(50),
		addr nvarchar(90),
		product nvarchar(50),
		mount float,
		chg float,
		sales nvarchar(20),
		memo nvarchar(max),
		acomp2 nvarchar(50),
		[message] nvarchar(max)
)
insert into @tmp
select '0' gno,case when len(d.nick)>0 then d.nick else left(c.comp,4) end,
c.comp+c.namea+c.job,c.tel,c.addr_cust,a.gift,b.mount,b.money,a.sales,b.memo,a.acomp2,a.message
from giftsend a
left join giftsends b on a.noa = b.noa
left join giftcust c on c.noa = b.custno
left join cust d on c.custno = d.noa
where (a.senddate between @t_bdate and @t_edate) and
(len(@t_tsendmemo) = 0 or @t_tsendmemo = a.sendmemo)

select gno,n,nick,comp,tel,addr,product,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,mount),1)),4,12)) mount,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,chg),1)),4,12)) chg,
sales,memo,acomp2,message
from @tmp;

z_gift2:--z_gift2
	declare @t_bdate nvarchar(10)
	declare @t_edate nvarchar(10)
	declare @t_bbccno nvarchar(20)
	declare @t_ebccno nvarchar(20)
	declare @t_store nvarchar(max)
	declare @t_part nvarchar(max)
	set @t_bdate = case when '#non'=[1] then '' else [1] end
	set @t_edate = case when '#non'=[2] then char(255) else [2] end
	set @t_bbccno = case when '#non'=[4] then '' else [4] end
	set @t_ebccno = case when '#non'=[5] then char(255) else [5] end
	set @t_store = case when '#non'=[6] then '' else [6] end
	set @t_part = case when '#non'=[7] then '' else [7] end
	declare @noa nvarchar(20)
	declare @noq nvarchar(10)
	declare @typea nvarchar(10)
	declare @storeno nvarchar(20)
	declare @bccno nvarchar(20)
	declare @datea nvarchar(20)
	declare @mount float
	declare @price float
	declare @total float
	declare @mount2 float
	
	declare @tmp table(
		gno nvarchar(3),
		typea nvarchar(10),
		datea nvarchar(20),
		noa nvarchar(20),
		noq nvarchar(10),
		storeno nvarchar(20),
		bccno nvarchar(20),	
		bccname nvarchar(40),
		mount float,
		price float,
		total float,
		mount2 float
	)
	insert into @tmp
	select '0','B',ISNULL(b.datea,''),a.noa+'入料',a.noq,isnull(b.storeno,''),isnull(a.bccno,''),a.bccname,isnull(a.mount,0),ISNULL(a.price,0),ISNULL(a.total,0),0
	from giftins a
	left join giftin b on a.noa=b.noa
	where (ISNULL(a.bccno,'') between @t_bbccno and @t_ebccno) and (@t_store = '99' or @t_store = a.storeno)
	and (ISNULL(b.datea,'')<=@t_edate)
	insert into @tmp
	select '0','C',ISNULL(b.datea,''),a.noa+'領料',a.noq,isnull(b.storeno,''),isnull(b.giftno,''),b.gift,isnull(a.mount,0),null,null,0
	from giftsends a
	left join giftsend b on a.noa=b.noa
	where (ISNULL(b.storeno,'') between @t_bbccno and @t_ebccno) and (@t_store = '99' or @t_store = b.storeno)
	and (ISNULL(b.datea,'')<=@t_edate)
	declare @bmount float
	declare cursor_table cursor for
	select storeno,bccno from @tmp group by storeno,bccno
	open cursor_table
	fetch next from cursor_table
	into @storeno,@bccno
	while(@@FETCH_STATUS <> -1)
	begin
		select @bmount=0 ,@mount2=0
	
		declare cursor_table2 cursor for
		select noa,noq,typea,datea,isnull(mount,0) from @tmp where storeno=@storeno and bccno=@bccno order by datea,typea,noa,noq
		open cursor_table2
		fetch next from cursor_table2
		into @noa,@noq,@typea,@datea,@mount
		while(@@FETCH_STATUS <> -1)
		begin
			if(@typea='A')
				set @mount2 = @mount
			else
			begin
				set @mount2 = @mount2 + case when @typea='B' then @mount else -@mount end
			end
			update @tmp set mount2=@mount2 where noa=@noa and noq=@noq
			if(@datea<@t_bdate)
			begin
				set @bmount=@mount2
			end
			fetch next from cursor_table2
			into @noa,@noq,@typea,@datea,@mount
		end
		close cursor_table2
		deallocate cursor_table2	
		insert into @tmp(gno,typea,storeno,bccno,noa,mount2)values('1','',@storeno,@bccno,'庫存量',@mount2)

		insert into @tmp(gno,typea,storeno,bccno,noa,mount2)values('0','',@storeno,@bccno,'前期存量',@bmount)

		fetch next from cursor_table
		into @storeno,@bccno
	end
	close cursor_table
	deallocate cursor_table
	
	delete @tmp where datea<@t_bdate and len(typea)>0
	select a.*
	,a.storeno sa 
	,b.store sb
	,a.bccno ba
	,c.product bb
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.mount),1)),4,12)) mt1
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.total),1)),4,12)) tt
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.mount2),1)),4,12)) mt2
	from @tmp a
	left join store b on a.storeno=b.noa
	left join bcc c on c.noa=a.bccno
	order by a.storeno,a.bccno,a.gno,a.datea,a.typea,a.noa,a.noq;
	
z_gift3:--z_gift3
	declare @t_bdate nvarchar(10)
	declare @t_edate nvarchar(10)
	declare @t_bbccno nvarchar(20)
	declare @t_ebccno nvarchar(20)
	declare @t_store nvarchar(max)
	declare @t_part nvarchar(max)
	set @t_bdate = case when '#non'=[1] then '' else [1] end
	set @t_edate = case when '#non'=[2] then char(255) else [2] end
	set @t_bbccno = case when '#non'=[4] then '' else [4] end
	set @t_ebccno = case when '#non'=[5] then char(255) else [5] end
	set @t_store = case when '#non'=[6] then '' else [6] end
	set @t_part = case when '#non'=[7] then '' else [7] end
		declare @noa nvarchar(20)
	declare @noq nvarchar(10)
	declare @typea nvarchar(10)
	declare @storeno nvarchar(20)
	declare @bccno nvarchar(20)
	declare @datea nvarchar(20)
	declare @mount float
	declare @price float
	declare @total float
	declare @mount2 float
	
	declare @tmp table(
		gno nvarchar(3),
		typea nvarchar(10),
		datea nvarchar(20),
		noa nvarchar(20),
		noq nvarchar(10),
		storeno nvarchar(20),
		bccno nvarchar(20),	
		bccname nvarchar(40),
		mount float,
		price float,
		total float,
		mount2 float
	)
	insert into @tmp
	select '0','B',ISNULL(b.datea,''),a.noa+'入料',a.noq,isnull(a.storeno,''),isnull(a.bccno,''),a.bccname,isnull(a.mount,0),ISNULL(a.price,0),ISNULL(a.total,0),0
	from giftins a
	left join giftin b on a.noa=b.noa
	where (ISNULL(a.bccno,'') between @t_bbccno and @t_ebccno) and (@t_store = '99' or @t_store = b.storeno)
	and (ISNULL(b.datea,'')<=@t_edate)
	insert into @tmp
	select '0','C',ISNULL(b.datea,''),a.noa+'領料',a.noq,isnull(b.storeno,''),isnull(b.giftno,''),b.gift,isnull(a.mount,0),null,null,0
	from giftsends a
	left join giftsend b on a.noa=b.noa
	where (ISNULL(b.giftno,'') between @t_bbccno and @t_ebccno) and (@t_store = '99' or @t_store = b.storeno)
	and (ISNULL(b.datea,'')<=@t_edate)

	declare @bmount float
	
	declare cursor_table cursor for
	select storeno,bccno from @tmp group by storeno,bccno
	open cursor_table
	fetch next from cursor_table
	into @storeno,@bccno
	while(@@FETCH_STATUS <> -1)
	begin
		select @bmount=0 ,@mount2=0
	
		declare cursor_table2 cursor for
		select noa,noq,typea,datea,isnull(mount,0) from @tmp where storeno=@storeno and bccno=@bccno order by datea,typea,noa,noq
		open cursor_table2
		fetch next from cursor_table2
		into @noa,@noq,@typea,@datea,@mount
		while(@@FETCH_STATUS <> -1)
		begin
			if(@typea='A')
				set @mount2 = @mount
			else
			begin
				set @mount2 = @mount2 + case when @typea='B' then @mount else -@mount end
			end
			update @tmp set mount2=@mount2 where noa=@noa and noq=@noq
			if(@datea<@t_bdate)
			begin
				set @bmount=@mount2
			end
			fetch next from cursor_table2
			into @noa,@noq,@typea,@datea,@mount
		end
		close cursor_table2
		deallocate cursor_table2	
		insert into @tmp(gno,typea,storeno,bccno,noa,mount2)values('1','',@storeno,@bccno,'庫存量',@mount2)

		insert into @tmp(gno,typea,storeno,bccno,noa,mount2)values('0','',@storeno,@bccno,'前期存量',@bmount)

		fetch next from cursor_table
		into @storeno,@bccno
	end
	close cursor_table
	deallocate cursor_table
	
	delete @tmp where gno='0'
	update @tmp set gno='0'
	delete @tmp where mount2=0
	
	delete @tmp where datea<@t_bdate and len(typea)>0
	select a.*
	,a.storeno sa 
	,b.store sb
	,a.bccno ba
	,c.product bb
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.mount),1)),4,12)) mt1
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.total),1)),4,12)) tt
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.mount2),1)),4,12)) mt2
	from @tmp a
	left join store b on a.storeno=b.noa
	left join bcc c on c.noa=a.bccno
	order by a.storeno,a.bccno,a.gno,a.datea,a.typea,a.noa,a.noq;