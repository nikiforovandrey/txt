z_ordcpdc1:--z_ordcpdc1
declare @t_bnoa nvarchar(30) = case when '#non' = [1] then '' else [1] end
declare @t_enoa nvarchar(30) = case when '#non' = [2] then CHAR(255) else [2] end
declare @t_pageline int = 5   --------一頁幾行
declare @tmp table(
	gno nvarchar(1),
	idno int identity(0,1),
	orderno int,
	pageno int,
	w_totpage int,
	a_noa nvarchar(30),
	a_odate nvarchar(10),
	a_kind nvarchar(15),
	a_tggno nvarchar(30),
	a_tggs nvarchar(90),
	a_tel nvarchar(90),
	a_fax nvarchar(90),
	a_addr_a nvarchar(max),
	a_addr_b nvarchar(max),
	a_trantype nvarchar(max),
	a_trandate nvarchar(10),
	a_paytype nvarchar(max),
	a_memo nvarchar(max),
	a_money float,
	a_tax float,
	a_total float,
	b_productno nvarchar(30),
	b_products nvarchar(90),
	b_unit nvarchar(15),
	b_mount float,
	b_price float,
	b_total float,
	b_memo nvarchar(max)
)
insert into @tmp
select
	'0',ROW_NUMBER()over(partition by a.noa order by a.noa),1	,0,
	a.noa,a.odate,a.kind,a.tggno,c.comp,a.tel,a.fax,a.addr,a.addr2,a.trantype,a.trandate,a.paytype,a.memo,a.money,a.tax,a.total,
	b.productno,b.product,b.unit,b.mount,b.price,b.total,b.memo
from view_ordc a
left join view_ordcs b on a.noa = b.noa
left join tgg c on a.tggno = c.noa
where (a.noa between @t_bnoa and @t_enoa)
order by a.noa,b.no2


declare @a_noa nvarchar(30)
declare @a_count int
declare @idno int
declare @k int = 0 ----差幾頁
declare @pageCount int
declare @orderno int
declare @pageno int

declare cursor_table cursor for
	select a_noa,count(*),max(orderno) from @tmp group by a_noa
open cursor_table
fetch next from cursor_table
into @a_noa,@a_count,@orderno
while(@@FETCH_STATUS <> -1)
begin		
	if(@a_count > @t_pageline)
	begin
		set @k = CEILING((cast(@a_count as float)/@t_pageline))
		while(@k > 0)
		begin
			update @tmp set pageno = @k where orderno > ((@k-1)*@t_pageline) and orderno <= (@k*@t_pageline)
			set @k -=1
		end
	end
	fetch next from cursor_table
	into @a_noa,@a_count,@orderno
end
close cursor_table
deallocate cursor_table
update @tmp set orderno = orderno-((pageno-1)*@t_pageline)
declare cursor_table cursor for
	select distinct a_noa,max(orderno),pageno,min(idno),count(*) from @tmp group by a_noa,pageno
open cursor_table
fetch next from cursor_table
into @a_noa,@orderno,@pageno,@idno,@a_count
while(@@FETCH_STATUS <> -1)
begin		
	set @k = @t_pageline -(@a_count%@t_pageline)
	set @pageCount = @a_count/@t_pageline
	if(@k < @t_pageline and (@pageCount =0))
	begin
		while(@k > 0)
		begin
			insert into @tmp(gno,orderno,pageno,a_noa,a_memo,a_tggno,a_tggs)
				select '0',(@orderno+1),@pageno,@a_noa,a_memo,a_tggno,a_tggs from @tmp where idno = @idno
			set @k = @k-1
			set @orderno = @orderno +1
		end
	end
	insert into @tmp(gno,orderno,pageno,a_noa,a_tggno,a_tggs,b_mount,b_total,a_money,a_tax,a_total)
		select '1',(@t_pageline+1),pageno,a_noa,a_tggno,a_tggs,sum(b_mount),sum(b_total),max(a_money),max(a_tax),max(a_total) from @tmp where gno=0 and a_noa=@a_noa and pageno=@pageno group by a_noa,pageno,a_tggno,a_tggs
	insert into @tmp(gno,orderno,pageno,a_noa,a_tggno,a_tggs,a_memo) 
		select '2',(@t_pageline+2),pageno,a_noa,a_tggno,a_tggs,a_memo from @tmp where gno=0 and a_noa=@a_noa and pageno=@pageno group by a_noa,pageno,a_tggno,a_tggs,a_memo
	fetch next from cursor_table
	into @a_noa,@orderno,@pageno,@idno,@a_count
end
close cursor_table
deallocate cursor_table

declare cursor_table cursor for
	select distinct a_noa,count(*) from @tmp group by a_noa
open cursor_table
fetch next from cursor_table
into @a_noa,@a_count
while(@@FETCH_STATUS <> -1)
begin	
	update @tmp set w_totpage = @a_count/(@t_pageline+2) where a_noa = @a_noa
	fetch next from cursor_table
	into @a_noa,@a_count
end
close cursor_table
deallocate cursor_table

select
	gno,pageno,w_totpage,a_noa,a_odate,a_kind,a_tggno,a_tggs,a_tel,a_fax,a_addr_a,a_addr_b,a_trantype,a_trandate,a_paytype,
	a_memo,b_productno,b_products,b_unit,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a_money),1)),4,12)) a_money,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a_tax),1)),4,12)) a_tax,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a_total),1)),4,12)) a_total,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,b_mount),1)),4,12)) b_mount,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,b_price),1)),4,12)) b_price,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,b_total),1)),4,12)) b_total,b_memo
from @tmp order by a_tggno,a_noa desc,pageno,gno,orderno;
--*********************************************************************************************

z_ordcpdc2:--z_ordcpdc2
declare @t_kind nvarchar(90) = case when '#non' = [3] then '' else [3] end
declare @t_bdate nvarchar(10) = case when '#non' = [4] then '' else [4] end
declare @t_edate nvarchar(10) = case when '#non' = [5] then char(255) else [5] end
declare @t_bcno nvarchar(90) = case when '#non' = [6] then '' else [6] end
declare @t_ecno nvarchar(90) = case when '#non' = [7] then char(255) else [7] end
declare @t_btggno nvarchar(90) = case when '#non' = [8] then '' else [8] end
declare @t_etggno nvarchar(90) = case when '#non' = [9] then char(255) else [9] end
declare @t_bpno nvarchar(90) = case when '#non' = [10] then '' else [10] end
declare @t_epno nvarchar(90) = case when '#non' = [11] then char(255) else [11] end
declare @t_apv nvarchar(90) = case when '#non' = [12] then '' else [12] end
declare @t_enda nvarchar(90) = case when '#non' = [13] then '' else [13] end

declare @tmp table(
	gno nvarchar(1),
	noa nvarchar(50),
	noq nvarchar(50),
	pno nvarchar(50),
	product nvarchar(100),
	unit nvarchar(20),
	tgg nvarchar(100),
	odate nvarchar(10),
	datea nvarchar(10),
	mount float,
	price float,
	total float,
	rmount float,
	umount float
)
	
	insert @tmp
	select '0',a.noa,b.no2,b.productno,b.product,b.unit,a.tgg,a.odate,a.datea,b.mount,b.price,b.total,b.c1,b.notv
	from view_ordc a left join view_ordcs b on a.noa=b.noa
	where (len(@t_kind)=0 or @t_kind=a.kind) 
	and a.odate between @t_bdate and @t_edate
	and a.cno between @t_bcno and @t_ecno
	and a.tggno between @t_btggno and @t_etggno
	and b.productno between @t_bpno and @t_epno
	and (len(@t_apv)=0 or @t_apv=a.apv) 
	and (len(@t_enda)=0 or @t_enda=a.enda) 


select gno,RANK() OVER(ORDER BY noa,noq,pno) rr,(case when len(@t_kind)=0 then '全部' else @t_kind end) kind
,noa,pno,product,unit,tgg,odate,datea
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,mount),1)),4,30)) mount
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,price),1)),0,30)) price
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,total),1)),4,30)) total
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,rmount),1)),4,30)) rmount
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,umount),1)),4,30)) umount
from @tmp order by noa,noq,pno;
----**************************************************************************************
