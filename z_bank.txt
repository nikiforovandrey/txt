z_bank1:--z_bank1
declare @t_accy nvarchar(20)
declare @t_bdate nvarchar(10)
declare @t_edate nvarchar(10)
declare @t_baccno nvarchar(25)
declare @t_eaccno nvarchar(25)
set @t_accy = '[1]'
set @t_bdate = case when '#non'=[2] then '' else [2] end
set @t_edate = case when '#non'=[3] then char(255) else [3] end
set @t_baccno = case when '#non'=[4] then '' else [4] end
set @t_eaccno = case when '#non'=[5] then char(255) else [5] end
	
		declare @tmp table(
			gno nvarchar(1),
			accc5 nvarchar(20),
			dmoney int,
			cmoney int,
			[money] int,
			acc2 nvarchar(50),
			beginmoney int,
			lastmoney int
	)
	insert into @tmp
	select S1.gno,s1.accc5,s1.dmoney,s1.cmoney,s1.money, acc.acc2, isNull(acc.beginmoney,0) + isNull(s2.money,0) as beginMoney, isNull(acc.beginmoney,0) + isNull(s1.money,0) + isNull(s2.money,0) as lastMoney
	from(
		select
			'0' gno, accc5,
			SUM(dmoney) dmoney, SUM(cmoney) cmoney, SUM((dmoney-Cmoney)*n) money
		from(
			select b.* ,
			case when LEFT(b.accc5,4)='1112' then 1 else -1 end n
			from acccs[1] b where (b.accc5 between @t_baccno and @t_eaccno) and (b.accc2 between @t_bdate and @t_edate) and  LEFT(b.accc5,4)='1112') as R1
		group by accc5
		) AS s1
	left join acc[1] acc on acc.acc1=s1.accc5
	left join
		(select accc5,SUM(dmoney) dmoney, SUM(cmoney) cmoney, SUM((dmoney-Cmoney)*n) money
		from
		(select b.* ,
			case when LEFT(b.accc5,4)='1112' then 1 else -1 end n
		from acccs[1] b where (b.accc5 between @t_baccno and @t_eaccno) and b.accc2<@t_bdate and  LEFT(b.accc5,4)='1112') as R2
		group by accc5
		)as S2
	on s1.accc5 = S2.accc5
	
	
	select gno,accc5,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,dmoney),1)),4,12)) dmoney,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,cmoney),1)),4,12)) cmoney,
	acc2,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,beginmoney),1)),4,12)) beginmoney,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,lastmoney),1)),4,12)) lastmoney
	from @tmp
	order by accc5,gno;
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
z_bank2:--z_bank2
declare @t_accy nvarchar(20)
declare @t_bdate nvarchar(10)
declare @t_edate nvarchar(10)
declare @t_baccno nvarchar(25)
declare @t_eaccno nvarchar(25)
set @t_accy = '[1]'
set @t_bdate = case when '#non'=[2] then '' else [2] end
set @t_edate = case when '#non'=[3] then char(255) else [3] end
set @t_baccno = case when '#non'=[4] then '' else [4] end
set @t_eaccno = case when '#non'=[5] then char(255) else [5] end
	
	declare @result table(
		gno nvarchar(1),
		recno int,
		accc1  nvarchar(10),
		accc2  nvarchar(10),
		accc3  nvarchar(25),
		accc4  nvarchar(12),
		accc5  nvarchar(25),
		accc6  nvarchar(86),
		accc7  nvarchar(340),
		accc8  decimal(16,2),
		zno  nvarchar(20),
		ver  varchar(50),
		noq  nvarchar(3),
		part  nvarchar(18),
		coin  nvarchar(30),
		floata  decimal(10,5),
		n int,
		dmoney  decimal(20,0),
		cmoney  decimal(20,0),
		[money]  decimal(20,0),
		totMoney decimal(20,0)
		primary key (accc5,recno) 
	)
	insert into @result
	select
		'0' gno, ROW_NUMBER()over(order by accc5,accc2,accc3)as recno,R1.accc1,R1.accc2,R1.accc3,R1.accc4,R1.accc5,
		R1.accc6,R1.accc7,R1.accc8,R1.zno,R1.ver,R1.noq,R1.part,R1.coin,R1.floata,R1.n,R1.dmoney,R1.cmoney, (R1.dmoney-R1.cmoney)*R1.n money, 0 totMoney
	from(
		select b.* ,
		case when LEFT(b.accc5,4) = '1112' then 1 else -1 end n
		from acccs[1] b where (b.accc5 between @t_baccno and @t_eaccno)  and b.accc2<=@t_edate and (b.accc2 between @t_bdate and @t_edate)  and LEFT(b.accc5,4) = '1112' ) as R1
	union
		select '0' gno,-1 recno, '' accc1, '01/01' accc2, '' accc3, '' accc4,acc.acc1 accc5, '' accc6, '期初金額' accc7, 0 accc8, '' zno, '' ver, '' noq, '' part,
			'' coin, 0 floata, 1 n, 0 dmoney,0 cmoney, acc.beginmoney money, acc.beginmoney totMoney
		from acc[1] acc where acc.beginmoney!=0  and acc.acc1 between @t_baccno and @t_eaccno and LEFT(acc.acc1,4) = '1112'

	--***********************************************************
	declare @t_accc5 as nvarchar(25)
	declare @t_dmoney as decimal(16,2)
	declare @t_cmoney as decimal(16,2)
	declare @t_money as decimal(16,2)
	declare @t_totMoney as decimal(16,2)
	declare @recno as decimal(16)
	declare @accc2 as nvarchar(10)
	declare @accc5 as nvarchar(25)
	declare @dmoney as decimal(16,2)
	declare @cmoney as decimal(16,2)
	declare @money as decimal(16,2)

	set @t_accc5 = 'xxx###x$#xxx'
	set @t_dmoney = 0.0
	set @t_cmoney = 0.0
	set @t_money = 0.0
	set @t_totMoney = 0.0

	declare cursor_table cursor for
	select recno,accc2,accc5,dmoney,cmoney,money from @result order by accc5,recno
	open cursor_table
	fetch next from cursor_table
	into @recno,@accc2,@accc5,@dmoney,@cmoney,@money
	while(@@FETCH_STATUS <> -1)
	begin
		if @t_accc5=@accc5
		begin
			if @accc2 >= @t_bdate
			begin
				set @t_dmoney = @t_dmoney + @dmoney
				set @t_cmoney = @t_cmoney + @cmoney
				set @t_money = @t_money + @money
			end
			set @t_totMoney = @t_totMoney + @money
		end
		else
		begin
			if @t_accc5 != 'xxx###x$#xxx'
			begin
				insert into @result 
				select '1' gno,0 recno, '' accc1, '' accc2, '' accc3, '' accc4,@t_accc5 accc5, '' accc6, '' accc7, 0 accc8, '' zno, '' ver, '' noq, '' part,
				'' coin, 0 floata, 1 n, @t_dmoney dmoney, @t_cmoney cmoney, @t_money money, @t_totMoney totmoney
			end
			if @accc2 >= @t_bdate
			begin
				set @t_dmoney = @dmoney
				set @t_cmoney = @cmoney
				set @t_money = @money
			end
			else
			begin
				set @t_dmoney = 0
				set @t_cmoney = 0
				set @t_money = 0
			end
			set @t_accc5 = @accc5
			set @t_totMoney = @money
		end
		update @result set totMoney = @t_totMoney where accc5= @t_accc5 and recno = @recno
	fetch next from cursor_table
	into @recno,@accc2,@accc5,@dmoney,@cmoney,@money
	end
	if @t_accc5 != 'xxx###x$#xxx'
	begin
		insert into @result 
			select '1' gno,0 recno, '' accc1, '' accc2, '' accc3, '' accc4,@t_accc5 accc5, '' accc6, '' accc7, 0 accc8, '' zno, '' ver, '' noq, '' part,
			'' coin, 0 floata, 1 n, @t_dmoney dmoney, @t_cmoney cmoney, @t_money money, @t_totMoney totmoney
	end
	close cursor_table
	deallocate cursor_table
	--***********************************************************
	select * 
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,isnull(dmoney,0)),1)),4,12)) dm1
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,isnull(cmoney,0)),1)),4,12)) cm1
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,isnull(totmoney,0)),1)),4,12)) tot1
	from @result
	order by accc5,gno,recno;

