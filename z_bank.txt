z_bank1:--z_bank1
declare @t_accy nvarchar(20)
declare @t_bdate nvarchar(10)
declare @t_edate nvarchar(10)
declare @t_baccno nvarchar(25)
declare @t_eaccno nvarchar(25)
declare @t_xsort1 nvarchar(25)
set @t_accy = '[1]'
set @t_bdate = case when '#non'=[2] then '' else [2] end
set @t_edate = case when '#non'=[3] then char(255) else [3] end
set @t_baccno = case when '#non'=[4] then '' else [4] end
set @t_eaccno = case when '#non'=[5] then char(255) else [5] end
set @t_xsort1 = case when '#non'=[6] then '' else [6] end
declare @tmp table( 
	gno nvarchar(1), 
	accc5 nvarchar(20), 
	dmoney int, 
	cmoney int, 
	[money] int, 
	acc2 nvarchar(50), 
	account nvarchar(50), 
	beginmoney int, 
	lastmoney int,
	title nvarchar(20),
	atitle nvarchar(20),
	btitle nvarchar(20),
 	ctitle nvarchar(20)
) 
insert into @tmp 
select S1.gno,s1.accc5,s1.dmoney,s1.cmoney,s1.money,case when PATINDEX('%[0-9]%',acc.acc2) = 0 then acc.acc2 else left(acc.acc2,PATINDEX('%[0-9]%',acc.acc2)-1) end,(case when PATINDEX('%[0-9]%',acc.acc2)=0 then '' else substring(acc.acc2,PATINDEX('%[0-9]%',acc.acc2),len(acc.acc2))end), isNull(acc.beginmoney,0) + isNull(s2.money,0) as beginMoney, isNull(acc.beginmoney,0) + isNull(s1.money,0) + isNull(s2.money,0) as lastMoney ,'','','',''
from( 
select 
'0' gno, accc5, 
SUM(dmoney) dmoney, SUM(cmoney) cmoney, SUM((dmoney-Cmoney)*n) money 
from( 
select b.* , 
case when LEFT(b.accc5,4)='1112' then 1 else -1 end n 
from acccs[1] b where (b.accc5 between @t_baccno and @t_eaccno) and (b.accc2 between @t_bdate and @t_edate) and LEFT(b.accc5,4)='1112') as R1 
group by accc5 
) AS s1 
left join acc[1] acc on acc.acc1=s1.accc5 
left join 
(select accc5,SUM(dmoney) dmoney, SUM(cmoney) cmoney, SUM((dmoney-Cmoney)*n) money 
from 
(select b.* , 
case when LEFT(b.accc5,4)='1112' then 1 else -1 end n 
from acccs[1] b where (b.accc5 between @t_baccno and @t_eaccno) and b.accc2<@t_bdate and LEFT(b.accc5,4)='1112') as R2 
group by accc5 
)as S2 
on s1.accc5 = S2.accc5 
declare @accc5 nvarchar(35) 
declare @acc2 nvarchar(50) 
declare @account nvarchar(50) 
declare @dmoney float 
declare @cmoney float 
declare @total float 
set @accc5 = '' 
set @acc2 = '' 
set @account = '' 
set @dmoney = 0 
set @cmoney = 0 
set @total = 0 
declare cursor_table cursor for 
select distinct(accc5), 
case when PATINDEX('%[0-9]%',b.acc2) = 0 then b.acc2 else left(b.acc2,PATINDEX('%[0-9]%',b.acc2)-1) end, 
(case when PATINDEX('%[0-9]%',b.acc2)=0 then '' else substring(b.acc2,PATINDEX('%[0-9]%',b.acc2),len(b.acc2))end), 
sum(dmoney),sum(cmoney) from acccs102_1 a 
left join acc[1] b on a.accc5 = b.acc1
where accc2 < @t_bdate and LEFT(accc5,4)='1112'
and (a.accc5 between @t_baccno and @t_eaccno) 
group by accc5,b.acc2 
open cursor_table 
fetch next from cursor_table 
into @accc5,@acc2,@account,@dmoney,@cmoney 
while(@@FETCH_STATUS <> -1) 
begin 
if((select COUNT(accc5) from @tmp where accc5 = @accc5) = 0) 
begin 
set @total = @dmoney - @cmoney 
insert into @tmp(gno,accc5,acc2,account,beginmoney,dmoney,cmoney,lastmoney) 
select 0,@accc5,@acc2,@account,@total,0,0,@total 
end 
fetch next from cursor_table 
into @accc5,@acc2,@account,@dmoney,@cmoney 
end 
close cursor_table 
deallocate cursor_table	

update @tmp set atitle = case when (PATINDEX('%甲存%',acc2)>0)then '甲存' else '活存' end ,btitle = SUBSTRING(acc2,CHARINDEX('-',acc2)+1,len(acc2)),ctitle = left(acc2,PATINDEX('%-%',acc2)-1)
delete @tmp where lastmoney = 0

insert into @tmp 
select '1' gno,CHAR(255),SUM(dmoney),SUM(cmoney),SUM(money),CHAR(255),CHAR(255),SUM(beginmoney),SUM(lastmoney),'',atitle,CHAR(255),CHAR(255) 
from @tmp 
group by atitle 

insert into @tmp 
select '2' gno,char(255),sum(dmoney),sum(cmoney),sum(money),CHAR(255),CHAR(255),sum(beginmoney),sum(lastmoney),'',CHAR(255),CHAR(255),CHAR(255) 
from @tmp 
where gno != 1 

if @t_xsort1 = 'acc1'
begin
	if @t_bdate = @t_edate 
	begin 
		select gno,accc5, 
		reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,dmoney),1)),4,12)) dmoney, 
		reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,cmoney),1)),4,12)) cmoney, 
		acc2,account,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,beginmoney),1)),4,12)) beginmoney, 
		reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,lastmoney),1)),4,12)) lastmoney ,'本日結餘' title,atitle ,btitle,ctitle
		from @tmp 
		order by gno,accc5
	end 
	else 
	begin 
		select gno,accc5, 
		reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,dmoney),1)),4,12)) dmoney, 
		reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,cmoney),1)),4,12)) cmoney, 
		acc2,account,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,beginmoney),1)),4,12)) beginmoney, 
		reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,lastmoney),1)),4,12)) lastmoney ,'本期結餘' title,atitle ,btitle,ctitle
		from @tmp 
		order by gno,accc5
	end 
end
else if @t_xsort1 = 'acc2'
begin
	if @t_bdate = @t_edate 
	begin 
		select gno,accc5, 
		reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,dmoney),1)),4,12)) dmoney, 
		reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,cmoney),1)),4,12)) cmoney, 
		acc2,account,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,beginmoney),1)),4,12)) beginmoney, 
		reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,lastmoney),1)),4,12)) lastmoney ,'本日結餘' title,atitle ,btitle,ctitle
		from @tmp 
		order by gno,atitle,btitle,ctitle
	end 
	else 
	begin 
		select gno,accc5, 
		reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,dmoney),1)),4,12)) dmoney, 
		reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,cmoney),1)),4,12)) cmoney, 
		acc2,account,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,beginmoney),1)),4,12)) beginmoney, 
		reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,lastmoney),1)),4,12)) lastmoney ,'本期結餘' title,atitle ,btitle,ctitle
		from @tmp 
		order by gno,atitle,btitle,ctitle
	end 
end;
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
z_bank2:--z_bank2
declare @t_accy nvarchar(20)
declare @t_bdate nvarchar(10)
declare @t_edate nvarchar(10)
declare @t_baccno nvarchar(25)
declare @t_eaccno nvarchar(25)
declare @title nvarchar(200)
set @t_accy = '[1]'
set @t_bdate = case when '#non'=[2] then '' else [2] end
set @t_edate = case when '#non'=[3] then char(255) else [3] end
set @t_baccno = case when '#non'=[4] then '' else [4] end
set @t_eaccno = case when '#non'=[5] then char(255) else [5] end
set @title = '銀行存款異動明細' + (case when @t_bdate = @t_edate then '日報表' else '月報表' end)

declare @tmp table(
	gno nvarchar(1),
	idno int identity(0,1),
	accuname nvarchar(90),
	account nvarchar(50),
	datea nvarchar(10),
	lastmoney float,
	inmoney float,
	outmoney float,
	todaytotal float,
	memo nvarchar(200)
)
declare @tmpa table(  -----放置搜尋日期區間內有的帳戶
	wacc1 nvarchar(50),
	wacc2 nvarchar(50),
	accuname nvarchar(200),
	account nvarchar(50),
	lastmoney float
)
insert into @tmpa(wacc1,wacc2)
	select 
		accc5,max(accc6)
	from acccs[1]
	where
	(LEFT(accc5,4) = '1112') and
	(accc2 < @t_bdate) and
	(accc5 between @t_baccno and @t_eaccno)
	group by accc5
	order by accc5
update @tmpa set account = case when PATINDEX('%[0-9]%',wacc2) = 0 then '' else right(wacc2,len(wacc2) - PATINDEX('%[0-9]%',wacc2)+1) end
update @tmpa set accuname = case when PATINDEX('%[0-9]%',wacc2) = 0 then wacc2 else left(wacc2,PATINDEX('%[0-9]%',wacc2)-1) end
update @tmpa set lastmoney = (select (SUM(ISNULL(dmoney,0)) - SUM(ISNULL(cmoney,0))) from acccs102_1 where (accc2 < @t_bdate) and right(accc6,len(account)) = account)
insert into @tmp
	select
		'0',
		b.accuname,b.account,
		accc2,0,dmoney,cmoney,0,accc7
	from acccs[1] a
	left join @tmpa b on a.accc5 =  b.wacc1
	where (LEFT(accc5,4) = '1112') and 
		  (accc2 between @t_bdate and @t_edate) and
		  (accc5 between @t_baccno and @t_eaccno)
	order by accuname,account,accc2,cmoney,dmoney
	
declare @account nvarchar(50)
declare @last_account nvarchar(50)
declare @datea nvarchar(10)
declare @last_datea nvarchar(10)
declare @inmoney float
declare @outmoney float
declare @lastmoney float
declare @idno int
set @last_account = ''
set @last_datea = ''
set @lastmoney = 0
declare cursor_table cursor for
	select idno,account,datea,inmoney,outmoney from @tmp
open cursor_table
fetch next from cursor_table
into @idno,@account,@datea,@inmoney,@outmoney
while(@@FETCH_STATUS <> -1)
begin
	if(@account = @last_account and @datea = @last_datea)
	begin
		set @lastmoney = (@lastmoney + @inmoney) - @outmoney
	end
	else if(@account != @last_account)
	begin
		if(@last_account != '' and @last_datea != '')
			update @tmp set todaytotal = @lastmoney where idno = @idno-1
		select @lastmoney = lastmoney from @tmpa where account = @account
		update @tmp set lastmoney = @lastmoney where idno = @idno
		if((select count(account) from @tmp where account = @account and datea = @datea) = 1)
			update @tmp set todaytotal = (lastmoney + inmoney) - outmoney where idno = @idno
		set @last_account = @account
		set @last_datea = @datea
		set @lastmoney = (@lastmoney + @inmoney) - @outmoney
	end
	else if(@account = @last_account and @datea != @last_datea)
	begin
		update @tmp set todaytotal = @lastmoney where idno = @idno-1
		update @tmp set lastmoney = @lastmoney where idno = @idno
		if((select count(account) from @tmp where account = @account and datea = @datea) = 1)
			update @tmp set todaytotal = (lastmoney + inmoney) - outmoney where idno = @idno
		set @last_datea = @datea
		set @lastmoney = (@lastmoney + @inmoney) - @outmoney
	end
	if((select max(idno) from @tmp) = @idno)
		update @tmp set todaytotal = @lastmoney where idno = @idno	
	fetch next from cursor_table
	into @idno,@account,@datea,@inmoney,@outmoney
end
close cursor_table
deallocate cursor_table
insert into @tmp(gno,lastmoney,inmoney,outmoney,todaytotal)
	select '1',SUM(lastmoney),SUM(inmoney),SUM(outmoney),SUM(todaytotal)
	from @tmp
	
select
	gno,accuname,account,datea,
	case when lastmoney = 0 then '' else 
		(case when lastmoney < 0 then '(' + reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,(lastmoney*-1)),1)),4,12)) + ')'
			else reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,lastmoney),1)),4,12)) end)
		end lastmoney,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,inmoney),1)),4,12)) inmoney,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,outmoney),1)),4,12)) outmoney,
	case when todaytotal = 0 then '' else 
		(case when todaytotal < 0 then '(' + reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,(todaytotal*-1)),1)),4,12)) + ')'
			else reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,todaytotal),1)),4,12)) end)
		end todaytotal,
	memo,@title title
from @tmp;