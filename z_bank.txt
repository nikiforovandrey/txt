z_bank1:--z_bank1
declare @t_accy nvarchar(20)
declare @t_bdate nvarchar(10)
declare @t_edate nvarchar(10)
declare @t_baccno nvarchar(25)
declare @t_eaccno nvarchar(25)
set @t_accy = '[1]'
set @t_bdate = case when '#non'=[2] then '' else [2] end
set @t_edate = case when '#non'=[3] then char(255) else [3] end
set @t_baccno = case when '#non'=[4] then '' else [4] end
set @t_eaccno = case when '#non'=[5] then char(255) else [5] end
declare @tmp table( 
	gno nvarchar(1), 
	accc5 nvarchar(20), 
	dmoney int, 
	cmoney int, 
	[money] int, 
	acc2 nvarchar(50), 
	account nvarchar(50), 
	beginmoney int, 
	lastmoney int,
	title nvarchar(20) 
) 
insert into @tmp 
select S1.gno,s1.accc5,s1.dmoney,s1.cmoney,s1.money,case when PATINDEX('%[0-9]%',acc.acc2) = 0 then acc.acc2 else left(acc.acc2,PATINDEX('%[0-9]%',acc.acc2)-1) end,(case when PATINDEX('%[0-9]%',acc.acc2)=0 then '' else substring(acc.acc2,PATINDEX('%[0-9]%',acc.acc2),len(acc.acc2))end), isNull(acc.beginmoney,0) + isNull(s2.money,0) as beginMoney, isNull(acc.beginmoney,0) + isNull(s1.money,0) + isNull(s2.money,0) as lastMoney ,''
from( 
select 
'0' gno, accc5, 
SUM(dmoney) dmoney, SUM(cmoney) cmoney, SUM((dmoney-Cmoney)*n) money 
from( 
select b.* , 
case when LEFT(b.accc5,4)='1112' then 1 else -1 end n 
from acccs102_1 b where (b.accc5 between @t_baccno and @t_eaccno) and (b.accc2 between @t_bdate and @t_edate) and LEFT(b.accc5,4)='1112') as R1 
group by accc5 
) AS s1 
left join acc102_1 acc on acc.acc1=s1.accc5 
left join 
(select accc5,SUM(dmoney) dmoney, SUM(cmoney) cmoney, SUM((dmoney-Cmoney)*n) money 
from 
(select b.* , 
case when LEFT(b.accc5,4)='1112' then 1 else -1 end n 
from acccs102_1 b where (b.accc5 between @t_baccno and @t_eaccno) and b.accc2<@t_bdate and LEFT(b.accc5,4)='1112') as R2 
group by accc5 
)as S2 
on s1.accc5 = S2.accc5 
declare @accc5 nvarchar(35) 
declare @acc2 nvarchar(50) 
declare @account nvarchar(50) 
declare @dmoney float 
declare @cmoney float 
declare @total float 
set @accc5 = '' 
set @acc2 = '' 
set @account = '' 
set @dmoney = 0 
set @cmoney = 0 
set @total = 0 
declare cursor_table cursor for 
select distinct(accc5), 
case when PATINDEX('%[0-9]%',b.acc2) = 0 then b.acc2 else left(b.acc2,PATINDEX('%[0-9]%',b.acc2)-1) end, 
(case when PATINDEX('%[0-9]%',b.acc2)=0 then '' else substring(b.acc2,PATINDEX('%[0-9]%',b.acc2),len(b.acc2))end), 
sum(dmoney),sum(cmoney) from acccs102_1 a 
left join acc102_1 b on a.accc5 = b.acc1 
where accc2 < @t_bdate and LEFT(accc5,4)='1112' 
group by accc5,b.acc2 
open cursor_table 
fetch next from cursor_table 
into @accc5,@acc2,@account,@dmoney,@cmoney 
while(@@FETCH_STATUS <> -1) 
begin 
if((select COUNT(accc5) from @tmp where accc5 = @accc5) = 0) 
begin 
set @total = @dmoney - @cmoney 
insert into @tmp(gno,accc5,acc2,account,beginmoney,dmoney,cmoney,lastmoney) 
select 0,@accc5,@acc2,@account,@total,0,0,@total 
end 
fetch next from cursor_table 
into @accc5,@acc2,@account,@dmoney,@cmoney 
end 
close cursor_table 
deallocate cursor_table	

insert into @tmp
select '1' gno,char(255),sum(dmoney),sum(cmoney),sum(money),CHAR(255),CHAR(255),sum(beginmoney),sum(lastmoney),''
from @tmp

if @t_bdate = @t_edate 
begin 
select gno,accc5, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,dmoney),1)),4,12)) dmoney, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,cmoney),1)),4,12)) cmoney, 
acc2,account,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,beginmoney),1)),4,12)) beginmoney, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,lastmoney),1)),4,12)) lastmoney ,'本日結餘' title 
from @tmp 
order by accc5,gno 
end 
else 
begin 
select gno,accc5, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,dmoney),1)),4,12)) dmoney, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,cmoney),1)),4,12)) cmoney, 
acc2,account,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,beginmoney),1)),4,12)) beginmoney, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,lastmoney),1)),4,12)) lastmoney ,'本期結餘' title 
from @tmp 
order by accc5,gno 
end ;
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------


-----------------------------------------------------------------------------------------------------
z_bank2:--z_bank2
declare @t_accy nvarchar(20)
declare @t_bdate nvarchar(10)
declare @t_edate nvarchar(10)
declare @t_baccno nvarchar(25)
declare @t_eaccno nvarchar(25)
set @t_accy = '[1]'
set @t_bdate = case when '#non'=[2] then '' else [2] end
set @t_edate = case when '#non'=[3] then char(255) else [3] end
set @t_baccno = case when '#non'=[4] then '' else [4] end
set @t_eaccno = case when '#non'=[5] then char(255) else [5] end
declare @result table(
	gno nvarchar(1),
	idno int identity(0,1),
	accc1 nvarchar(10),
	accc2 nvarchar(10),
	accc3 nvarchar(25),
	accc4 nvarchar(12),
	accc5 nvarchar(25),
	accc6 nvarchar(86),
	accc7 nvarchar(340),
	accc8 float,
	zno nvarchar(20),
	ver varchar(50),
	noq nvarchar(3),
	part nvarchar(18),
	coin nvarchar(30),
	floata float,
	n int,
	dmoney float,
	cmoney float,
	totMoney float
)
insert into @result
	select
	'0' gno,accc1,accc2,accc3,accc4,accc5,isnull(b.acc2,accc6),accc7,accc8,zno,ver,noq,part,coin,floata,
	case when LEFT(accc5,4) = '1112' then '1' else '-1' end n,
	dmoney,cmoney,0
	from acccs[1] a
	left join acc[1] b on a.accc5 = b.acc1
	where (accc5 between @t_baccno and @t_eaccno) and 
		  (accc2 between @t_bdate and @t_edate) and
		  LEFT(accc5,4) = '1112'
	order by accc5
insert into @result(accc5,gno,accc6)
	select distinct(accc5),'1',isnull(b.acc2,accc6) from acccs[1] a
	left join acc[1] b on a.accc5 = b.acc1
	where (accc5 between @t_baccno and @t_eaccno) and 
		  (accc2 < @t_bdate) and
		  LEFT(accc5,4) = '1112'
	union
	select distinct(accc5),'1',isnull(b.acc2,accc6) from acccs[1] a
	left join acc[1] b on a.accc5 = b.acc1
	where (accc5 between @t_baccno and @t_eaccno) and 
		  (accc2 between @t_bdate and @t_edate) and
		  LEFT(accc5,4) = '1112'
insert into @result(gno,accc5,accc7,dmoney,cmoney)
	select 0,accc5,'<center>上期結餘</center>',SUM(dmoney),sum(cmoney) from acccs[1]
	where (accc2 < @t_bdate) and (accc5 between @t_baccno and @t_eaccno) and LEFT(accc5,4) = '1112'
	group by accc5

declare @idno int
declare @dmoney float
declare @cmoney float
declare @total float
declare @accc5 nvarchar(15)
declare @old_accc5 nvarchar(15)
set @idno = 0
set @dmoney = 0
set @cmoney = 0
set @total = 0
set @accc5 = ''
set @old_accc5 = ''
declare cursor_table cursor for
	select idno,accc5,dmoney,cmoney from @result
	where gno = 0
	order by accc5,accc2
open cursor_table
fetch next from cursor_table
into @idno,@accc5,@dmoney,@cmoney
while(@@FETCH_STATUS <> -1)
begin
	if(@accc5 != @old_accc5) set @total = 0
	set @total = @total + @dmoney - @cmoney
	update @result set totMoney = @total where idno = @idno
	set @old_accc5 = @accc5
	fetch next from cursor_table
	into @idno,@accc5,@dmoney,@cmoney
end
close cursor_table
deallocate cursor_table
insert into @result(gno,accc1,accc5,accc7,dmoney,cmoney,totMoney)
	select '0','99',accc5,'<center>合　　　　　計</center>',SUM(dmoney),SUM(cmoney),SUM(dmoney)-SUM(cmoney)
	from @result
	group by accc5
select *
,reverse(substring(reverse(convert(nvarchar(20),CONVERT(money,isnull(dmoney,0)),1)),4,12)) dm1
,reverse(substring(reverse(convert(nvarchar(20),CONVERT(money,isnull(cmoney,0)),1)),4,12)) cm1
,reverse(substring(reverse(convert(nvarchar(20),CONVERT(money,isnull(totmoney,0)),1)),4,12)) tot1
from @result
order by accc5,gno desc,accc1,accc2;