z_ordbp05:--z_ordbp05
	declare @t_ordbno nvarchar(20) = case when '#non' = [17] then '' else [17] end
	-----------------------------------------------------------------------------------
	declare @t_pageline int = 10
	-----------------------------------------------------------------------------------
	declare @tmp table(
		gno nvarchar(10),
		pno nvarchar(10),
		noa nvarchar(20),
		no3 nvarchar(10),
		productno nvarchar(20),
		product nvarchar(50),
		no4 nvarchar(10),
		datea nvarchar(20),
		tggno nvarchar(20),
		mount float,
		price float,
		total float,
		memo nvarchar(20)
	)
	insert into @tmp(gno,pno,noa,no3,productno,product
		,no4,datea,tggno,mount,price,memo)
	select '1','1',a.noa,b.no3,b.productno,b.product
		,c.no4,c.datea,c.tggno
		,case when isnull(c.mount,0)=0 then b.mount else c.mount end
		,case when isnull(c.price,0)=0 then null else c.price end
		,c.memo
	from view_ordb a
	left join view_ordbs b on a.accy=b.accy and a.noa=b.noa
	left join view_ordbt c on a.accy=c.accy and a.noa=c.noa and b.no3=c.no3 and len(isnull(c.tggno,''))> 0 and c.typea='議價'
	where a.noa=@t_ordbno
	
	update @tmp set total = ROUND(mount*price,0)
	--------------------------------------------------
	--insert into @tmp(gno,pno,tggno)
	--select '3','3',tggno from @tmp group by tggno
	--insert into @tmp(gno,pno,tggno)
	--select '4','4',tggno from @tmp group by tggno
	--insert into @tmp(gno,pno,tggno)
	--select '5','5',tggno from @tmp group by tggno
	
	--------------------------------------------------
	declare @tggno nvarchar(20)
	declare @n int 
	
	declare cursor_table cursor for
	select tggno,count(1) from @tmp group by tggno
	open cursor_table
	fetch next from cursor_table
	into @tggno,@n
	while(@@FETCH_STATUS <> -1)
	begin		
		while(@n%@t_pageline!=0)
		begin
			insert into @tmp(gno,pno,tggno)values('2','2',@tggno)
			set @n = @n + 1
		end
		fetch next from cursor_table
		into @tggno,@n
	end
	close cursor_table
	deallocate cursor_table
	
	select a.* 
	,a.productno prono
	,a.tggno tno
	,b.comp tgg
	,b.tel tel
	,b.fax fax
	,b.addr_comp addr
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,total),1)),4,12)) ttt
	from @tmp a 
	left join tgg b on a.tggno=b.noa
	order by a.tggno,pno;
	
z_ordbp04:--z_ordbp04
	declare @t_ordbno nvarchar(20) = case when '#non' = [17] then '' else [17] end
	-----------------------------------------------------------------------------------
	declare @t_pageline int = 10
	-----------------------------------------------------------------------------------
	declare @tmp table(
		gno nvarchar(10),
		pno nvarchar(10),
		noa nvarchar(20),
		no3 nvarchar(10),
		productno nvarchar(20),
		product nvarchar(50),
		no4 nvarchar(10),
		datea nvarchar(20),
		tggno nvarchar(20),
		mount float,
		price float,
		total float,
		memo nvarchar(20)
	)
	insert into @tmp(gno,pno,noa,no3,productno,product
		,no4,datea,tggno,mount,price,memo)
	select '1','1',a.noa,b.no3,b.productno,b.product
		,c.no4,c.datea,c.tggno
		,case when isnull(c.mount,0)=0 then b.mount else c.mount end
		,case when isnull(c.price,0)=0 then null else c.price end
		,c.memo
	from view_ordb a
	left join view_ordbs b on a.accy=b.accy and a.noa=b.noa
	left join view_ordbt c on a.accy=c.accy and a.noa=c.noa and b.no3=c.no3 and len(isnull(c.tggno,''))> 0 and c.typea='詢價'
	where a.noa=@t_ordbno
	
	update @tmp set total = ROUND(mount*price,0)
	--------------------------------------------------
	--insert into @tmp(gno,pno,tggno)
	--select '3','3',tggno from @tmp group by tggno
	--insert into @tmp(gno,pno,tggno)
	--select '4','4',tggno from @tmp group by tggno
	--insert into @tmp(gno,pno,tggno)
	--select '5','5',tggno from @tmp group by tggno
	
	--------------------------------------------------
	declare @tggno nvarchar(20)
	declare @n int 
	
	declare cursor_table cursor for
	select tggno,count(1) from @tmp group by tggno
	open cursor_table
	fetch next from cursor_table
	into @tggno,@n
	while(@@FETCH_STATUS <> -1)
	begin		
		while(@n%@t_pageline!=0)
		begin
			insert into @tmp(gno,pno,tggno)values('2','2',@tggno)
			set @n = @n + 1
		end
		fetch next from cursor_table
		into @tggno,@n
	end
	close cursor_table
	deallocate cursor_table
	
	select a.* 
	,a.productno prono
	,a.tggno tno
	,b.comp tgg
	,b.tel tel
	,b.fax fax
	,b.addr_comp addr
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,total),1)),4,12)) ttt
	from @tmp a 
	left join tgg b on a.tggno=b.noa
	order by a.tggno,pno;

z_ordbp03:--z_ordbp03
	declare @t_bodate nvarchar(20) = case when '#non' = [13] then '' else [13] end
	declare @t_eodate nvarchar(20) = case when '#non' = [14] then char(255) else [14] end
	declare @t_bproductno nvarchar(20) = case when '#non' = [15] then '' else [15] end
	declare @t_eproductno nvarchar(20) = case when '#non' = [16] then char(255) else [16] end
	declare @t_ordbno nvarchar(20) = case when '#non' = [17] then '' else [17] end
	declare @t_ordeno nvarchar(20) = case when '#non' = [18] then '' else [18] end
	declare @t_workgno nvarchar(20) = case when '#non' = [19] then '' else [19] end
	--------------------------------------------------------------------------------------------------------
	--Ordb
	declare @tmpa table(
		accy nvarchar(10),
		noa nvarchar(20),
		no3 nvarchar(10),
		odate nvarchar(10),
		ordeno nvarchar(20),
		workgno nvarchar(20),
		
		productno nvarchar(20),
		product nvarchar(50),
	
		mount float,
		price float
	)
	
	--Inquiry
	declare @tmpb table(
		recno int,
		productno nvarchar(20),
		product nvarchar(50),
		
		accy nvarchar(10),
		noa nvarchar(20),
		no3 nvarchar(10),
		no4 nvarchar(10),
		datea nvarchar(10),
		tggno nvarchar(20),
		tgg nvarchar(40),
		mount float,
		price float,
		memo nvarchar(max)
	)
	--Bargain
	declare @tmpc table(
		recno int,
		productno nvarchar(20),
		product nvarchar(50),
		
		accy nvarchar(10),
		noa nvarchar(20),
		no3 nvarchar(10),
		no4 nvarchar(10),
		datea nvarchar(10),
		tggno nvarchar(20),
		tgg nvarchar(40),
		mount float,
		price float,
		memo nvarchar(max)
	)
		--Ordc
	declare @tmpd table(
		recno int,
		productno nvarchar(20),
		product nvarchar(50),
		
		accy nvarchar(10),
		noa nvarchar(20),
		no3 nvarchar(10),
		mount float,
		price float,
		ordcaccy nvarchar(10),
		ordcnoa nvarchar(20),
		ordcno2 nvarchar(20)
	)
		--Rc2
	declare @tmpe table(
		recno int,
		productno nvarchar(20),
		product nvarchar(50),
		
		accy nvarchar(10),
		noa nvarchar(20),
		no3 nvarchar(10),
		mount float,
		price float,
		rc2accy nvarchar(10),
		rc2noa nvarchar(20),
		rc2noq nvarchar(10)
	)
	---------------------------------------------------------------------------------------
	insert into @tmpa(productno,product,accy,noa,no3,mount,price,odate,ordeno,workgno)
	select a.productno,a.product,a.accy,a.noa,a.no3,a.mount,a.price,b.odate,d.ordeno,c.noa 
	from view_ordbs a
	right join view_ordb b on a.accy=b.accy and a.noa=b.noa
	outer apply (select top 1 accy,noa from view_workg where CHARINDEX(','+a.noa+',',','+ordbno+',')>0 and noa=@t_workgno) c
	outer apply (select top 1 ordeno from view_workg x left join view_workgs y on x.accy=y.accy and x.noa=y.noa where CHARINDEX(','+a.noa+',',','+x.ordbno+',')>0 and y.ordeno=@t_ordeno) d
	where isnull(a.productno,'') between @t_bproductno and @t_eproductno
	and ISNULL(a.odate,'') between @t_bodate and @t_eodate
	and (len(@t_ordbno)=0 or a.noa=@t_ordbno)
	and (len(@t_workgno)=0 or c.noa is not null)
	and (len(@t_ordeno)=0 or d.ordeno is not null)
	
	insert into @tmpb(productno,product,accy,noa,no3,no4
		,datea,tggno,tgg,mount,price,memo)
	select a.productno,a.product,a.accy,a.noa,a.no3,b.no4
		,b.datea,b.tggno,b.tgg,b.mount,b.price,b.memo
	from @tmpa a
	left join view_ordbt b on a.accy=b.accy and a.noa=b.noa and a.no3=b.no3 
	where b.typea='詢價' and len(b.datea)>0 
	
	insert into @tmpc(productno,product,accy,noa,no3,no4
		,datea,tggno,tgg,mount,price,memo)
	select a.productno,a.product,a.accy,a.noa,a.no3,b.no4
		,b.datea,b.tggno,b.tgg,b.mount,b.price,b.memo
	from @tmpa a
	left join view_ordbt b on a.accy=b.accy and a.noa=b.noa and a.no3=b.no3 
	where b.typea='議價' and len(b.datea)>0 
	-------------------------------------------------------------------------------------------
	insert into @tmpd(productno,product,accy,noa,no3,mount,price,ordcaccy,ordcnoa,ordcno2)
	select b.productno,b.product,'',b.ordbno,b.no3,b.mount,b.price,b.accy,b.noa,b.no2
	from view_ordc a
	left join view_ordcs b on a.accy=b.accy and a.noa=b.noa
	left join @tmpa c on b.ordbno=c.noa and b.no3=c.no3
	where b.noa is not null and c.noa is not null
	-------------------------------------------------------------------------------------------
	insert into @tmpe(productno,product,accy,noa,no3,mount,price,rc2accy,rc2noa,rc2noq)
	select b.productno,b.product,c.accy,c.noa,c.no3,b.mount,b.price,b.accy,b.noa,b.no2
	from view_rc2 a
	left join view_rc2s b on a.accy=b.accy and a.noa=b.noa
	left join @tmpd c on b.ordeno=c.ordcnoa and b.no2=c.ordcno2
	where b.noa is not null and c.noa is not null
	------------------------------------------------------------------------------------------
	------------------------------------------------------------------------------------------
	declare @tmp table(
		gno nvarchar(10),
		pno nvarchar(10),
		odate nvarchar(10),
		ordbaccy nvarchar(10),
		ordbno nvarchar(20),
		ordbno3 nvarchar(10),
		workgno nvarchar(20),
		ordeno nvarchar(20),
		
		productno nvarchar(20),
		product nvarchar(50),
		price float,
		mount float,
		
		tggno nvarchar(20),
		tgg nvarchar(50),

		ordcaccy nvarchar(10),
		ordcno nvarchar(20),
		
		rc2accy nvarchar(10),
		rc2no nvarchar(20)
	)
	

	insert into @tmp(gno,pno,odate,ordbaccy,ordbno,ordbno3,workgno,ordeno,productno,product,price,mount)
	select '1','1',odate,accy,noa,no3,workgno,ordeno,productno,product,price,mount
	from @tmpa order by accy,noa,no3
	
	insert into @tmp(gno,pno,ordbaccy,ordbno,ordbno3,tggno,tgg,price,mount)
	select '2','2',accy,noa,no3,tggno,tgg,price,mount
	from @tmpb order by accy,noa,no3
	
	insert into @tmp(gno,pno,ordbaccy,ordbno,ordbno3,tggno,tgg,price,mount)
	select '3','3',accy,noa,no3,tggno,tgg,price,mount
	from @tmpc order by accy,noa,no3
	
	insert into @tmp(gno,pno,ordbaccy,ordbno,ordbno3,ordcaccy,ordcno,price,mount)
	select '4','4',accy,noa,no3,ordcaccy,ordcnoa,price,mount
	from @tmpd order by accy,noa,no3
	
	insert into @tmp(gno,pno,ordbaccy,ordbno,ordbno3,rc2accy,rc2no,price,mount)
	select '5','5',accy,noa,no3,rc2accy,rc2noa,price,mount
	from @tmpe order by accy,noa,no3
	------------------------------------------------------------------------------------------
	
	select * 
	,tggno tt1
	,tgg tt2
	from @tmp order by ordbno,ordbno3,pno;

z_ordbp1:--z_ordbp1
declare @t_bnoa nvarchar(20)
declare @t_enoa nvarchar(20)
declare @t_pageline int = 15   --------一頁幾行
set @t_bnoa = case when '#non' = [2] then '' else [2] end
set @t_enoa = case when '#non' = [3] then CHAR(255) else [3] end
declare @tmp table(
		gno nvarchar(1),
		idno int identity(0,1),
		orderno int,
		pageno int,
		noa nvarchar(30),
		noq nvarchar(20),
		odate nvarchar(10),
		tno nvarchar(20),
		tgg nvarchar(50),
		tel nvarchar(20),
		fax nvarchar(20),
		addr nvarchar(60),
		kind nvarchar(20),
		trantype nvarchar(20),
		paytype nvarchar(20),
		datea nvarchar(10),
		uno nvarchar(20),
		pno nvarchar(20),
		product nvarchar(50),
		spec nvarchar(20),
		size nvarchar(50),
		mount float,
		weightb float,
		price float,
		total float,
		ordeno nvarchar(20),
		tmemo nvarchar(200),
		moneys float,
		tax float,
		ttotal float,
		tmount nvarchar(200),
		memo nvarchar(200)
)
insert into @tmp
select '0' gno,
	ROW_NUMBER()over(partition by a.noa order by a.noa),1,
	a.noa,b.no3,a.odate,a.tggno,a.tgg,a.tel,a.fax,a.addr,
	a.kind,a.trantype,
	a.paytype,a.datea,b.uno,b.productno,b.product,b.spec,
	(case when ltrim(rtrim(isnull(b.size,'')))='' then dbo.csize(a.kind,b.dime,b.width,b.lengthb,b.radius) else b.size end),
	b.mount,b.weight,b.price,b.total,b.ordeno,b.memo,a.money,a.tax,a.total,0,a.memo
from view_ordb[1] a
left join view_ordbs[1] b on a.noa = b.noa
where a.noa between @t_bnoa and @t_enoa
declare @noa nvarchar(20)
declare @count int
declare @idno int
declare @k int = 0 ----差幾頁
declare @pageCount int
declare @orderno int
declare @pageno int

declare cursor_table cursor for
	select noa,count(*),max(orderno) from @tmp group by noa
open cursor_table
fetch next from cursor_table
into @noa,@count,@orderno
while(@@FETCH_STATUS <> -1)
begin		
	if(@count > @t_pageline)
	begin
		set @k = CEILING((cast(@count as float)/@t_pageline))
		while(@k > 0)
		begin
			update @tmp set pageno = @k where orderno > ((@k-1)*@t_pageline) and orderno <= (@k*@t_pageline)
			set @k -=1
		end
	end
	fetch next from cursor_table
	into @noa,@count,@orderno
end
close cursor_table
deallocate cursor_table
update @tmp set orderno = orderno-((pageno-1)*@t_pageline)
declare cursor_table cursor for
	select distinct noa,max(orderno),pageno,min(idno),count(*) from @tmp group by noa,pageno
open cursor_table
fetch next from cursor_table
into @noa,@orderno,@pageno,@idno,@count
while(@@FETCH_STATUS <> -1)
begin		
	set @k = @t_pageline -(@count%@t_pageline)
	set @pageCount = @count/@t_pageline
	if(@k < @t_pageline and (@pageCount =0))
	begin
		while(@k > 0)
		begin
			insert into @tmp(gno,orderno,pageno,noa,memo,kind,tgg)
				select '0',(@orderno+1),@pageno,@noa,memo,kind,tgg from @tmp where idno = @idno
			set @k = @k-1
			set @orderno = @orderno +1
		end
	end
	insert into @tmp(gno,orderno,pageno,noa,kind,tgg,moneys,tax,ttotal)
		select '1',(@t_pageline+1),pageno,noa,kind,tgg,sum(isnull(total,0)),max(isnull(tax,0)) ,max(isnull(ttotal,0)) from @tmp where gno=0 and noa=@noa and pageno=@pageno group by noa,pageno,kind,tgg
	insert into @tmp(gno,orderno,pageno,noa,kind,memo) 
		select '2',(@t_pageline+2),pageno,noa,kind,memo from @tmp where gno=0 and noa=@noa and pageno=@pageno group by noa,pageno,kind,memo
	fetch next from cursor_table
	into @noa,@orderno,@pageno,@idno,@count
end
close cursor_table
deallocate cursor_table
update @tmp set kind = (case kind when '1' then '原料' when '2' then '物料' when '3' then '費用' when '4' then '費用(製)' 
			when '5' then '維修' when '6' then '加工' end)
update @tmp set size = replace(size,'~#$','''')
select gno,noa,noq,odate,tno,tgg,tel,fax,addr,kind,trantype,paytype,datea,uno,pno,product,spec,size,
reverse(substring(reverse(convert(nvarchar(max),CONVERT(money,mount),1)),4,30)) mount,
reverse(substring(reverse(convert(nvarchar(max),CONVERT(money,weightb),1)),4,30)) weightb,
reverse(substring(reverse(convert(nvarchar(max),CONVERT(money,price),1)),4,30)) price,
reverse(substring(reverse(convert(nvarchar(max),CONVERT(money,total),1)),4,30)) total,ordeno,tmemo,
reverse(substring(reverse(convert(nvarchar(max),CONVERT(money,moneys),1)),4,30)) moneys,
reverse(substring(reverse(convert(nvarchar(max),CONVERT(money,tax),1)),4,30)) tax,
reverse(substring(reverse(convert(nvarchar(max),CONVERT(money,ttotal),1)),4,30)) ttotal,
reverse(substring(reverse(convert(nvarchar(max),CONVERT(money,tmount),1)),4,30)) tmount,memo
from @tmp order by noa desc,datea desc,pageno,gno,orderno;
--**************************************************************************************************************
z_ordbp2:--z_ordbp2
declare @tmp table(
	gno nvarchar(1),
	productno nvarchar(30),
	products nvarchar(90),
	stype nvarchar(15),
	ordeno nvarchar(30),
	ordbmount float,
	ordbunit nvarchar(12),
	ordcmount float,
	ordcunit nvarchar(12),
	price float,
	tggno nvarchar(30),
	tggs nvarchar(90),
	coin nvarchar(15),
	taxtype nvarchar(15),
	odate nvarchar(10),
	datea nvarchar(10),
	kind nvarchar(15),
	noa nvarchar(30),
	trandate nvarchar(10)
)
insert into @tmp
	select 
		'0',a.productno,a.product,c.stype,c.ordeno,c.ordbmount,c.ordbunit,
		a.mount,a.unit,a.price,b.tggno,b.tgg,b.coin,b.taxtype,b.odate,b.datea,
		b.kind,b.noa,b.trandate
	from view_ordcs[1] a
	left join view_ordc[1] b on a.noa = b.noa
	left join (
		select a.noa ordbno,d.noa ordeno,d.no2 no2,b.no3 no3,c.stype stype,
				b.mount ordbmount,b.unit ordbunit
		from view_ordb[1] a
		left join view_ordbs[1] b on a.noa = b.noa
		left join view_orde[1] c on b.ordeno = c.noa
		left join view_ordes[1] d on (c.noa = d.noa) and (b.no2 = d.no2)
		group by a.noa,d.noa,d.no2,b.no3,c.stype,b.mount,b.unit
	) c on (a.ordbno = c.ordbno) and (a.no3 = c.no3)
update @tmp set stype = (
		case stype when '1' then '內銷' when '2' then '代工' when '3' then '外銷' when '4' then '計畫生產' end
)
update @tmp set taxtype = (
		case taxtype when '1' then '應稅' when '2' then '零稅率' when '3' then '內含' when '4' then '免稅' 
		when '5' then '自訂' when '6' then '作廢' end
)
update @tmp set kind = (
		case kind when '1' then '原料' when '2' then '物料' 
		when 'A1' then '鋼捲鋼板' when 'B2' then '鋼管' when 'C3' then '鋼筋' when 'A4' then '鋼胚'  
		end
)
select * from @tmp;
----**************************************************************************************
