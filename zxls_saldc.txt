zxls_saldc:--指紋打卡上傳

declare @workerno nvarchar(MAX)=[1] --上傳人編號
declare @worker nvarchar(MAX)=[2]--上傳人姓名
declare @datea nvarchar(MAX)
declare @t_date nvarchar(10)
declare @t_rest int =90 --午休時間
declare @t_work int=2 
declare @t_gowork nvarchar(10)='08:00:59' --正常上班時間+公司規定
declare @t_offwork nvarchar(10)='17:30:00' --正常下班時間-公司規定
declare @t_overtime nvarchar(10)='18:00:00' --正常加班起算時間-公司規定
--103/03/17打卡資料6點後才算加班,假日中午扣一個小時,司機沒有所謂的加班
--1加班=下班-上班-午休
--2加班=下班-正常下班時間
--3加班手動
declare @t_weekday nvarchar(10)--星期
declare @t_satday nvarchar(10)=1 --星期六是否休假 1有 0沒有
--102/12/03 大昌 1-5加班不計算 ,六日加班不減掉休息時間

--拆解傳入的資料
declare @tmp table(
		sssno nvarchar(100),
--		namea nvarchar(100),
		timea nvarchar(100),
		nos nvarchar(100),
		works nvarchar(100)
)

--insert into @tmp
--select left(a,CHARINDEX(CHAR(9),a)-1) 
--,LEFT(SUBSTRING(a,CHARINDEX(CHAR(9),a)+1,len(a)),CHARINDEX(CHAR(9),SUBSTRING(a,CHARINDEX(CHAR(9),a)+1,len(a)))-1) 
--,LEFT(SUBSTRING(SUBSTRING(a,CHARINDEX(CHAR(9),a)+1,len(a)),CHARINDEX(CHAR(9),SUBSTRING(a,CHARINDEX(CHAR(9),a)+1,len(a)))+1,len(a)),CHARINDEX(CHAR(9),SUBSTRING(SUBSTRING(a,CHARINDEX(CHAR(9),a)+1,len(a)),CHARINDEX(CHAR(9),SUBSTRING(a,CHARINDEX(CHAR(9),a)+1,len(a)))+1,len(a)))-1) 
--,LEFT(SUBSTRING(SUBSTRING(SUBSTRING(a,CHARINDEX(CHAR(9),a)+1,len(a)),CHARINDEX(CHAR(9),SUBSTRING(a,CHARINDEX(CHAR(9),a)+1,len(a)))+1,len(a)),CHARINDEX(CHAR(9),SUBSTRING(SUBSTRING(a,CHARINDEX(CHAR(9),a)+1,len(a)),CHARINDEX(CHAR(9),SUBSTRING(a,CHARINDEX(CHAR(9),a)+1,len(a)))+1,len(a)))+1,len(a)),CHARINDEX(CHAR(9),SUBSTRING(SUBSTRING(SUBSTRING(a,CHARINDEX(CHAR(9),a)+1,len(a)),CHARINDEX(CHAR(9),SUBSTRING(a,CHARINDEX(CHAR(9),a)+1,len(a)))+1,len(a)),CHARINDEX(CHAR(9),SUBSTRING(SUBSTRING(a,CHARINDEX(CHAR(9),a)+1,len(a)),CHARINDEX(CHAR(9),SUBSTRING(a,CHARINDEX(CHAR(9),a)+1,len(a)))+1,len(a)))+1,len(a)))-1) 
--,SUBSTRING(SUBSTRING(SUBSTRING(SUBSTRING(a,CHARINDEX(CHAR(9),a)+1,len(a)),CHARINDEX(CHAR(9),SUBSTRING(a,CHARINDEX(CHAR(9),a)+1,len(a)))+1,len(a)),CHARINDEX(CHAR(9),SUBSTRING(SUBSTRING(a,CHARINDEX(CHAR(9),a)+1,len(a)),CHARINDEX(CHAR(9),SUBSTRING(a,CHARINDEX(CHAR(9),a)+1,len(a)))+1,len(a)))+1,len(a)),CHARINDEX(CHAR(9),SUBSTRING(SUBSTRING(SUBSTRING(a,CHARINDEX(CHAR(9),a)+1,len(a)),CHARINDEX(CHAR(9),SUBSTRING(a,CHARINDEX(CHAR(9),a)+1,len(a)))+1,len(a)),CHARINDEX(CHAR(9),SUBSTRING(SUBSTRING(a,CHARINDEX(CHAR(9),a)+1,len(a)),CHARINDEX(CHAR(9),SUBSTRING(a,CHARINDEX(CHAR(9),a)+1,len(a)))+1,len(a)))+1,len(a)))+1,len(a)) 
--from ztmpxls 
--where a!=''

insert into @tmp
select left(a,CHARINDEX(' ',a)-1) 
,LEFT(SUBSTRING(a,CHARINDEX(' ',a)+1,len(a)),CHARINDEX(' ',SUBSTRING(a,CHARINDEX(' ',a)+1,len(a)))-1) 
+' '+LEFT(SUBSTRING(SUBSTRING(a,CHARINDEX(' ',a)+1,len(a)),CHARINDEX(' ',SUBSTRING(a,CHARINDEX(' ',a)+1,len(a)))+1,len(a)),CHARINDEX(' ',SUBSTRING(SUBSTRING(a,CHARINDEX(' ',a)+1,len(a)),CHARINDEX(' ',SUBSTRING(a,CHARINDEX(' ',a)+1,len(a)))+1,len(a)))-1) 
,LEFT(SUBSTRING(SUBSTRING(SUBSTRING(a,CHARINDEX(' ',a)+1,len(a)),CHARINDEX(' ',SUBSTRING(a,CHARINDEX(' ',a)+1,len(a)))+1,len(a)),CHARINDEX(' ',SUBSTRING(SUBSTRING(a,CHARINDEX(' ',a)+1,len(a)),CHARINDEX(' ',SUBSTRING(a,CHARINDEX(' ',a)+1,len(a)))+1,len(a)))+1,len(a)),CHARINDEX(' ',SUBSTRING(SUBSTRING(SUBSTRING(a,CHARINDEX(' ',a)+1,len(a)),CHARINDEX(' ',SUBSTRING(a,CHARINDEX(' ',a)+1,len(a)))+1,len(a)),CHARINDEX(' ',SUBSTRING(SUBSTRING(a,CHARINDEX(' ',a)+1,len(a)),CHARINDEX(' ',SUBSTRING(a,CHARINDEX(' ',a)+1,len(a)))+1,len(a)))+1,len(a)))-1) 
,SUBSTRING(SUBSTRING(SUBSTRING(SUBSTRING(a,CHARINDEX(' ',a)+1,len(a)),CHARINDEX(' ',SUBSTRING(a,CHARINDEX(' ',a)+1,len(a)))+1,len(a)),CHARINDEX(' ',SUBSTRING(SUBSTRING(a,CHARINDEX(' ',a)+1,len(a)),CHARINDEX(' ',SUBSTRING(a,CHARINDEX(' ',a)+1,len(a)))+1,len(a)))+1,len(a)),CHARINDEX(' ',SUBSTRING(SUBSTRING(SUBSTRING(a,CHARINDEX(' ',a)+1,len(a)),CHARINDEX(' ',SUBSTRING(a,CHARINDEX(' ',a)+1,len(a)))+1,len(a)),CHARINDEX(' ',SUBSTRING(SUBSTRING(a,CHARINDEX(' ',a)+1,len(a)),CHARINDEX(' ',SUBSTRING(a,CHARINDEX(' ',a)+1,len(a)))+1,len(a)))+1,len(a)))+1,len(a)) 
from ztmpxls
where a!=''

--bbm
declare @bbm table(
		noa nvarchar(20),
		w133 float,
		w166 float,
		w100 float,
		mount float,
		holiday bit,
		workerno nvarchar(50),
		worker nvarchar(50)
)
--bbs
declare @bbs table(
		noa nvarchar(20),
		noq nvarchar(10),
		sssno nvarchar(20),
		namea nvarchar(50),
		clockin nvarchar(50),
		clockout nvarchar(50),
		w133 float,
		w166 float,
		w100 float,
		memo nvarchar(50),
		clockins nvarchar(50),
		clockouts nvarchar(50)
)

declare cursor_table cursor for
select left(timea,10) datea from @tmp group by left(timea,10) --匯入日期
open cursor_table
fetch next from cursor_table
into @datea
while(@@FETCH_STATUS <> -1)
begin
	set @t_weekday=DATEPART(WEEKDAY, @datea)-1
	--轉換日期
	set @t_date=right('00'+cast((CAST(LEFT(@datea,4) as int)-1911) as nvarchar(10)),3)
				+REPLACE(right(@datea,6),'-','/')
	--讀當天資料
	--select * from @tmp where left(c,10)=@datea--整天
	--e判斷上下班,避免沒按取當天最早時間當上班，最晚時間當下班
	--select * from @tmp where left(c,10)=@datea and e='0'--上班
	--select * from zsvaltmp where left(c,10)=@datea and e='1'--下班

	insert @bbs(noa,noq,sssno,namea,clockin,clockout,clockins,clockouts)
	select @t_date,(Rank() OVER (ORDER BY sssno)),sssno sssno,
	(select namea from sss  where noa=sssno union 
	select namea from driver where noa=sssno) namea
	,(select top 1 right(timea,8) from @tmp where left(timea,10)=@datea and sssno=a.sssno and (works='0' or works='3') order by timea )
	,(select top 1 right(timea,8) from @tmp where left(timea,10)=@datea and sssno=a.sssno and (works='1' or works='2') order by timea desc )
	,(select top 1 timea from @tmp where left(timea,10)=@datea and sssno=a.sssno and (works='0' or works='3') order by timea)
	,(select top 1 timea from @tmp where left(timea,10)=@datea and sssno=a.sssno and (works='1' or works='2') order by timea desc)
	--,right(MIN(timea),8) clockin,right(MAX(timea),8)clockout 
	--,MIN(timea),MAX(timea)
	from @tmp a where left(timea,10)=@datea and sssno!='' group by sssno
	
	--更新noq
	update @bbs set noq=right('000'+cast((select cast(isnull(MAX(noq),0)as int) from salpresents where noa=@t_date)+noq as nvarchar(10)),3)

	update @bbs
	set memo=''
	
	update @bbs
	set memo='外勤-晚 進'
	where clockin> @t_gowork
	and (select top 1 works from @tmp where sssno=sssno and clockins=timea)='3'
	
	update @bbs
	set memo=case when len(memo)>0 then memo+',外勤-早 退'else '外勤-早 退' end
	where round(cast(datediff(MINUTE,clockins,clockouts)-@t_rest as float)/60,1)<8
	and (select top 1 works from @tmp where sssno=sssno and clockouts=timea)='2'
	
	--遲到
	update @bbs
	set memo=case when len(memo)>0 then memo+',遲到' else '遲到' end
	where clockin>@t_gowork
	and not(@t_date in(select noa from holiday) or (@t_satday=1 and @t_weekday=6)or @t_weekday=0)
	and CHARINDEX('外勤-晚 進',memo)=0
	
	--早退
	update @bbs
	set memo=case when len(memo)>0 then memo+',早退' else '早退' end
	where clockout<@t_offwork
	and not(@t_date in(select noa from holiday) or (@t_satday=1 and @t_weekday=6)or @t_weekday=0)
	and CHARINDEX('外勤-早 退',memo)=0
	
	--備註有問題的打卡
	update @bbs
	set memo='打卡時間錯誤'
	where clockin=clockout
	
	--非假日加班計算	
	if(@t_work=1 and not(@t_date in(select noa from holiday) or (@t_satday=1 and @t_weekday=6) or @t_weekday=0))
	begin
		update @bbs
		set w133=round((cast(datediff(MINUTE,clockins,clockouts)-@t_rest as float)/60)-8,1)
		where sssno not in (select noa from driver)

		update @bbs
		set w133=0
		where w133<0
		
		update @bbs
		set w166=round(w133-2,1),w133=2
		where w133>2
	end
	if(@t_work=2 and not(@t_date in(select noa from holiday) or (@t_satday=1 and @t_weekday=6) or @t_weekday=0))
	begin
		update @bbs
		set w133=round((cast(datediff(MINUTE,left(clockouts,11)+@t_overtime,clockouts)as float)/60),1)
		where  sssno not in (select noa from driver)

		update @bbs
		set w133=0
		where w133<0
		
		update @bbs
		set w166=round(w133-2,1),w133=2
		where w133>2
	end
	--假日加班
	if(@t_date in(select noa from holiday) or (@t_satday=1 and @t_weekday=6) or @t_weekday=0)
	begin
		update @bbs
		set w100=round((cast(datediff(MINUTE,clockins,clockouts)-(case when clockin<'12:00:00' and clockout>'13:00:00' then 60 else 0 end) as float)/60),1)
		where sssno not in (select noa from driver)
		
		update @bbs
		set memo='假日加班'
		where isnull(clockins,'')!='' or isnull(clockouts,'')!=''
		and sssno not in (select noa from driver)
	end
	
	-------103/1/2 增加沒有打卡的員工----------1/7 假日不用加--------------------------------------
	if(not(@t_date in(select noa from holiday) or (@t_satday=1 and @t_weekday=6) or @t_weekday=0))
	begin
		insert @bbs(noa,noq,sssno,namea,memo)
		select @t_date,(Rank() OVER (ORDER BY noa)),noa,namea,'沒有打卡資料'
		from sss where noa not in (select sssno from @bbs) and isnull(outdate,'')='' 
		and typea!='雇主' and noa<'100000'
		and noa!='Z001'
	
		update @bbs
		set noq='XX'+noq
		
		update a
		set noq=b.noq2
		from @bbs a left join (select noa,sssno,(Rank() OVER (ORDER BY sssno))noq2 from @bbs where noa=@t_date)b
		on a.noa+'_'+a.sssno=b.noa+'_'+b.sssno
		where a.noa=@t_date
		
		update @bbs
		set noq=right('000'+noq,3)
	end
	-----------------------------------------------------------
	--103/1/15 司機要加進去(假日也要)

	insert @bbs(noa,noq,sssno,namea,memo)
	select @t_date,(Rank() OVER (ORDER BY c.noa)),c.noa,c.namea,'沒有打卡資料'
	from car2 a left join carteam b on a.carteamno=b.noa 
	left join driver c on a.driverno=c.noa 
	where a.cartype='2' and len( carno)=6 AND CHARINDEX( '-',carno) > 0 
	and len(outdate)=0 and len(suspdate)=0 
	and carno not in (select noa from carChange where len(enddate)>0 or len(wastedate)>0 or len(canceldate)>0)
	and a.carno not in (select carno from view_trans where carno in(select noa from car2 where cartype='2') 
	and datea=@t_date group by carno) and a.driverno!='' and c.noa not in (select sssno from @bbs)
	and len(c.mark)>0
	group by c.noa,c.namea

	update @bbs
	set noq='XX'+noq
		
	update a
	set noq=b.noq2
	from @bbs a left join (select noa,sssno,(Rank() OVER (ORDER BY sssno))noq2 from @bbs where noa=@t_date)b
	on a.noa+'_'+a.sssno=b.noa+'_'+b.sssno
	where a.noa=@t_date
		
	update @bbs
	set noq=right('000'+noq,3)
	
	------------------------------------------------------------
	
	insert @bbm
	select @t_date,SUM(w133),SUM(w166),SUM(w100),COUNT(*) 
	,case when @t_date in(select noa from holiday) then 1 
	when (@t_satday=1 and @t_weekday=6)or @t_weekday=0 then 1
	else 0 end,@workerno,@worker
	from @bbs
	
	--判斷是否有新增過
	if((select COUNT(*) from salpresent where noa=@t_date)=0)
	begin
		insert salpresent(noa,w133,w166,w100,mount,holiday,workerno,worker)
		select * from @bbm
		--新增bbs
		insert salpresents(noa,noq,sssno,namea,clockin,clockout,w133,w166,w100,memo)
		select noa,noq,sssno,namea,clockin,clockout,w133,w166,w100,memo from @bbs 
	end
	else
	begin
		--更新bbs
		--目前有的上班時間比更新時間早
		update b
		set b.namea=a.namea,b.clockin=a.clockin
		,b.memo=(case when charindex('外勤-晚 進',b.memo)>0 then a.memo+REPLACE(b.memo,'外勤-晚 進','') 
		when charindex('遲到',b.memo)>0 then a.memo+REPLACE(b.memo,'遲到','') else a.memo+' '+b.memo end)
		from @bbs a left join salpresents b on a.noa=b.noa and a.sssno=b.sssno
		where b.noa!='' and b.sssno!='' and a.clockin!='' and a.clockin<= (case when isnull(b.clockin,'99:99:99')='' then '99:99:99' else isnull(b.clockin,'99:99:99') end)
		--目前有的下班時間比更新時間晚
		update b
		set b.namea=a.namea,b.clockout=a.clockout
		,b.memo=(case when charindex('外勤-早 退',b.memo)>0 then a.memo+REPLACE(b.memo,'外勤-早 退','') 
		when charindex('早退',b.memo)>0 then a.memo+REPLACE(b.memo,'早退','') else REPLACE(REPLACE(a.memo,'外勤-晚 進',''),'遲到','')+' '+b.memo end)
		from @bbs a left join salpresents b on a.noa=b.noa and a.sssno=b.sssno
		where b.noa!='' and b.sssno!='' and a.clockout!='' and a.clockout>=(case when isnull(b.clockout,'00:00:00')='' then '00:00:00' else isnull(b.clockout,'00:00:00') end)
		
		--當有更新打卡時間時將之前沒有打卡紀錄的備註拿掉
		update salpresents
		set memo=REPLACE(memo,'沒有打卡資料','')
		where isnull(clockin,'')!='' or isnull(clockout,'')!=''
		
		--新增bbs(不存在的)
		insert salpresents(noa,noq,sssno,namea,clockin,clockout,w133,w166,w100,memo)
		select noa,'x'+noq,sssno,namea,clockin,clockout,w133,w166,w100,memo from @bbs 
		where noa+'_'+sssno not in (select noa+'_'+sssno from salpresents)
		
		--重新計算加班時間
		
		--非假日加班計算	
		if(@t_work=1 and not(@t_date in(select noa from holiday) or (@t_satday=1 and @t_weekday=6) or @t_weekday=0))
		begin
			update salpresents
			set w133=round((cast(datediff(MINUTE,@datea+' '+clockin,@datea+' '+clockout)-@t_rest as float)/60)-8,1)
			where noa=@t_date and sssno not in (select noa from driver)
			
			update salpresents
			set w133=0
			where w133<0 and noa=@t_date
			
			update salpresents
			set w166=round(w133-2,1),w133=2
			where w133>2 and noa=@t_date
		end
		if(@t_work=2 and not(@t_date in(select noa from holiday) or (@t_satday=1 and @t_weekday=6) or @t_weekday=0))
		begin
			update salpresents
			set w133=round((cast(datediff(MINUTE,left(@datea+' '+clockout,11)+@t_overtime,@datea+' '+clockout)as float)/60),1)
			where noa=@t_date and sssno not in (select noa from driver)

			update salpresents
			set w133=0
			where w133<0 and noa=@t_date
			
			update salpresents
			set w166=round(w133-2,1),w133=2
			where w133>2 and noa=@t_date
		end
		--假日加班
		if(@t_date in(select noa from holiday) or (@t_satday=1 and @t_weekday=6) or @t_weekday=0)
		begin
			update salpresents
			set w100=round((cast(datediff(MINUTE,@datea+' '+clockin,@datea+' '+clockout)-(case when clockin<'12:00:00' and clockout>'13:00:00' then 60 else 0 end) as float)/60),1)
			where noa=@t_date and sssno not in (select noa from driver)
			
			update salpresents
			set memo='假日加班'
			where noa=@t_date and (isnull(clockin,'')!='' or isnull(clockout,'')!='')
			and sssno not in (select noa from driver)
		end
		
		
		--更新bbm
		update a
		set w100=isnull((select sum(w100) from salpresents where noa=a.noa),0)
		,w133=isnull((select sum(w133) from salpresents where noa=a.noa),0)
		,w166=isnull((select sum(w166) from salpresents where noa=a.noa),0)
		,mount=isnull((select count(*) from salpresents where noa=a.noa),0)
		from salpresent a
		where a.noa=@t_date

		--更新排序順序
		update salpresents
		set noq='XX'+noq
		where noa=@t_date
		
		update a
		set noq=b.noq2
		from salpresents a left join (select noa,sssno,(Rank() OVER (ORDER BY sssno))noq2 from salpresents where noa=@t_date)b
		on a.noa+'_'+a.sssno=b.noa+'_'+b.sssno
		where a.noa=@t_date
		
		update salpresents
		set noq=right('000'+noq,3)
		where noa=@t_date
	
	end
	
	delete @bbm
	delete @bbs
	
	fetch next from cursor_table
	into @datea
end
close cursor_table
deallocate cursor_table


--新增外勤--暫不寫入
--declare @tbbm table(
--		noa nvarchar(20),
--		datea nvarchar(50),
--		sssno nvarchar(50),
--		namea nvarchar(50),
--		partno nvarchar(50),
--		part nvarchar(50),
--		worker nvarchar(50)
--)
--declare @tbbs table(
--		noa nvarchar(20),
--		noq nvarchar(50),
--		datea nvarchar(50),
--		sssno nvarchar(50),
--		btime nvarchar(50),
--		etime nvarchar(50)
--)

--declare @sssno nvarchar(MAX)
--declare @noano int
--declare @timea nvarchar(MAX)
--declare @works nvarchar(MAX)
--declare @t_works nvarchar(MAX)
--declare @tnoq int

--declare cursor_table cursor for
--select left(timea,10) datea from @tmp where works='2' or works='3' group by left(timea,10) --匯入日期
--open cursor_table
--fetch next from cursor_table
--into @datea
--while(@@FETCH_STATUS <> -1)
--begin
--	set @t_date=right('00'+cast((CAST(LEFT(@datea,4) as int)-1911) as nvarchar(10)),3)
--				+REPLACE(right(@datea,6),'-','/')
				
--	set @noano=isnull((select top 1 right(noa,3) from trip where left(noa,7)=REPLACE(@t_date,'/','') order by noa desc),0) --取當天最後一筆noa
--	------------------------------------
--	declare cursor_tables cursor for
--	select sssno from @tmp where (works='2' or works='3') and left(timea,10)=@datea group by sssno order by sssno
--	open cursor_tables
--	fetch next from cursor_tables
--	into @sssno
--	while(@@FETCH_STATUS <> -1)
--	begin
--		set @noano=@noano+1
--		insert @tbbm
--		select REPLACE(@t_date,'/','')+right('000'+cast(@noano as nvarchar(10)),3) noa,@t_date datea,@sssno sssno
--		,(select namea from sss where noa=@sssno)namea,(select partno from sss where noa=@sssno),(select part from sss where noa=@sssno) part,@worker
--		set @t_works='0'
--		set @tnoq=1
--		----------------------------------------------------------------------
--		declare cursor_tabless cursor for
--		select timea,works from @tmp where (works='2' or works='3') and left(timea,10)=@datea and sssno=@sssno order by timea
--		open cursor_tabless
--		fetch next from cursor_tabless
--		into @timea,@works
--		while(@@FETCH_STATUS <> -1)
--		begin
--			if(@t_works='0')--第一筆
--			begin
--				if(@works='2')
--				begin
--					insert @tbbs
--					select REPLACE(@t_date,'/','')+right('000'+cast(@noano as nvarchar(10)),3) noa
--					,right('000'+CAST(@tnoq as nvarchar(10)),3)noq,@t_date,@sssno,left(RIGHT(@timea,8),5),''
--				end
--				else
--				begin --出勤晚到
--					insert @tbbs
--					select REPLACE(@t_date,'/','')+right('000'+cast(@noano as nvarchar(10)),3) noa
--					,right('000'+CAST(@tnoq as nvarchar(10)),3)noq,@t_date,@sssno,'',left(RIGHT(@timea,8),5)
--				end
--			end
--			else
--			begin
--				if(@t_works='2' and @works='3') --正常出勤
--				begin
--					set @tnoq=@tnoq-1
--					update @tbbs
--					set etime=left(RIGHT(@timea,8),5)
--					where noq=right('000'+CAST(@tnoq as nvarchar(10)),3)
--				end
--				else
--				begin
--					if(@works='2')
--					begin
--						insert @tbbs
--						select REPLACE(@t_date,'/','')+right('000'+cast(@noano as nvarchar(10)),3) noa
--						,right('000'+CAST(@tnoq as nvarchar(10)),3)noq,@t_date,@sssno,left(RIGHT(@timea,8),5),''
--					end
--					else
--					begin
--						insert @tbbs
--						select REPLACE(@t_date,'/','')+right('000'+cast(@noano as nvarchar(10)),3) noa
--						,right('000'+CAST(@tnoq as nvarchar(10)),3)noq,@t_date,@sssno,'',left(RIGHT(@timea,8),5)
--					end
--				end
--			end
--			set @tnoq=@tnoq+1
--			set @t_works=@works
--			fetch next from cursor_tabless
--			into @timea,@works
--		end
--		close cursor_tabless
--		deallocate cursor_tabless
		
--		------------------------------------------------------------------------
--		insert into trip(noa,datea,sssno,namea,partno,part,worker,memo)
--		select *,'指紋機匯入' from @tbbm
--		insert into trips(noa,noq,datea,sssno,btime,etime)
--		select * from @tbbs
--		delete @tbbm
--		delete @tbbs
		
--		fetch next from cursor_tables
--		into @sssno
--	end
--	close cursor_tables
--	deallocate cursor_tables
--	------------------------------------------------------

--	fetch next from cursor_table
--	into @datea
--end
--close cursor_table
--deallocate cursor_table
;