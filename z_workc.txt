z_workc1:--z_workc1
declare @t_btggno nvarchar(20)
declare @t_etggno nvarchar(20)
set @t_btggno = case when '#non' = [5] then '' else [5] end
set @t_etggno = case when '#non' = [6] then CHAR(255) else [6] end
declare @tmp table(
	gno nvarchar(1),
	tggno nvarchar(30),
	comp nvarchar(90),
	productno nvarchar(30),
	products nvarchar(90),
	workmount float,
	workcmount float,
	total float
)
insert into @tmp
	select
		'0',b.tggno,b.comp,a.productno,a.product,isnull(sum(a.mount),0),isnull(sum(c.mount),0),0
	from works[1] a
	left join work[1] b on a.noa = b.noa
	left join (
		select b.workno,b.productno,sum(a.mount) mount from workcs[1] a 
		left join workc[1] b on a.noa = b.noa
		group by b.workno,b.productno
	) c on b.noa = c.workno
	where (b.tggno != '') and (b.tggno between @t_btggno and @t_etggno)
	group by b.tggno,b.comp,a.productno,a.product
update @tmp set total = workmount-workcmount
insert into @tmp(gno,tggno,comp,workmount,workcmount,total)
	select '1',tggno,comp,sum(workmount),sum(workcmount),sum(total)
	from @tmp
	group by tggno,comp
select * from @tmp;
--------------------------------------------------------------------------------------------------------
z_workc2:--z_workc2
declare @t_btggno nvarchar(20)
declare @t_etggno nvarchar(20)
set @t_btggno = case when '#non' = [5] then '' else [5] end
set @t_etggno = case when '#non' = [6] then CHAR(255) else [6] end
declare @tmp table(
	gno nvarchar(1),
	noa nvarchar(30),
	datea nvarchar(10),
	tgg nvarchar(90),
	productno nvarchar(30),
	products nvarchar(90),
	amount float,
	unit nvarchar(12),
	ainmount float,
	p_inmount float,
	cuadate nvarchar(10),
	workdate nvarchar(10),
	uindate nvarchar(10),
	enddate nvarchar(10),
	diffdate int,
	ordeno nvarchar(30),
	station nvarchar(50)
)
insert into @tmp
	select
		'0',a.noa,a.datea,a.tgg,a.productno,a.product,b.mount,b.unit,b.inmount,
		case when b.mount >0 then round((b.inmount/b.mount)*100,2) else 0 end,
		b.cuadate,b.workdate,b.uindate,b.enddate,
		DATEDIFF(day,CONVERT(datetime,(cast((left(b.cuadate,3)+1911) as nvarchar)+right(b.cuadate,6))),
					CONVERT(datetime,(cast((left(b.workdate,3)+1911) as nvarchar)+right(b.workdate,6)))) diffdate,
		b.ordeno,b.station
	from workc[1] a
	left join work[1] b on a.workno = b.noa
	where a.tggno between @t_btggno and @t_etggno
select * from @tmp;
--------------------------------------------------------------------------------------------------------
z_workc3:--z_workc3
declare @t_btggno nvarchar(20)
declare @t_etggno nvarchar(20)
set @t_btggno = case when '#non' = [5] then '' else [5] end
set @t_etggno = case when '#non' = [6] then CHAR(255) else [6] end
declare @tmp table(
	gno nvarchar(1),
	anoa nvarchar(30),
	adatea nvarchar(10),
	atgg nvarchar(90),
	bproductno nvarchar(30),
	bproducts nvarchar(90),
	bunit nvarchar(12),
	bmount float,
	binmount float,
	bpinmount float,
	brmount float,
	bprmount float,
	bcuadate nvarchar(10),
	bworkdate nvarchar(10),
	buindate nvarchar(10),
	benddate nvarchar(10),
	bordeno nvarchar(30)
)
insert into @tmp 
select
	'0',a.noa,a.datea,a.tgg,b.productno,b.product,b.unit,b.mount,
	b.inmount,case when b.mount >0 then round((b.inmount/b.mount)*100,2) else 0 end,
	b.rmount,case when b.mount >0 then round((b.rmount/b.mount)*100,2) else 0 end,
	b.cuadate,b.workdate,b.uindate,b.enddate,b.ordeno
from workc[1] a
left join work[1] b on a.workno = b.noa
where a.tggno between @t_btggno and @t_etggno
select * from @tmp;
--------------------------------------------------------------------------------------------------------
z_workc4:--z_workc4
declare @t_btggno nvarchar(20)
declare @t_etggno nvarchar(20)
set @t_btggno = case when '#non' = [5] then '' else [5] end
set @t_etggno = case when '#non' = [6] then CHAR(255) else [6] end
declare @tmp table(
	gno nvarchar(1),
	productno nvarchar(30),
	products nvarchar(90),
	amount float,
	unit nvarchar(12),
	inmount float,
	rmount float,
	errmount float,
	process nvarchar(30)
)
insert into @tmp
	select
		'0',a.productno,a.product,sum(a.mount),a.unit,sum(a.inmount),sum(a.rmount),sum(a.errmount),a.process
	from work[1] a
	where a.tggno != '' and (a.tggno between @t_btggno and @t_etggno)
	group by a.productno,a.product,a.unit,a.process
select * from @tmp;
--------------------------------------------------------------------------------------------------------
z_workc5:--z_workc5
declare @t_bdate nvarchar(20)
declare @t_edate nvarchar(20)
declare @t_btggno nvarchar(20)
declare @t_etggno nvarchar(20)
set @t_btggno = case when '#non' = [5] then '' else [5] end
set @t_etggno = case when '#non' = [6] then CHAR(255) else [6] end
set @t_bdate = case when '#non' = [3] then '' else [3] end
set @t_edate = case when '#non' = [4] then CHAR(255) else [4] end
declare @tmp table(
	gno nvarchar(1),
	tgg nvarchar(90),
	noa nvarchar(30),
	datea nvarchar(10),
	productno nvarchar(30),
	products nvarchar(90),
	mount float,
	unit nvarchar(12),
	cuadate nvarchar(10),
	uindate nvarchar(10),
	ordeno nvarchar(30)
)
insert into @tmp
select
	'0',a.tgg,a.noa,a.datea,a.productno,a.product,a.mount,
	b.unit,b.cuadate,b.uindate,a.ordeno
from workc[1] a
left join work[1] b on a.workno = b.noa
where (a.datea between @t_bdate and @t_edate) and (a.tggno between @t_btggno and @t_etggno)
select * from @tmp;
--------------------------------------------------------------------------------------------------------
z_workc6:--z_workc6
declare @t_noa nvarchar(30)
declare @t_bdate nvarchar(20)
declare @t_edate nvarchar(20)
declare @t_btggno nvarchar(20)
declare @t_etggno nvarchar(20)
set @t_noa = case when '#non' = [2] then '' else [2] end
set @t_bdate = case when '#non' = [3] then '' else [3] end
set @t_edate = case when '#non' = [4] then CHAR(255) else [4] end
set @t_btggno = case when '#non' = [5] then '' else [5] end
set @t_etggno = case when '#non' = [6] then CHAR(255) else [6] end
declare @tmp table(
	gno nvarchar(1),
	workcno nvarchar(30),
	productno nvarchar(30),
	products nvarchar(90),
	unit nvarchar(12),
	inmount float,
	errmount float,
	memo nvarchar(max)
)
insert into @tmp
	select
		'0',b.workcno,a.productno,a.product,a.unit,a.mount,a.errmount,a.errmemo
	from workds[1] a
	left join workd[1] b on a.noa = b.noa
	left join workc[1] c on b.workcno = c.noa
	where (a.errmount > 0 or isnull(a.errmount,'') != '') and
		  (len(@t_noa) =0 or (@t_noa = b.workcno)) and
		  (c.datea between @t_bdate and @t_edate) and
		  (c.tggno between @t_btggno and @t_etggno)
select
	gno,workcno,productno,products,unit,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,inmount),1)),4,12)) inmount,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,errmount),1)),4,12)) errmount,memo
from @tmp;
---------------------------------------------------------------------------------------------------------
z_workc7:--z_workc7
declare @t_bdate nvarchar(20)
declare @t_edate nvarchar(20)
set @t_bdate = case when '#non' = [3] then '' else [3] end
set @t_edate = case when '#non' = [4] then CHAR(255) else [4] end
---------------------------------------------------
declare @tmp table(
		gno nvarchar(1),
		noa nvarchar(20),------委外單號
		noq nvarchar(20),
		datea nvarchar(30),----委外日期
		aproductno nvarchar(20),-----製品編號(bbm)
		aproduct nvarchar(50),-------製品(bbm)
		c nvarchar(30),
		mount float,-----------------生產數量
		inmount float,--------------已入庫量
		bproductno nvarchar(20),-----子件編號
		bproduct nvarchar(50),-------子件名稱
		cuadatez nvarchar(20),-------需求日期
		bmount float,----------------需求數量
		bunit nvarchar(20),----------單位
		gmount float,----------------已領料量
		emount float,----------------未領料量
		stkmount float,--------------庫存量
		s_mount float,---------------缺料量
		e_mount float----------------在途未進量
)
insert into @tmp
select '0' gno,a.noa,b.noq,a.datea,a.productno,a.product,c.workcno,isnull(d.born,0),isnull(d.mount,0),
e.productno,e.product,e.cuadate,e.mount,e.unit,b.mount,e.emount,0,0,0
from workc[1] a
left join workcs[1] b on a.noa = b.noa
left join workd[1] c on c.workcno = b.noa 
left join workds[1] d on c.noa = d.noa and d.productno = b.productno
left join works[1] e on e.noa = a.workno and e.productno = b.productno
where (isnull(a.datea,'') between @t_bdate and @t_edate) 

select gno,noa,noq,datea,aproductno,aproduct,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,mount),1)),4,12)) mount,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,inmount),1)),4,12)) inmount,
bproductno,bproduct,cuadatez,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,bmount),1)),4,12)) bmount,
bunit,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,gmount),1)),4,12)) gmount,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,emount),1)),4,12)) emount,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,stkmount),1)),4,12)) stkmount,
0 s_mount,0 e_mount
from @tmp;

---------------------------------------------------------------------------------------------------------
z_workc8:--z_workc8
declare @t_bdate nvarchar(20)
declare @t_edate nvarchar(20)
set @t_bdate = case when '#non' = [3] then '' else [3] end
set @t_edate = case when '#non' = [4] then CHAR(255) else [4] end
declare @tmp table(
	gno nvarchar(1),
	adatea nvarchar(10),
	ordenoa nvarchar(30),
	ordeno2 nvarchar(10),
	stationno nvarchar(30),
	stations nvarchar(90),
	process nvarchar(50),
	anoa nvarchar(30),
	anoq nvarchar(10),
	aproductno nvarchar(30),
	aproducts nvarchar(90),
	unit nvarchar(12),
	amount float,
	inmount float,
	todaymount float,
	finishmount float,
	notmount float
)
insert into @tmp
	select
		'0',b.datea,a.ordeno,a.no2,d.stationno,d.station,d.process,b.workcno,a.noq,a.productno,a.product,a.unit,a.born,a.mount,(a.mount+a.errmount),
		0,0
	from workds[1] a
	left join workd[1] b on a.noa = b.noa
	left join workc[1] c on b.workcno = c.noa
	left join work[1] d on c.workno = d.noa
	where (b.datea between @t_bdate and @t_edate)
	order by b.datea
update @tmp set finishmount = (select (sum(a.mount)+sum(a.errmount)) from workds[1] a
											left join workd[1] b on a.noa = b.noa
											where (a.ordeno = ordenoa) and (a.no2 = ordeno2) and (b.datea <=adatea)
											and (a.productno = aproductno)
											)
update @tmp set notmount = amount - finishmount
insert into @tmp(gno,adatea)
	select '1',adatea from @tmp group by adatea
select
	gno,adatea,stationno,stations,process,anoa,anoq,aproductno,aproducts,unit,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,amount),1)),4,12)) amount,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,inmount),1)),4,12)) inmount,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,todaymount),1)),4,12)) todaymount,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,finishmount),1)),4,12)) finishmount,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,notmount),1)),4,12)) notmount
from @tmp order by adatea,gno,stationno,process,aproductno;
---------------------------------------------------------------------------------------------------------
z_workc9:--z_workc9
declare @t_noa nvarchar(30)
declare @t_bdate nvarchar(20)
declare @t_edate nvarchar(20)
declare @t_btggno nvarchar(20)
declare @t_etggno nvarchar(20)
declare @t_bproductno nvarchar(20)
declare @t_eproductno nvarchar(20)
set @t_noa = case when '#non' = [2] then '' else [2] end
set @t_bdate = case when '#non' = [3] then '' else [3] end
set @t_edate = case when '#non' = [4] then CHAR(255) else [4] end
set @t_btggno = case when '#non' = [5] then '' else [5] end
set @t_etggno = case when '#non' = [6] then CHAR(255) else [6] end
set @t_bproductno = case when '#non' = [7] then '' else [7] end
set @t_eproductno = case when '#non' = [8] then CHAR(255) else [8] end
declare @tmp table(
	gno nvarchar(1),
	datea nvarchar(10),
	aproductno nvarchar(30),
	aproducts nvarchar(50),
	tggno nvarchar(30),
	tggs nvarchar(90),
	noa nvarchar(30),
	bproductno nvarchar(30),
	bproducts nvarchar(50),
	workno nvarchar(30),
	typea nvarchar(15),
	mount float,
	unit nvarchar(15),
	storeno nvarchar(30),
	stores nvarchar(50)
)
insert into @tmp
	select 
		'0',b.datea,a.productno,a.product,b.tggno,b.tgg,b.noa,a.productno,a.product,b.workno,
		b.typea,a.mount,a.unit,b.storeno,b.store
	from workcs[1] a
	left join workc[1] b on a.noa = b.noa
	where (len(@t_noa) = 0 or b.noa = @t_noa) and
		  (b.datea between @t_bdate and @t_edate) and
		  (b.tggno between @t_btggno and @t_etggno)
	order by b.datea
update @tmp set typea = (case typea when '1' then '發料' when '2' then '退料' end)
select
	gno,datea,aproductno,aproducts,tggno,tggs,noa,bproductno,bproducts,workno,typea,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,mount),1)),4,12)) mount,
	unit,storeno,stores
from @tmp order by datea,noa,tggno,aproductno,bproductno;
---------------------------------------------------------------------------------------------------------
z_workc10:--z_workc10
declare @t_noa nvarchar(30)
declare @t_bdate nvarchar(20)
declare @t_edate nvarchar(20)
set @t_noa = case when '#non' = [2] then '' else [2] end
set @t_bdate = case when '#non' = [3] then '' else [3] end
set @t_edate = case when '#non' = [4] then CHAR(255) else [4] end

declare @tmp table(
	gno nvarchar(1),
	noa nvarchar(30),
	noq nvarchar(10),
	aproductno nvarchar(30),
	aproducts nvarchar(90),
	amount float,
	ainmount float,
	aunit nvarchar(12),
	uindate nvarchar(10),
	enddate nvarchar(10),
	bproductno nvarchar(30),
	bproducts nvarchar(90),
	bunit nvarchar(12),
	bmount float,
	binmount float,
	s_total float,
	price float
)
insert into @tmp
	select
		'0',a.noa,a.noq,b.productno,b.product,c.workmount,c.inmount,c.workunit,c.uindate,c.enddate,a.productno,a.product,
		a.unit,c.worksmount,a.mount,0,0
	from workcs[1] a
	left join workc[1] b on a.noa = b.noa
	left join (
		select
			b.noa,a.noq,b.mount workmount,b.inmount,b.unit workunit,b.uindate,
			b.enddate,a.productno,a.product,a.unit worksunit,a.mount worksmount,
			d.price
		from works[1] a 
		left join work[1] b on a.noa = b.noa
		left join ordbs[1] c on (b.ordeno = c.noa) and (b.no2 = c.no2)
		left join ordcs[1] d on (c.noa = d.ordbno) and (c.no3 = d.no3)
	) c on (b.workno = c.noa) and (a.productno = c.productno) and (a.unit = c.worksunit)
	where (len(@t_noa) = 0 or b.noa = @t_noa) and
		  (b.datea between @t_bdate and @t_edate)

update @tmp set s_total = (binmount-bmount) where (binmount-bmount) > 0
select
	gno,noa,noq,aproductno,aproducts,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,amount),1)),4,12)) amount,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,ainmount),1)),4,12)) ainmount,
	aunit,uindate,enddate,bproductno,bproducts,bunit,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,bmount),1)),4,12)) bmount,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,binmount),1)),4,12)) binmount,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,s_total),1)),4,12)) s_total,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,price),1)),4,12)) price
from @tmp order by noa,noq,aproductno,bproductno;
---------------------------------------------------------------------------------------------------------
z_workc11:--z_workc11
declare @t_noa nvarchar(30)
declare @t_bdate nvarchar(20)
declare @t_edate nvarchar(20)
set @t_noa = case when '#non' = [2] then '' else [2] end
set @t_bdate = case when '#non' = [3] then '' else [3] end
set @t_edate = case when '#non' = [4] then CHAR(255) else [4] end
declare @tmp table(
	gno nvarchar(1),
	productno nvarchar(30),
	products nvarchar(90),
	unit nvarchar(12),
	needmount float,
	stkmount float,
	uinmount float,
	uoutmount float,
	y_mount float,
	n_mount float
)
insert into @tmp
	select
		'0',a.productno,a.product,a.unit,sum(d.mount),sum(isnull(e.lastmount,0)),
		sum(isnull(f.mount,0)),sum(isnull(g.mount,0)),0,0
	from workcs[1] a
	left join workc[1] b on a.noa = b.noa
	left join work[1] c on b.workno = c.noa
	left join works[1] d on (c.noa = d.noa) and (a.productno = d.productno) and (a.unit = d.unit)
	left join calstk e on (a.productno = e.productno) and (e.datea = d.cuadate)
	left join (
		select b.odate,a.productno,a.mount from ordcs[1] a
		left join ordc[1] b on a.noa = b.noa
	) f on (f.productno = e.productno) and e.datea <= f.odate
	left join (
		select b.odate,a.productno,a.mount from ordes[1] a 
		left join orde[1] b on a.noa = b.noa
	) g on (g.productno = e.productno) and e.datea <= g.odate
	where (len(@t_noa) = 0 or b.noa = @t_noa) and
		  (b.datea between @t_bdate and @t_edate)
	group by a.productno,a.product,a.unit
update @tmp set y_mount = (stkmount+uinmount-uoutmount)
update @tmp set n_mount = case when (needmount-y_mount) > 0 then (needmount-y_mount) else 0 end
select
	gno,productno,products,unit,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,needmount),1)),4,12)) needmount,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,stkmount),1)),4,12)) stkmount,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,uinmount),1)),4,12)) uinmount,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,uoutmount),1)),4,12)) uoutmount,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,y_mount),1)),4,12)) y_mount,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,n_mount),1)),4,12)) n_mount
from @tmp;

z_tb:--z_tb
	declare @t_bdate nvarchar(10)
	declare @t_edate nvarchar(10)
	declare @t_bproductno nvarchar(30)
	declare @t_eproductno nvarchar(30)
	set @t_bdate = case when '#non'=[3] then '' else [3] end
	set @t_edate = case when '#non'=[4] then char(255) else [4] end
	set @t_bproductno = case when '#non'=[9] then '' else [9] end
	set @t_eproductno = case when '#non'=[10] then char(255) else [10] end

	declare @result table(
		gno nvarchar(1),
		recno int,
		productno nvarchar(30),
		xproduct nvarchar(40),
		datea nvarchar(10),
		typea nvarchar(10),
		typec nvarchar(10),
		noa nvarchar(20),
		comp nvarchar(40),
		unit nvarchar(10),
		mount decimal(16,2),
		weight decimal(16,2),
		totmount decimal(18,2),
		totweight decimal(18,2)
		primary key (productno,recno) 
	)
	insert into @result
	select
		'0' gno, ROW_NUMBER()over(order by productno,datea,typea)as recno,R1.*, 0 totmount, 0 totweight
	from(
		select noa productno,product xproduct,isnull(datea,'') datea,'01' typea,'期初' typec, 
		       '' noa,'' comp, unit, start mount, start weight
		from ucc[1] 
		where  noa BETWEEN @t_bproductno AND @t_eproductno and datea<=@t_edate
		union
		select noa productno,product xproduct,isnull(datea,'') datea,'02' typea,'盤點' typec, 
		       noa,'' comp, unit, adjmount mount, adjweight weight
		from ucces[1]
		where  noa BETWEEN @t_bproductno AND @t_eproductno and datea<=@t_edate
		union
		select b.productno,b.product xproduct,isnull(b.datea,'') datea,case a.typea when '退' then 'A0' else '10' end typea,case a.typea when '退' then '進退' else '進貨' end typec,
		       b.noa, isNull(a.comp,'') comp, b.unit, b.mount, b.weight
		from rc2s[1] b left join rc2[1] a on a.noa=b.noa
		where b.productno BETWEEN @t_bproductno AND @t_eproductno and b.datea<=@t_edate
		union
		select b.productno,b.product xproduct,isnull(b.datea,'') datea,case a.typea when '退' then '11' else 'B0' end typea,case a.typea when '退' then '出退' else '出貨' end typec,
		       b.noa, isNull(a.comp,'') comp, b.unit, b.mount, b.weight
		from vccs[1] b left join vcc[1] a on a.noa=b.noa
		where b.productno BETWEEN @t_bproductno AND @t_eproductno and b.datea<=@t_edate
		union
		select productno,product xproduct,isnull(datea,'') datea, '12' typea, '入庫' typec,
		       noa, '' comp, unit, mount, weight
		from inas[1]
		where productno BETWEEN @t_bproductno AND @t_eproductno and datea<=@t_edate
		union
		select productno,product xproduct,isnull(datea,'') datea, 'C0' typea, '領料' typec,
		       noa, '' comp, unit, mount, weight
		from gets[1]
		where productno BETWEEN @t_bproductno AND @t_eproductno and datea<=@t_edate
		) as R1

	--*****************************************************************************************	
	declare @recno int
	declare @productno nvarchar(30)
	declare @typea nvarchar(10)
	declare @datea nvarchar(10)
	declare @mount decimal(18,2)
	declare @weight decimal(18,2)
	
	declare @t_productno nvarchar(30)
	declare @t_mount decimal(18,2)
	declare @t_weight decimal(18,2)
	declare @t_totmount decimal(18,2)
	declare @t_totweight decimal(18,2)
	set @t_productno = '@#S(DJ#SH!@'
	set @t_mount = 0
	set @t_weight = 0
	set @t_totmount = 0
	set @t_totweight = 0
	
	declare cursor_table cursor for
	select recno,productno,typea,datea,mount,weight from @result order by productno,recno
	open cursor_table
	fetch next from cursor_table
	into @recno,@productno,@typea,@datea,@mount,@weight
	while(@@FETCH_STATUS <> -1)
	begin
		if @t_productno!=@productno and @t_productno!='@#S(DJ#SH!@'
		begin
			insert into @result
			select '1' gno,-1 recno,@t_productno,'' xproduct,'' datea,'zz' typea,'小計' typec, 
				   '' noa,'' comp, '' unit, @t_mount mount, @t_weight weight, @t_totmount totmount, @t_totweight totweight
		end
		if @t_productno!=@productno
		begin
			set @t_productno = @productno
			set @t_mount = 0
			set @t_weight = 0
			set @t_totmount = 0
			set @t_totweight = 0
		end
		if  @datea between @t_bdate and @t_edate
		begin
			set @t_mount =
				case 
				when @typea='01' or @typea='02' then @mount
				when @typea='10' or @typea='11' or @typea='12' then @t_mount + @mount
				when @typea='A0' or @typea='B0' or @typea='C0' then @t_mount - @mount
				end
			set @t_weight =
				case 
				when @typea='01' or @typea='02' then @weight
				when @typea='10' or @typea='11' or @typea='12' then @t_weight + @weight
				when @typea='A0' or @typea='B0' or @typea='C0' then @t_weight - @weight
				end
		end
		set @t_totmount =
			case 
			when @typea='01' or @typea='02' then @mount
			when @typea='10' or @typea='11' or @typea='12' then @t_totmount + @mount
			when @typea='A0' or @typea='B0' or @typea='C0' then @t_totmount - @mount
			end
		set @t_totweight =
			case 
			when @typea='01' or @typea='02' then @weight
			when @typea='10' or @typea='11' or @typea='12' then @t_totweight + @weight
			when @typea='A0' or @typea='B0' or @typea='C0' then @t_totweight - @weight
			end
		
		update @result set totmount = @t_totmount, totweight = @t_totweight where productno=@productno and recno=@recno

		fetch next from cursor_table
		into @recno,@productno,@typea,@datea,@mount,@weight
	end
	close cursor_table
	deallocate cursor_table
	if @t_productno!='@#S(DJ#SH!@'
	begin
		insert into @result
		select '1' gno,-1 recno,@t_productno,'' xproduct,'' datea,'zz' typea,'小計' typec, 
			   '' noa,'' comp, '' unit, @t_mount mount, @t_weight weight, @t_totmount totmount, @t_totweight totweigh
	end
	--*****************************************************************************************	
	select * from @result where gno='1' or (gno='0' and datea between @t_bdate and @t_edate) order by productno, gno, recno;