z_ucap1:--z_ucap1
declare @productno nvarchar(50)
declare @parent nvarchar(20) 
declare @t_mon nvarchar(20)
declare @t_isprice nvarchar(20)
set @t_mon = case when '#non' = [5] then '' else [5] end
set @productno = case when '#non'=[2] then '' else [2] end
set @t_isprice = case when '#non'=[9] then '' else [9] end
set @parent='root'
declare @tmp table( 
	productno nvarchar(MAX), 
	product nvarchar(MAX), 
	parent nvarchar(MAX), 
	mount float,
	dividea int,
	price float,
	costb float,--人工
	costc float,--製造費用
	costd float
) 
insert into @tmp 
	select productno,product,noa,mount,dividea,isnull((select price from view_costs where mon=@t_mon and productno=a.productno),0)
	,isnull((select wages*hours from uca where noa= a.productno),0)
	,isnull((select makes*hours from uca where noa= a.productno),0)
	,isnull((select price from uca where noa= a.productno),0)
	from ucas a
if(PATINDEX('%.%',@productno)>0) 
begin 
	while(PATINDEX('%.%',@productno)>0) 
	begin 
		insert into @tmp 
			select
				left(@productno,PATINDEX('%.%',@productno)-1)
				,(select product from uca where noa=left(@productno,PATINDEX('%.%',@productno)-1)),@parent,1,0
				,isnull((select price from view_costs where mon=@t_mon and productno=left(@productno,PATINDEX('%.%',@productno)-1)),0)
				,isnull((select wages*hours from uca where noa= left(@productno,PATINDEX('%.%',@productno)-1)),0)
				,isnull((select makes*hours from uca where noa= left(@productno,PATINDEX('%.%',@productno)-1)),0)
				,isnull((select price from uca where noa= left(@productno,PATINDEX('%.%',@productno)-1)),0)
		set @productno=RIGHT(@productno,LEN(@productno)-PATINDEX('%.%',@productno)) 
	end 
end 

insert into @tmp 
	select 
		@productno,(select product from uca where noa=@productno),@parent,1,0
		,isnull((select price from view_costs where mon=@t_mon and productno=@productno),0)
		,isnull((select wages*hours from uca where noa= @productno),0)
		,isnull((select makes*hours from uca where noa= @productno),0)
		,isnull((select price from uca where noa= @productno),0)

BEGIN TRY 
	--遞迴 
	WITH OrdersTable (productno,product,noa,Level,sortCol,mount,dividea,price,costb,costc,costd) as ( 
		Select
			productno,product,parent,0, CONVERT(nvarchar(128),productno),mount,dividea,price,costb,costc,costd
		from @tmp 
		where parent=@parent 
		UNION ALL 
		SELECT
			a.productno,a.product,a.parent,OrdersTable.Level+1,CONVERT(nvarchar(128)
			,OrdersTable.SortCol+'-'+CONVERT(nvarchar(128),a.productno)),a.mount,a.dividea,a.price,a.costb,a.costc,a.costd
		FROM @tmp a, OrdersTable 
		WHERE a.parent=OrdersTable.productno 
	) 
	Select
		'0' gno,REPLICATE('　　',Level) + productno pno,product, level, sortcol,round(mount,4) mount,
		case when isnull(dividea,0)=0 then null else '/ '+CAST(dividea as nvarchar(10)) end dividea,
		case when @t_isprice='1' then isnull(price*mount,0) else null end costa,costb,costc,costd,
		case when @t_isprice='1' then
			(select SUM(price*mount+costb+costc+costd) from OrdersTable where left(sortcol,len(a.sortcol))=a.sortcol) 
		else null end ucccost
	From OrdersTable a order by sortCol 
END TRY 
BEGIN CATCH 
	select @@ERROR productno 
END CATCH 
------------------------------------------------------------------------------------------------------------;
z_ucap2:--z_ucap2
declare @t_bspno nvarchar(50)
declare @t_espno nvarchar(50)
declare @t_mon nvarchar(20)
declare @t_typea nvarchar(50)
declare @t_groupano nvarchar(50)
set @t_bspno = case when '#non' = [3] then '' else [3] end
set @t_espno = case when '#non' = [4] then CHAR(255) else [4] end
set @t_mon = case when '#non' = [5] then '' else [5] end
set @t_typea = case when '#non' = [6] then '' else [6] end
set @t_groupano = case when '#non' = [7] then '' else [7] end

--declare @tmp table(
--		gno nvarchar(1),
--		n nvarchar(3),
--		noa nvarchar(20),
--		noq nvarchar(5),
--		productno nvarchar(20),
--		product nvarchar(50),
--		mount float,
--		unit nvarchar(20),
--		stpr float,----材料單價(子)
--		stmo float,----直接材料(子)
--		famo float,----直接人工(子)
--		price float,---託工費用(子)
--		adpr float,----加扣款(子)
--		mamo float,----製造費用(子)
--		total float---總成本(子)
--)

--insert into @tmp 
--select '0' gno,'0.2' n,a.noa,a.noq,a.productno,a.product,a.mount,a.unit 
--,isnull((select SUM(costa)/SUM(mount) from view_wcost where mon=@t_mon and productno=a.productno),0)
--,isnull(a.mount*isnull((select SUM(costa)/SUM(mount) from view_wcost where mon=@t_mon and productno=a.productno),0),0)
--,isnull((select SUM(costb)/SUM(mount) from view_wcost where mon=@t_mon and productno=a.productno),0)
--,isnull((select SUM(costd)/SUM(mount) from view_wcost where mon=@t_mon and productno=a.productno),0)
--,isnull((select avg(wages_fee+makes_fee) from ucap where noa=a.productno),0)
--,isnull((select SUM(costc)/SUM(mount) from view_wcost where mon=@t_mon and productno=a.productno),0)
--,isnull(a.mount*isnull((select SUM(costa)/SUM(mount) from view_wcost where mon=@t_mon and productno=a.productno),0),0)
--+isnull((select SUM(costb)/SUM(mount) from view_wcost where mon=@t_mon and productno=a.productno),0)
--+isnull((select SUM(costd)/SUM(mount) from view_wcost where mon=@t_mon and productno=a.productno),0)
--+isnull((select avg(wages_fee+makes_fee) from ucap where noa=a.productno),0)
--+isnull((select SUM(costc)/SUM(mount) from view_wcost where mon=@t_mon and productno=a.productno),0)
--from ucas a 
--where (a.noa between @t_bspno and @t_espno) 

--insert into @tmp 
--select '1' gno,'0.1' n,a.noa,'',a.noa,a.product,'1',a.unit
--,isnull((select SUM(costa)/SUM(mount) from view_wcost where mon=@t_mon and productno=a.noa),0)
--,isnull((select SUM(costa)/SUM(mount) from view_wcost where mon=@t_mon and productno=a.noa),0)
--,isnull((select SUM(costb)/SUM(mount) from view_wcost where mon=@t_mon and productno=a.noa),0)
--,isnull((select SUM(costd)/SUM(mount) from view_wcost where mon=@t_mon and productno=a.noa),0)
--,isnull((select avg(wages_fee+makes_fee) from ucap where noa=a.noa),0)
--,isnull((select SUM(costc)/SUM(mount) from view_wcost where mon=@t_mon and productno=a.noa),0)
--,isnull((select SUM(costa)/SUM(mount) from view_wcost where mon=@t_mon and productno=a.noa),0)
--+isnull((select SUM(costb)/SUM(mount) from view_wcost where mon=@t_mon and productno=a.noa),0)
--+isnull((select SUM(costd)/SUM(mount) from view_wcost where mon=@t_mon and productno=a.noa),0)
--+isnull((select avg(wages_fee+makes_fee) from ucap where noa=a.noa),0)
--+isnull((select SUM(costc)/SUM(mount) from view_wcost where mon=@t_mon and productno=a.noa),0)
--from uca a 
--where (a.noa between @t_bspno and @t_espno) 


--insert into @tmp
--select '2' gno,'0.3' n,noa,'','','',0,'',0,
--SUM(stmo),SUM(famo),SUM(price),SUM(adpr),SUM(mamo),sum(total)
--from @tmp
--where gno != 1
--group by noa

--select gno,n,noa,productno,product,
--reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,mount),1)),0,30)) m,unit,
--reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,stpr),1)),0,30)) stpr,
--reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,stmo),1)),0,30)) stmo,
--reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,famo),1)),0,30)) famo,
--reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,price),1)),0,30)) price,
--reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,adpr),1)),0,30)) adpr,
--reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,mamo),1)),0,30)) mamo,
--reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,total),1)),0,30)) total,
--case when LEN(@t_bspno) > 0 and LEN(@t_espno) > 0 then '產品區間：'+@t_bspno+'～'+@t_espno else '' end title
--from @tmp
--order by noa,n
-----------------------------------------------------------------------------------------------------------------------------------------
declare @parent nvarchar(20) 
set @parent='root' 

declare @tmp table( 
	xnoa nvarchar(MAX),
	productno nvarchar(MAX), 
	product nvarchar(MAX), 
	parent nvarchar(MAX), 
	unit nvarchar(MAX), 
	mount float, 
	price float, 
	costb float,--人工 
	costc float,--製造費用 
	costd float 
) 

declare @tmpa table( 
	gno nvarchar(1), 
	xnoa nvarchar(MAX), 
	sortcol nvarchar(MAX), 
	productno nvarchar(20), 
	product nvarchar(50), 
	levels int, 
	mount float, 
	unit nvarchar(20), 
	stpr float,----材料單價(子) 
	stmo float,----直接材料(子) 
	famo float,----直接人工(子) 
	price float,---託工費用(子) 
	adpr float,----加扣款(子) 
	mamo float,----製造費用(子) 
	total float---總成本(子) 
) 

insert into @tmp 
select '',productno,product,noa,unit,mount,isnull((select price from view_costs where mon=@t_mon and productno=a.productno),0) 
,isnull((select wages*hours from uca where noa= a.productno),0) 
,isnull((select makes*hours from uca where noa= a.productno),0) 
,isnull((select price from uca where noa= a.productno),0) 
from ucas a 

insert into @tmp 
select a.noa,a.noa,(select product from uca where noa=a.noa),@parent 
,(select product from uca where noa=a.noa),1 
,isnull((select price from view_costs where mon=@t_mon and productno=a.noa),0) 
,isnull((select wages*hours from uca where noa= a.noa),0) 
,isnull((select makes*hours from uca where noa= a.noa),0) 
,isnull((select price from uca where noa= a.noa),0) 
from uca a where noa between @t_bspno and @t_espno 
and (len(@t_typea)=0 or a.typea=@t_typea)
and (len(@t_groupano)=0 or a.groupano=@t_groupano)

BEGIN TRY 
--遞迴 
	WITH OrdersTable (xnoa,productno,product,unit,noa,Level,sortCol,mount,price,costb,costc,costd) as ( 
		Select xnoa,productno,product,unit,parent,0, CONVERT(nvarchar(128),productno),mount,price,costb,costc,costd 
		from @tmp 
		where parent=@parent 
		UNION ALL 
		SELECT OrdersTable.xnoa,a.productno,a.product,a.unit,a.parent,OrdersTable.Level+1,CONVERT(nvarchar(128) 
		,OrdersTable.SortCol+'-'+CONVERT(nvarchar(128),a.productno)),a.mount,a.price,a.costb,a.costc,a.costd 
		FROM @tmp a, OrdersTable 
		WHERE a.parent=OrdersTable.productno 
	) 

	insert @tmpa(gno,xnoa,productno,product,unit,levels,sortcol,mount,stpr,stmo,famo,mamo,price,adpr) 
	select '0' gno,xnoa,productno,product,unit, level, sortcol 
	,mount,price,isnull(price*mount,0) costa,costb,costc,costd 
	,isnull((select avg(wages_fee+makes_fee) from ucap where noa=a.productno and left(datea,6)=@t_mon),0) plus 
	From OrdersTable a order by sortCol 

END TRY 
BEGIN CATCH 
select @@ERROR productno 
END CATCH 
------------------------------------------------------------------------------------------------------------ 
update @tmpa
set total=stmo+famo+mamo+price+adpr

insert @tmpa (gno,xnoa,sortcol,productno,levels,stmo,famo,price,adpr,mamo,total)
select '2',xnoa,productno+'ZZZZZZZ',productno,99
,(select sum(stmo) from @tmpa where xnoa=a.productno)
,(select sum(famo) from @tmpa where xnoa=a.productno)
,(select sum(price) from @tmpa where xnoa=a.productno)
,(select sum(adpr) from @tmpa where xnoa=a.productno)
,(select sum(mamo) from @tmpa where xnoa=a.productno)
,(select sum(total) from @tmpa where xnoa=a.productno)
from @tmpa a where levels=0

update @tmpa set gno='1' where levels=0

select gno,sortcol,productno,product xproduct,REPLICATE('&nbsp',(levels-1))+cast(levels as nvarchar(20)) levels,unit
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,mount),1)),0,30)) mount
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,stpr),1)),0,30)) stpr
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,stmo),1)),0,30)) stmo
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,famo),1)),0,30)) famo
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,price),1)),0,30)) price
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,adpr),1)),0,30)) adpr
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,mamo),1)),0,30)) mamo
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,total),1)),0,30)) total
,(case when @t_typea='2' then '製成品' when @t_typea='3' then '半成品' else '製成品、半成品' end) typea
,(case when len(@t_groupano)=0 then '全部' else (select namea from uccga where noa=@t_groupano) end) groupa
from @tmpa order by xnoa,sortcol,levels;
