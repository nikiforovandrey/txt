z_getst1:--z_getst1
declare @pagecount int
declare @t_accy nvarchar(20)
declare @t_bnoa nvarchar(20)
declare @t_enoa nvarchar(20)
set @pageCount = 30
set @t_accy = '[3]'
set @t_bnoa = case when '#non' = [4] then ' ' else [4] end
set @t_enoa = case when '#non' = [5] then CHAR(255) else [5] end
declare @tmpa table(
		gno nvarchar(1),
		noa nvarchar(30),
		datea nvarchar(10),
		custno nvarchar(20),
		comp nvarchar(50),
		typea nvarchar(10),
		tel nvarchar(20),
		fax nvarchar(20),
		addr nvarchar(90),
		trantype nvarchar(20),
		s nvarchar(20),
		uno nvarchar(20),
		spec nvarchar(20),
		class nvarchar(20),
		product nvarchar(50),
		size nvarchar(50),
		mount float,
		weightb float,
		memo nvarchar(200),
		cardeal nvarchar(50),
		carno nvarchar(20),
		tmemo nvarchar(200),
		store nvarchar(50),
		totmount float,
		totweightb float
)
insert into @tmpa
select '0' gno,a.noa,a.datea,a.custno,a.comp,a.typea,c.tel,c.fax,c.addr_comp,a.trantype,d.source,
b.uno,d.spec,d.class,b.product,
(case when b.radius<=0 then CAST(b.dime AS varchar)+'x'+CAST(b.width AS varchar)+'x'+CAST(b.lengthb AS varchar) else CAST(b.dime AS varchar)+'x'+CAST(b.width AS varchar)+'x'+CAST(b.lengthb AS varchar)+'x'+CAST(b.radius AS varchar) end) size,
b.mount,b.weight,b.memo,a.cardeal,a.carno,a.memo,d.store,0,0
from get[3] a
left join gets[3] b on a.noa = b.noa
left join cust c on a.custno = c.noa 
left join uccc d on d.noa = b.uno
where a.noa between @t_bnoa and @t_enoa

declare @tmp table(
		gno nvarchar(1),
		noa nvarchar(30),
		datea nvarchar(10),
		custno nvarchar(20),
		comp nvarchar(50),
		typea nvarchar(10),
		tel nvarchar(20),
		fax nvarchar(20),
		addr nvarchar(90),
		trantype nvarchar(20),
		s nvarchar(20),
		uno nvarchar(20),
		spec nvarchar(20),
		class nvarchar(20),
		product nvarchar(50),
		size nvarchar(50),
		mount float,
		weightb float,
		memo nvarchar(200),
		cardeal nvarchar(50),
		carno nvarchar(20),
		tmemo nvarchar(200),
		store nvarchar(50),
		totmount float,
		totweightb float,
		recno int,
		currecno int,
		curpage int,
		totpage int
		
)
insert into @tmp
select a.*,ROW_NUMBER()over(order by gno) recno,0 currecno,0 curpage,0 totpage 
				 from( 
				select  gno,noa,datea,custno,comp,typea,tel,fax,addr,trantype,
				s,uno,spec,class,product,size,mount,weightb,memo,cardeal,carno,tmemo,
				store,totmount,totweightb 
				from @tmpa a
				 )a
	declare @noa nvarchar(30)
	declare @count int
	declare @t_count int
	declare @recno int
	declare @mount float
	declare @weightb float
	declare @currecno int
	declare @curpage int
	declare @totpage int
	declare @t_noa nvarchar(30)
	declare @t_currecno float
	set @t_currecno = 0
	
	declare cursor_table cursor for
	select noa,min(recno) from @tmp group by noa
	open cursor_table
	fetch next from cursor_table
	into @noa,@recno
	while(@@FETCH_STATUS <> -1)
	begin
		update @tmp set currecno = recno - @recno +1 where noa=@noa
		fetch next from cursor_table
		into @noa,@recno
	end
	close cursor_table
	deallocate cursor_table
	--------------------------------------------------
	declare @count1 int
	declare @count2 int
	declare cursor_table cursor for
	select noa,sum(mount),sum(weightb),count(*) count1,(count(*)/@pageCount+1)*@pageCount count2 from @tmp group by noa
	open cursor_table
	fetch next from cursor_table
	into @noa,@mount,@weightb,@count1,@count2
	while(@@FETCH_STATUS <> -1)
	begin
		while(@count1<@count2) and not(@count1 % @pagecount = 0)
		begin
			insert into @tmp (gno,noa,totmount,totweightb,currecno)VALUES(0,@noa,@mount,@weightb,@count1+1)
			set @count1=@count1+1
		end
		fetch next from cursor_table
		into @noa,@mount,@weightb,@count1,@count2
	end
	close cursor_table
	deallocate cursor_table
	
	---------------------------------------------------
	declare cursor_table cursor for
	select noa,max(currecno) from @tmp group by noa
	open cursor_table
	fetch next from cursor_table
	into @noa,@currecno
	while(@@FETCH_STATUS <> -1)
	begin
		update @tmp set totpage = (@currecno-@currecno%@pagecount)/@pagecount where noa=@noa
		fetch next from cursor_table
		into @noa,@currecno
	end
	close cursor_table
	deallocate cursor_table
	
	declare cursor_table cursor for
	select noa,recno,currecno from @tmp
	open cursor_table
	fetch next from cursor_table
	into @noa,@recno,@currecno
	while(@@FETCH_STATUS <> -1)
	begin
		update @tmp set curpage = FLOOR((@currecno-1)/@pagecount)+1 where noa=@noa and recno=@recno
		fetch next from cursor_table
		into @noa,@recno,@currecno
	end
		close cursor_table
	deallocate cursor_table

select gno,noa,datea,custno,comp,typea,tel,fax,addr,trantype,s,uno,spec,class,
product,size,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,mount),1)),4,12)) mount,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,weightb),1)),4,12)) weightb,
memo,cardeal,carno,tmemo,store,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,totmount),1)),4,12)) totmount,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,totweightb),1)),4,12)) totweightb,CONVERT(nvarchar(5),curpage)+'/'+CONVERT(nvarchar(5),totpage) page 
from @tmp 
order by noa,totmount,totweightb,gno;
--*********************************************************************************************************************
z_getst2:--z_getst2
declare @t_accy nvarchar(20)
declare @t_itype nvarchar(10)
declare @t_bdate nvarchar(20)
declare @t_edate nvarchar(20)
declare @t_bdime decimal(7,3)
declare @t_edime decimal(7,3)
set @t_accy = '[3]'
set @t_itype = case when '#non' = [6] then '' when '全部'=[6] then '' else [6] end
set @t_bdate = case when '#non' = [7] then '' else [7] end
set @t_edate = case when '#non' = [8] then CHAR(255) else [8] end
set @t_bdime = case when '#non' = [9] then 0 else [9] end
set @t_edime = case when '#non' = [10] then 999.999 else [10] end
declare @tmp table(
		gno nvarchar(1),
		noa nvarchar(30),
		noq nvarchar(20),
		typea nvarchar(20),
		datea nvarchar(10),
		comp nvarchar(50),
		uno nvarchar(20),
		product nvarchar(20),
		spec nvarchar(20),
		size nvarchar(50),
		mount float,
		weightb float,
		price float,
		moneys float
)
insert into @tmp
select '0' gno,a.noa,b.noq,a.typea,a.datea,a.comp,b.uno,b.product,b.spec,
(case when b.radius<=0 then CAST(b.dime AS varchar)+'x'+CAST(b.width AS varchar)+'x'+CAST(b.lengthb AS varchar) else CAST(b.dime AS varchar)+'x'+CAST(b.width AS varchar)+'x'+CAST(b.lengthb AS varchar)+'x'+CAST(b.radius AS varchar) end) size,
b.mount,b.weight,c.sprice,b.weight*c.price
from get[3] a
left join  gets[3] b on a.noa = b.noa
left join uccc c on c.noa = b.uno
where  (LEN(@t_itype)= 0 or @t_itype = a.typea) and
(a.datea between @t_bdate and @t_edate ) and
(b.dime between @t_bdime and @t_edime)

insert into @tmp
select '1' gno,'','','','','','','','','',SUM(mount),SUM(weightb),0,SUM(moneys)
from @tmp

select gno,noa,noq,typea,datea,comp,uno,product,spec,size,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,mount),1)),4,12)) mount,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,weightb),1)),4,12)) weightb,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,price),1)),4,12)) price,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,moneys),1)),4,12)) moneys
from @tmp;
--***********************************************************************************************************************
z_getydst3:--z_getydst3
declare @pagecount int
declare @t_tel nvarchar(20)
declare @t_addr nvarchar(50)
declare @t_accy nvarchar(20)
declare @t_bnoa nvarchar(20)
declare @t_enoa nvarchar(20)
set @pageCount = 4
set @t_tel ='[1]'
set @t_addr ='[2]'
set @t_accy = '[3]'
set @t_bnoa = case when '#non' = [4] then ' ' else [4] end
set @t_enoa = case when '#non' = [5] then CHAR(255) else [5] end
declare @tmpa table(
		gno nvarchar(1),
		noa nvarchar(20),
		custno nvarchar(20),
		comp nvarchar(50),
		datea nvarchar(20),
		tel nvarchar(20),
		addr nvarchar(50),
		serial nvarchar(20),
		product nvarchar(50),
		size nvarchar(50),
		mount float,
		weightb float,
		eweight float,
		unit nvarchar(20),
		price float,
		moneys float,
		memo nvarchar(200),
		carno nvarchar(20),
		trantype nvarchar(20),
		totweightb float
		
)
insert into @tmpa
select '0' gno,a.noa,a.custno,a.comp,a.datea,c.tel,c.addr_fact,c.serial,b.product,
(case when b.radius<=0 then CAST(b.dime AS varchar)+'x'+CAST(b.width AS varchar)+'x'+CAST(b.lengthb AS varchar) else CAST(b.dime AS varchar)+'x'+CAST(b.width AS varchar)+'x'+CAST(b.lengthb AS varchar)+'x'+CAST(b.radius AS varchar) end) size,
b.mount,b.gweight,b.weight,b.unit,d.sprice,b.weight*d.sprice,b.memo,a.carno,a.trantype,0
from get[3] a
left join gets[3] b on a.noa = b.noa
left join cust c on a.custno = c.noa
left join uccc d on b.uno = a.noa
where (a.noa between @t_bnoa and @t_enoa)

declare @tmp table(
		gno nvarchar(1),
		noa nvarchar(20),
		custno nvarchar(20),
		comp nvarchar(50),
		datea nvarchar(10),
		tel nvarchar(20),
		addr nvarchar(50),
		serial nvarchar(10),
		product nvarchar(50),
		size nvarchar(50),
		mount float,
		weightb float,
		eweight float,
		unit nvarchar(20),
		price float,
		moneys float,
		memo nvarchar(200),
		carno nvarchar(20),
		trantype nvarchar(20),
		totweightb float,
		recno int,
		currecno int,
		curpage int,
		totpage int
)
insert into @tmp
select a.*,ROW_NUMBER()over(order by gno) recno,0 currecno,0 curpage,0 totpage 
				 from( 
				select  gno,noa,custno,comp,datea,tel,addr,serial,product,size,
				mount,weightb,eweight,unit,price,moneys,memo,carno,trantype,totweightb
				from @tmpa a
				 )a
	declare @noa nvarchar(30)
	declare @trantype nvarchar(20)
	declare @carno nvarchar(20)
	declare @count int
	declare @t_count int
	declare @recno int
	declare @mount float
	declare @weightb float
	declare @currecno int
	declare @curpage int
	declare @totpage int
	declare @t_noa nvarchar(30)
	declare @t_currecno float
	set @t_currecno = 0
	
	declare cursor_table cursor for
	select noa,min(recno) from @tmp group by noa
	open cursor_table
	fetch next from cursor_table
	into @noa,@recno
	while(@@FETCH_STATUS <> -1)
	begin
		update @tmp set currecno = recno - @recno +1 where noa=@noa
		fetch next from cursor_table
		into @noa,@recno
	end
	close cursor_table
	deallocate cursor_table
	--------------------------------------------------
	declare @count1 int
	declare @count2 int
	declare cursor_table cursor for
	select noa,sum(weightb),max(trantype),max(carno),count(*) count1,(count(*)/@pageCount+1)*@pageCount count2 from @tmp group by noa
	open cursor_table
	fetch next from cursor_table
	into @noa,@weightb,@trantype,@carno,@count1,@count2
	while(@@FETCH_STATUS <> -1)
	begin
		while not(@count1 % @pagecount = 0) and (@count1<@count2) 
		begin
			insert into @tmp (gno,noa,trantype,carno,totweightb,currecno)VALUES(0,@noa,@trantype,@carno,@weightb,@count1+1)
			set @count1=@count1+1
		end
		fetch next from cursor_table
		into @noa,@weightb,@trantype,@carno,@count1,@count2
		update @tmp set  totweightb = @weightb where noa = @noa
	end
	close cursor_table
	deallocate cursor_table
	
	---------------------------------------------------
	declare cursor_table cursor for
	select noa,max(currecno) from @tmp group by noa
	open cursor_table
	fetch next from cursor_table
	into @noa,@currecno
	while(@@FETCH_STATUS <> -1)
	begin
		update @tmp set totpage = (@currecno-@currecno%@pagecount)/@pagecount where noa=@noa
		fetch next from cursor_table
		into @noa,@currecno
	end
	close cursor_table
	deallocate cursor_table
	
	declare cursor_table cursor for
	select noa,recno,currecno from @tmp
	open cursor_table
	fetch next from cursor_table
	into @noa,@recno,@currecno
	while(@@FETCH_STATUS <> -1)
	begin
		update @tmp set curpage = FLOOR((@currecno-1)/@pagecount)+1 where noa=@noa and recno=@recno
		fetch next from cursor_table
		into @noa,@recno,@currecno
	end
		close cursor_table
	deallocate cursor_table
select gno,noa,custno,comp,datea,tel,addr,serial,product,size,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,mount),1)),4,12)) mount,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,weightb),1)),4,12)) weightb,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,eweight),1)),4,12)) eweight,
unit,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,price),1)),4,12)) price,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,moneys),1)),4,12)) moneys,
memo,carno,trantype,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,totweightb),1)),4,12)) totweightb,CONVERT(nvarchar(5),curpage)+'/'+CONVERT(nvarchar(5),totpage) page 
from @tmp 
order by noa,currecno;





