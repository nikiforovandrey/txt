-------------------------------------------------------------------------------------------------------------
z_anaumm4:--z_anaumm4
SET QUOTED_IDENTIFIER OFF
declare @t_accy nvarchar(20)
declare @t_bxdate nvarchar(20)
declare @t_exdate nvarchar(20)
set @t_accy = "[1]"
set @t_accy= REPLACE(@t_accy,"'","")
set @t_bxdate = case when '#non' = [9] then '' else [9] end
set @t_exdate = case when '#non' = [10] then CHAR(255) else [10] end
--*****************************************************************************
declare @tmp table( 
	gno nvarchar(1), 
	noa nvarchar(20), 
	accc3 nvarchar(20), 
	accc2 nvarchar(20), 
	part nvarchar(20), 
	accc6 nvarchar(50), 
	memo nvarchar(max), 
	dc nvarchar(20), 
	inmoney int, 
	paymoney int, 
	ainmoney int, 
	binmoney int, 
	cinmoney int, 
	apaymoney int, 
	bpaymoney int, 
	cpaymoney int, 
	atotal int, 
	btotal int, 
	ctotal int, 
	title nvarchar(20), 
	zno nvarchar(20), 
	azno nvarchar(20), 
	acc1 nvarchar(20), 
	partworker nvarchar(50),
	tbank nvarchar(50),
	bank2 nvarchar(50) 
) 
declare @cmd nvarchar(max)

set @cmd="
select '0' gno,case when b.zno='umm' or b.zno='pay' then left(a.zno,11)end,b.accc3,isnull(a.accc2,''),c.part,b.accc6, 
b.accc7,b.dc ,case when dc = '1' and b.dmoney > 0 then b.dmoney end, 
case when dc = '2' and b.cmoney > 0 then b.cmoney end , 
case when LEFT(b.accc5,4) = '1111' and dc = 1 then b.dmoney end, 
case when left(b.accc5,4) = '1112' and dc = 1 then b.dmoney end, 
case when left(b.accc5,4) = '1121' and dc = 1 then b.dmoney end, 
case when left(b.accc5,4) = '1111' and dc = 2 then b.cmoney end, 
case when left(b.accc5,4) = '1112' and dc = 2 then b.cmoney end, 
case when left(b.accc5,4) = '2121' and dc = 2 then b.cmoney end, 
0,0,0, 
(case when '"+@t_bxdate+"' = '"+@t_exdate+"' then '日' else '月' end),b.zno,a.zno,b.accc5,c.part+'－'+a.worker ,
case when left(accc5,4) = '1121' then d.tbank end,case when left(accc5,4) = '2121' then d.bank end
from acccs"+@t_accy+" b 
left join accc"+@t_accy+" a on a.accc3 = b.accc3 
left join acpart"+@t_accy+" c on a.part = c.noa
left join gqb d on d.gqbno = left
 (ltrim(substring
 (b.accc7,CHARINDEX(' ',b.accc7)+1,len(b.accc7))),
 CHARINDEX(' ',ltrim(substring(b.accc7,CHARINDEX(' ',b.accc7)+1,len(b.accc7))))
 ) 
where (a.accc2 between '"+@t_bxdate+"' and '"+@t_exdate+"') and ( 
(left(b.accc5,4) = '1111' or left(b.accc5,4) = '1112') 
or (left(b.accc5,4) = '1121' and b.zno = 'umm' or left(b.accc5,4) = '1121' and b.zno = 'pay' or left(b.accc5,4) = '2121' and b.zno = 'umm' or left(b.accc5,4) = '2121' and b.zno = 'pay')) 
"
insert into @tmp 
EXECUTE sp_executesql @cmd

insert into @tmp 
select '1' gno,'',CHAR(255),'',part,'','','',SUM(inmoney),SUM(paymoney),sum(ainmoney),sum(binmoney),sum(cinmoney),sum(apaymoney), 
sum(bpaymoney),sum(cpaymoney),0,0,0,'','','','','','','' 
from @tmp 
group by part 
insert into @tmp 
select '2' gno,'',CHAR(255),'',CHAR(255),'','','',SUM(inmoney),SUM(paymoney),sum(ainmoney),sum(binmoney),sum(cinmoney),sum(apaymoney), 
sum(bpaymoney),sum(cpaymoney),0,0,0,'','','','','','','' 
from @tmp 
where gno = 0 
insert into @tmp 
select '3' gno,'',CHAR(255),'',CHAR(255),'','','',0,0,0,0,0,0,0,0,ainmoney-apaymoney,binmoney-bpaymoney,cinmoney-cpaymoney,'','','' ,'','' ,'',''
from @tmp 
where gno = 2 

select gno,noa,accc3,accc2,part,accc6,memo,dc, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,inmoney),1)),4,12)) inmoney, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,paymoney),1)),4,12)) paymoney, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,ainmoney),1)),4,12)) ainmoney, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,binmoney),1)),4,12)) binmoney, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,cinmoney),1)),4,12)) cinmoney, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,apaymoney),1)),4,12)) apaymoney, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,bpaymoney),1)),4,12)) bpaymoney, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,cpaymoney),1)),4,12)) cpaymoney, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,atotal),1)),4,12)) atotal, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,btotal),1)),4,12)) btotal, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,ctotal),1)),4,12)) ctotal,title,zno,azno,acc1,partworker 
,tbank,bank2
from @tmp 
order by part,accc3,gno;
----------------------------------------------------------------------------------------
z_anaumm7:--z_anaumm7
SET QUOTED_IDENTIFIER OFF
declare @t_bscno nvarchar(20)
declare @t_escno nvarchar(20)
declare @t_bcustno nvarchar(20)
declare @t_ecustno nvarchar(20)
declare @t_xmon nvarchar(10)
declare @t_xaccy nvarchar(20)
declare @t_bxpartno nvarchar(20)
declare @t_expartno nvarchar(20)
set @t_xaccy = "[2]"
set @t_xaccy= REPLACE(@t_xaccy,"'","")
set @t_bscno = case when '#non' = [7] then '' else [7] end
set @t_escno = case when '#non' = [8] then CHAR(255) else [8] end
set @t_bcustno = case when '#non' = [5] then '' else [5] end
set @t_ecustno = case when '#non' = [6] then CHAR(255) else [6] end
set @t_xmon = case when '#non' = [11] then '' else [11] end
set @t_bxpartno = case when '#non' = [3] then '' else [3] end
set @t_expartno = case when '#non' = [4] then CHAR(255) else [4] end
--********************************************************************************
declare @tmp table( 
	gno nvarchar(1), 
	custno nvarchar(20), 
	ccomp nvarchar(50), 
	cno nvarchar(20), 
	acomp nvarchar(50), 
	money float, 
	total float, 
	payed float, 
	unpay float,
	partno nvarchar(20),
	part nvarchar(50) 
) 
declare @cmd nvarchar(max)

set @cmd="
select '0'gno,a.custno,b.nick ccomp,a.cno,c.nick acomp,money,total,payed,unpay,partno,part
from(
	select custno,cno,SUM(isnull(money,0))money,SUM(isnull(total,0))total,SUM(isnull(payed,0))payed,SUM(isnull(unpay,0))unpay,partno,part from (
		--trd
		select custno,cno,isnull((select SUM(unpay) from view_trd"+@t_xaccy+" b where a.custno=b.custno and a.cno=b.cno and mon<'"+@t_xmon+"'),0) money,sum(total)total,sum(payed)payed,SUM(unpay)+isnull((select SUM(unpay) from view_trd"+@t_xaccy+" b where a.custno=b.custno and a.cno=b.cno and mon<'"+@t_xmon+"'),0) unpay,'08' partno,'運輸部' part from view_trd"+@t_xaccy+" a
		where (case when len(mon)=0 then left(datea,6) else mon end )='"+@t_xmon+"'   group by custno,cno
		union all
		--vcc
		select custno,cno,isnull((select SUM(unpay) from view_vcc"+@t_xaccy+" b where a.custno=b.custno and a.cno=b.cno and mon<'"+@t_xmon+"'),0) money,SUM(total)total,sum(payed)payed,SUM(unpay)+isnull((select SUM(unpay) from view_vcc"+@t_xaccy+" b where a.custno=b.custno and a.cno=b.cno and mon<'"+@t_xmon+"'),0) unpay,partno,part from view_vcc"+@t_xaccy+" a 
		where (case when len(mon)=0 then left(datea,6) else mon end )='"+@t_xmon+"' and  (left(kind,4)!='健勞勞退') group by custno,cno,partno,part
		union all
		--cara
		select a.custno,a.cno,a.money,a.total,a.payed,a.unpay,'07' partno,'監理部' part from(
			select custno,cno,SUM(isnull(money,0))money,SUM(isnull(total,0))total,SUM(isnull(payed,0))payed,SUM(isnull(unpay,0))unpay from(
				select a.carownerno custno,c.cardealno cno,
				(select outmoney-inmoney from caras b where a.noa=b.noa and caritemno='001')money,
				(select sum(outmoney)  from caras b where a.noa=b.noa and caritemno!='001')total,
				(select sum(inmoney)  from caras b where a.noa=b.noa and caritemno!='001')payed,
				a.total unpay from cara a left join car2 c on a.carno=c.noa where a.mon='"+@t_xmon+"' 
			)tmp group by custno,cno
		)a
	)tmpb group by custno,cno,partno,part)a 
left join cust b on a.custno=b.noa left join acomp c on a.cno=c.noa 
where (a.cno between '"+@t_bscno+"' and '"+@t_escno+"') and (a.custno between '"+@t_bcustno+"' and '"+@t_ecustno+"')and( partno between '"+@t_bxpartno+"' and '"+@t_expartno+"')
order by custno
"
insert into @tmp
EXECUTE sp_executesql @cmd

insert into @tmp
select '1'gno,'','','','',sum(money),sum(total),sum(payed),sum(unpay),'','' from @tmp

select gno,custno,replace(ccomp,' ','')+'('+replace(custno,' ','')+')' ccomp,cno,acomp acomp 
,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,money),1)),4,12)) money
,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,total),1)),4,12)) total
,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,payed),1)),4,12)) payed
,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,unpay),1)),4,12)) unpay,
partno,part
,@t_xmon mon from @tmp;
----------------------------------------------------------------------------------
z_anapay7:--z_anapay7 
SET QUOTED_IDENTIFIER OFF
declare @t_bpartno nvarchar(20) 
declare @t_epartno nvarchar(20) 
declare @t_xmon nvarchar(20)
declare @t_xaccy nvarchar(20)
set @t_xaccy = "[2]"
set @t_xaccy= REPLACE(@t_xaccy,"'","")
set @t_bpartno = case when '#non' = [3] then '' else [3] end 
set @t_epartno = case when '#non' = [4] then CHAR(255) else [4] end 
set @t_xmon = case when '#non' = [11] then '' else [11] end
--*******************************************************************
declare @tmp table( 
	gno nvarchar(1),
	partno nvarchar(20), 
	part nvarchar(50),
	total float, 
	payed float, 
	unpay float 
) 
declare @cmd nvarchar(max)

set @cmd="
	select '0'gno,a.partno,b.part,total,payed,unpay from(
		select partno,SUM(total)total,SUM(payed)payed,SUM(unpay)unpay from (
			select '08'partno,total,0 payed,total unpay
			from view_tre"+@t_xaccy+" where left(datea,6)='"+@t_xmon+"' and driverno!='' and total!=0 and len(checkno) =0
			union all
			select partno,total,payed,unpay
			from payb where left(datea,6)='"+@t_xmon+"' and (payed=0 or unpay!=0)
		)tmp	group by partno
	) a left join part b on a.partno=b.noa
	where a.partno between '"+@t_bpartno+"' and '"+@t_epartno+"'
	order by partno"

insert into @tmp 
EXECUTE sp_executesql @cmd

insert into @tmp
select '1' gno,'','',SUM(total)total,SUM(payed)payed,SUM(unpay)unpay
from @tmp

 select gno,partno,part,
 reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,total),1)),4,12)) total,
 reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,payed),1)),4,12)) payed,
 reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,unpay),1)),4,12)) unpay,
 @t_xmon mon from @tmp
 ;
----------------------------------------------------------------------------------------------------------------------------------------------
z_anabank1:--z_anabank1
SET QUOTED_IDENTIFIER OFF
declare @t_accy nvarchar(20)
declare @t_bdate nvarchar(10)
declare @t_edate nvarchar(10)
declare @t_baccno nvarchar(25)
declare @t_eaccno nvarchar(25)
set @t_accy = "[1]"
set @t_accy= REPLACE(@t_accy,"'","")
set @t_bdate = case when '#non'=[9] then '' else [9] end
set @t_edate = case when '#non'=[10] then char(255) else [10] end
set @t_baccno = case when '#non'=[12] then '' else [12] end
set @t_eaccno = case when '#non'=[13] then char(255) else [13] end
--****************************************************************************
declare @tmp table( 
	gno nvarchar(1), 
	accc5 nvarchar(20), 
	dmoney int, 
	cmoney int, 
	[money] int, 
	acc2 nvarchar(50), 
	account nvarchar(50), 
	beginmoney int, 
	lastmoney int,
	title nvarchar(20) 
) 
declare @cmd nvarchar(max)

set @cmd="
	select S1.gno,s1.accc5,s1.dmoney,s1.cmoney,s1.money,case when PATINDEX('%[0-9]%',acc.acc2) = 0 then acc.acc2 else left(acc.acc2,PATINDEX('%[0-9]%',acc.acc2)-1) end,(case when PATINDEX('%[0-9]%',acc.acc2)=0 then '' else substring(acc.acc2,PATINDEX('%[0-9]%',acc.acc2),len(acc.acc2))end), isNull(acc.beginmoney,0) + isNull(s2.money,0) as beginMoney, isNull(acc.beginmoney,0) + isNull(s1.money,0) + isNull(s2.money,0) as lastMoney ,''
	from( select '0' gno, accc5,SUM(dmoney) dmoney, SUM(cmoney) cmoney, SUM((dmoney-Cmoney)*n) money 
		from( select b.* ,case when LEFT(b.accc5,4)='1112' then 1 else -1 end n 
		from acccs"+@t_accy+" b where (b.accc5 between '"+@t_baccno+"' and '"+@t_eaccno+"') and (b.accc2 between '"+@t_bdate+"' and '"+@t_edate+"') and LEFT(b.accc5,4)='1112'
		) as R1	group by accc5 
	) AS s1 
left join acc"+@t_accy+" acc on acc.acc1=s1.accc5 left join 
(select accc5,SUM(dmoney) dmoney, SUM(cmoney) cmoney, SUM((dmoney-Cmoney)*n) money 
	from (select b.* ,case when LEFT(b.accc5,4)='1112' then 1 else -1 end n from acccs"+@t_accy+" b 
		where (b.accc5 between '"+@t_baccno+"' and '"+@t_eaccno+"') and b.accc2<'"+@t_bdate+"' and LEFT(b.accc5,4)='1112'
	) as R2 group by accc5 
)as S2 on s1.accc5 = S2.accc5 "

insert into @tmp 
 EXECUTE sp_executesql @cmd
 
declare @accc5 nvarchar(35) 
declare @acc2 nvarchar(50) 
declare @account nvarchar(50) 
declare @dmoney float 
declare @cmoney float 
declare @total float 
set @accc5 = '' 
set @acc2 = '' 
set @account = '' 
set @dmoney = 0 
set @cmoney = 0 
set @total = 0 

set @cmd="
declare cursor_table cursor for 
select distinct(accc5), 
case when PATINDEX('%[0-9]%',b.acc2) = 0 then b.acc2 else left(b.acc2,PATINDEX('%[0-9]%',b.acc2)-1) end, 
(case when PATINDEX('%[0-9]%',b.acc2)=0 then '' else substring(b.acc2,PATINDEX('%[0-9]%',b.acc2),len(b.acc2))end), 
sum(dmoney),sum(cmoney) from acccs102_1 a left join acc"+@t_accy+" b on a.accc5 = b.acc1 
where accc2 < '"+@t_bdate+"' and LEFT(accc5,4)='1112' group by accc5,b.acc2 "

 EXECUTE sp_executesql @cmd
open cursor_table 
fetch next from cursor_table 
into @accc5,@acc2,@account,@dmoney,@cmoney 
while(@@FETCH_STATUS <> -1) 
begin 
	if((select COUNT(accc5) from @tmp where accc5 = @accc5) = 0) 
	begin 
		set @total = @dmoney - @cmoney 
		insert into @tmp(gno,accc5,acc2,account,beginmoney,dmoney,cmoney,lastmoney) 
		select 0,@accc5,@acc2,@account,@total,0,0,@total 
	end 
	fetch next from cursor_table 
	into @accc5,@acc2,@account,@dmoney,@cmoney 
end 
close cursor_table 
deallocate cursor_table	

insert into @tmp
select '1' gno,char(255),sum(dmoney),sum(cmoney),sum(money),CHAR(255),CHAR(255),sum(beginmoney),sum(lastmoney),''
from @tmp

if @t_bdate = @t_edate 
begin 
	select gno,accc5, 
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,dmoney),1)),4,12)) dmoney, 
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,cmoney),1)),4,12)) cmoney, 
	acc2,account,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,beginmoney),1)),4,12)) beginmoney, 
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,lastmoney),1)),4,12)) lastmoney ,'本日結餘' title 
	from @tmp 
	order by accc5,gno 
end 
else 
begin 
	select gno,accc5, 
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,dmoney),1)),4,12)) dmoney, 
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,cmoney),1)),4,12)) cmoney, 
	acc2,account,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,beginmoney),1)),4,12)) beginmoney, 
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,lastmoney),1)),4,12)) lastmoney ,'本期結餘' title 
	from @tmp 
	order by accc5,gno 
end ;