z_salb1:--z_salb1
declare @t_xmon nvarchar(20)
set @t_xmon = case when '#non' = [1] then '' else [1] end
declare @tmp table(
	gno nvarchar(1),
	noa nvarchar(30),
	noq nvarchar(20),
	mon nvarchar(10),
	title nvarchar(50),
	datea nvarchar(10),
	sex nvarchar(5),
	namea nvarchar(50),
	home_addr nvarchar(40),
	id nvarchar(10),
	v nvarchar(1),
	mo int,
	adm int,
	chl int,
	total int,
	mi_total int,
	tax int
)
insert into @tmp
	select
		'0' gno,b.noa,b.noq,a.mon,ISNULL(a.title,''),a.datea,
		(case when b.sex='1' then '男' else '女' end),b.namea,
		b.addr,b.id,(case when b.isclerk = 1 then 'V' else '' end),b.mount,
		b.ad_money,b.ch_meal,b.money,b.tax,ISNULL(null,0)
	from salb a
	left join salbs b on b.noa = a.noa
	where (LEN(@t_xmon)= 0 or a.mon = @t_xmon)

insert into @tmp(gno,mon,mo,adm,chl,total,mi_total,tax)
	select '1' gno,mon,0,sum(adm),sum(chl),sum(total),0,SUM(tax)
	from @tmp
	group by mon
update @tmp set id=left(id,2)+'****'+right(id,3) where len(isnull(id,''))=10
select
	gno,noa,noq,mon,title,datea,sex,namea,home_addr,id,v,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,mo),1)),4,12)) mo,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,adm),1)),4,12)) adm,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,chl),1)),4,12)) chl,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,total),1)),4,12)) total,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,mi_total),1)),4,12)) mi_total,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,tax),1)),4,12)) tax
from @tmp
order by mon,gno,noa;
--**********************************************************************************************
z_salb2:--z_salb2
declare @t_xyears nvarchar(10)
set @t_xyears = case when '#non' = [6] then '' else [6] end
	
declare @tmp table(
	gno nvarchar(1),
	years nvarchar(3),
	datea nvarchar(10),
	title nvarchar(50),
	m int,
	b int,
	sal int,
	sbl int,
	adm int,
	bdm int,
	sachl int,
	sbchl int,
	sam int,
	sat int,
	satax int,
	sbm int,
	sbt int,
	sbtax int
)

insert into @tmp 
select '0',LEFT(a.mon,3),a.datea,a.title
,sum(case when isnull(b.isclerk,0)=1 then 1 else 0 end) m
,sum(case when isnull(b.isclerk,0)=1 then 0 else 1 end) b
,sum(case when isnull(b.isclerk,0)=1 then b.money else 0 end) sal
,sum(case when isnull(b.isclerk,0)=1 then 0 else b.money end) sbl
,sum(case when isnull(b.isclerk,0)=1 then b.ad_money else 0 end) adm
,sum(case when isnull(b.isclerk,0)=1 then 0 else b.ad_money end) bdm
,sum(case when isnull(b.isclerk,0)=1 then b.ch_meal else 0 end) sachl
,sum(case when isnull(b.isclerk,0)=1 then 0 else b.ch_meal end) sbchl
,sum(case when isnull(b.tax,0)>0 then 1 else 0 end) sam
,sum(case when isnull(b.tax,0)>0 then b.money else 0 end) sat
,sum(case when isnull(b.tax,0)>0 then b.tax else 0 end) satax
,sum(case when isnull(b.tax,0)>0 then 0 else 1 end) sbm
,sum(case when isnull(b.tax,0)>0 then 0 else b.money end) sbt
,0 sbtax
from salb a left join salbs b on a.noa=b.noa
where (LEN(@t_xyears)=0 or LEFT(a.mon,3)=@t_xyears)
group by LEFT(a.mon,3),a.datea,a.title

	
insert into @tmp(gno,years,datea,title,m,sal,adm,sbchl,sam,sat,satax)
	select
		'1' gno,years,datea,title,
		sum((isnull(m,0)+isnull(b,0))),
		sum((isnull(sal,0)+isnull(sbl,0))),
		sum((isnull(adm,0)+isnull(bdm,0))),
		sum((isnull(sachl,0)+isnull(sbchl,0))),
		sum((isnull(sam,0)+isnull(sbm,0))),
		sum((isnull(sat,0)+isnull(sbt,0))),
		sum((isnull(satax,0)+isnull(sbtax,0)))
	from @tmp
	group by years,datea,title
	
select
	a.gno,a.years,a.datea,a.title,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.m),1)),4,12)) m,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.b),1)),4,12)) b,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.sal),1)),4,12)) sal,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.sbl),1)),4,12)) sbl,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.adm),1)),4,12)) adm,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.bdm),1)),4,12)) bdm,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.sachl),1)),4,12)) sachl,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.sbchl),1)),4,12)) sbchl,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.sam),1)),4,12)) sam,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.sat),1)),4,12)) sat,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.satax),1)),4,12)) satax,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.sbm),1)),4,12)) sbm,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.sbt),1)),4,12)) sbt,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.sbtax),1)),4,12)) sbtax
from @tmp a
order by a.years,a.datea,a.title,a.gno;
--************************************************************************************************
z_salb3:--z_salb3
declare @t_bxdate nvarchar(10)
declare @t_exdate nvarchar(10)
declare @t_bsno nvarchar(20)
declare @t_esno nvarchar(20)
set @t_bxdate = case when '#non' = [2] then '' else [2] end
set @t_exdate = case when '#non' = [3] then CHAR(255) else [3] end
set @t_bsno = case when '#non' = [4] then '' else [4] end
set @t_esno = case when '#non' = [5] then CHAR(255) else [5] end

declare @tmp table(
	gno nvarchar(1),
	noa nvarchar(30),
	noq nvarchar(20),
	datea nvarchar(10),
	years nvarchar(3),
	title nvarchar(MAX),
	sno nvarchar(20),
	namea nvarchar(50),
	addr nvarchar(50),
	id nvarchar(10),
	mount int,
	adm int,
	chl int,
	total int,
	mit int
)
insert into @tmp
	select
		'0' gno,a.noa,b.noq,a.datea,LEFT(a.mon,3),isnull(a.title,''),b.sssno,b.namea,b.addr,
		b.id,b.mount,b.ad_money,b.ch_meal,b.money,b.tax
	from salb a
	left join salbs b on b.noa = a.noa
	where (ISNULL(a.datea,'') between @t_bxdate and @t_exdate) and
			 (isnull(b.sssno,'') between @t_bsno and @t_esno)

insert into @tmp(gno,sno,adm,chl,total,mit)
	select
		'1' gno,sno,sum(adm),sum(chl),sum(total),SUM(mit)
	from @tmp
	group by sno
update @tmp set id=left(id,2)+'****'+right(id,3) where len(isnull(id,''))=10
select
	a.gno,a.noa,a.noq,a.datea,a.years,a.title,a.sno,a.namea,a.addr,a.id,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.mount),1)),4,12)) mount,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.adm),1)),4,12)) adm,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.chl),1)),4,12)) chl,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.total),1)),4,12)) total,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.mit),1)),4,12)) mit
from @tmp a
order by a.sno,a.gno,datea;
--***************************************************************************************************************
z_salb3a:--z_salb3a
declare @t_bxdate nvarchar(10)
declare @t_exdate nvarchar(10)
declare @t_bsno nvarchar(20)
declare @t_esno nvarchar(20)
set @t_bxdate = case when '#non' = [2] then '' else [2] end
set @t_exdate = case when '#non' = [3] then CHAR(255) else [3] end
set @t_bsno = case when '#non' = [4] then '' else [4] end
set @t_esno = case when '#non' = [5] then CHAR(255) else [5] end
	
declare @tmp table(
	gno nvarchar(1),
	id nvarchar(10),
	sno nvarchar(20),
	namea nvarchar(50),
	mount int,
	total float,
	mi_rate float,
	mitotal float,
	moneys int
)
insert into @tmp
	select
		'0' gno,b.id,b.sssno,b.namea,MAX(b.mount)
		,sum(b.money),0,sum(b.tax),sum(b.money-b.tax)
	from salb a
	left join salbs b on b.noa = a.noa
	left join sss c on b.sssno=c.noa
	where (a.datea between @t_bxdate and @t_exdate) and
			 (b.sssno between @t_bsno and @t_esno)
	group by b.id,b.sssno,b.namea
	
	update @tmp
	set mi_rate=round(mitotal/nullif(total,0)*100,2)
			 
insert into @tmp(gno,total,mitotal,moneys)
	select
		'1' gno,sum(total),sum(mitotal),sum(moneys)
	from @tmp
	where gno='0'
	
update @tmp set id=left(id,2)+'****'+right(id,3) where len(isnull(id,''))=10

select
	a.gno,a.id,a.sno,a.namea,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.mount),1)),4,12)) mount,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.total),1)),4,12)) total,
	cast(a.mi_rate as nvarchar(50))+' %' mi_rate,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.mitotal),1)),4,12)) mitotal,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.moneys),1)),4,12)) moneys
from @tmp a
order by a.gno,a.id;
--******************************************************************************************************************
z_salb4:--z_salb4
declare @t_xyears nvarchar(10)
set @t_xyears = case when '#non' = [6] then '' else [6] end

declare @tmp table(
	gno nvarchar(1),
	years nvarchar(3),
	datea nvarchar(10),
	title nvarchar(20), 
	adm int,
	chl int,
	total int,
	mit int
)

insert into @tmp
	select
		'0' gno,LEFT(a.mon,3),a.datea,a.title,sum(b.ad_money),sum(b.ch_meal),sum(b.money),sum(b.tax)
	from salb a
	left join salbs b on b.noa = a.noa
	where (LEN(@t_xyears)=0 or left(a.mon,3) = @t_xyears )
	group by a.datea,LEFT(a.mon,3),a.title
	
insert into @tmp(gno,years,adm,chl,total,mit)
	select '1' gno,years,sum(adm),sum(chl),sum(total),sum(mit)
from @tmp group by years

select
	a.gno,a.datea,a.title,years,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.adm),1)),4,12)) adm,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.chl),1)),4,12)) chl,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.total),1)),4,12)) total,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.mit),1)),4,12)) mit
from @tmp a order by years,gno,datea;
--*********************************************************************************************************************************
z_salb5:--z_salb5
declare @t_bsno nvarchar(20)
declare @t_esno nvarchar(20)
declare @t_xyears nvarchar(10)
set @t_bsno = case when '#non' = [4] then '' else [4] end
set @t_esno = case when '#non' = [5] then CHAR(255) else [5] end
set @t_xyears = case when '#non' = [6] then '' else [6] end

declare @tmp table(
	gno nvarchar(1),
	sno nvarchar(20),
	namea nvarchar(50),
	id nvarchar(20),
	addr nvarchar(50),
	indate nvarchar(10),
	job nvarchar(20),
	datea nvarchar(10),
	l1 nvarchar(2),
	l2 nvarchar(2),
	l3 nvarchar(2),
	[money] int,
	ba int,
	bd int,
	bf int,
	both int,
	salary int,
	unfix int,
	tot_salary int,
	sa_labor int,
	sa_health int,
	ch_labor int,
	health int	
)
insert into @tmp
	select '0' gno,b.noa,b.namea,b.id,b.addr_home,b.indate,b.job,a.datea,
	a.level1,a.level2,a.level3,a.money,a.bo_admin,a.bo_special,a.bo_full,a.bo_oth,
	a.salary,a.unfix,a.salary+a.unfix,a.sa_labor,a.sa_health,a.ch_labor,a.ch_health
	from saladjust a
	left join sss b on b.noa = a.noa
	where b.noa between @t_bsno and @t_esno

insert into @tmp(gno,sno,sa_labor,sa_health,ch_labor,health)
	select
		'1' gno,sno,sum(sa_labor),sum(sa_health),sum(ch_labor),sum(health)	
	from @tmp
	group by sno
update @tmp set id=left(id,2)+'****'+right(id,3) where len(isnull(id,''))=10
select
	a.gno,a.sno,a.namea,a.id,a.addr,a.indate,a.job,a.datea,a.l1,a.l2,a.l3,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.money),1)),4,12)) money,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.ba),1)),4,12)) ba,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.bd),1)),4,12)) bd,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.bf),1)),4,12)) bf,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.both),1)),4,12)) both,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.salary),1)),4,12)) salary,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.unfix),1)),4,12)) unfix,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.tot_salary),1)),4,12)) tot_salary,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.sa_labor),1)),4,12)) sa_labor,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.sa_health),1)),4,12)) sa_health,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.ch_labor),1)),4,12)) ch_labor,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.health),1)),4,12)) health
from @tmp a
order by a.sno,a.gno;
--************************************************************************************************************************************
z_salb6:--z_salb6
declare @t_xmon nvarchar(20)
declare @t_bxdate nvarchar(10)
declare @t_exdate nvarchar(10)
declare @t_bsno nvarchar(20)
declare @t_esno nvarchar(20)
declare @t_xyears nvarchar(10)
set @t_bsno = case when '#non' = [4] then '' else [4] end
set @t_esno = case when '#non' = [5] then CHAR(255) else [5] end
set @t_xyears = case when '#non' = [6] then '' else [6] end
declare @tmp table(
	gno nvarchar(1),
	recno int identity(0,1),
	datea nvarchar(10),
	sno nvarchar(20),
	namea nvarchar(50),
	id nvarchar(20),
	indate nvarchar(10),
	l1 nvarchar(2),
	l2 nvarchar(2),
	l3 nvarchar(2),
	[money] int,
	ba int,
	bd int,
	bf int,
	both int,
	salary int,
	unfix int,
	totsalary int,
	sal int,
	sar int,
	sah int,
	chl int,
	chh int	
)
insert into @tmp
	select
		'0' gno,a.datea,b.noa,b.namea,b.id,b.indate,a.level1,a.level2,a.level3,a.money,a.bo_admin,a.bo_special,
		a.bo_full,a.bo_oth,a.salary,a.unfix,a.salary+a.unfix,a.sa_labor,a.sa_retire,a.sa_health,a.ch_labor,a.ch_health
	from saladjust a
	left join sss b on b.noa = a.noa
	where (b.noa between @t_bsno and @t_esno) and
			 (left(a.datea,3) = @t_xyears)
	order by b.noa,a.datea
declare @sno nvarchar(50)
declare @recno int
declare cursor_table cursor for
	select sno,max(recno) from @tmp group by sno
open cursor_table
fetch next from cursor_table
into @sno,@recno
while(@@FETCH_STATUS <> -1)
begin
	delete @tmp where (sno=@sno) and (recno < @recno)
	fetch next from cursor_table
	into @sno,@recno
end
close cursor_table
deallocate cursor_table
select
	a.gno,a.sno,a.namea,a.id,a.indate,a.l1,a.l2,a.l3,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.money),1)),4,12)) money,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.ba),1)),4,12)) ba,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.bd),1)),4,12)) bd,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.bf),1)),4,12)) bf,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.both),1)),4,12)) both,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.salary),1)),4,12)) salary,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.unfix),1)),4,12)) unfix,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.totsalary),1)),4,12)) totsalary,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.sal),1)),4,12)) sal,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.sar),1)),4,12)) sar,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.sah),1)),4,12)) sah,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.chl),1)),4,12)) chl,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.chh),1)),4,12)) chh
from @tmp a
order by a.sno;
--****************************************************************************************************************************************
z_salb7:--z_salb7
declare @t_xyears nvarchar(10)
set @t_xyears = case when '#non'=[6] then '103' else [6] end
declare @tmp table(
	gno nvarchar(10),
	pageno int,
	orderby int,
	idno int identity(0,1),
	sssno nvarchar(50),
	namea nvarchar(90),
	healthmoney int,
	health4money int,
	datea nvarchar(10),
	title nvarchar(50),
	moneya int,
	moneyb int,
	moneyc int,
	moneyd int,
	moneye int
)
insert into @tmp
	select
		'0' gno,0 pageno,0 orderby,d.noa,d.namea,isnull(c.sa_health,0),isnull(c.sa_health,0)*4,
		a.datea,a.title,b.money,0,0,0,0
	from salb a
	left join salbs b on a.noa=b.noa
	left join salinsures c on b.sssno=c.noa and a.mon=b.mon
	left join sss d on b.sssno=d.noa
	where charindex('薪資',a.title)=0 and left(a.datea,3)=@t_xyears
	order by d.noa,a.datea
declare @idno int
declare @sssno nvarchar(50)
declare @lastsssno nvarchar(50)
declare @health4money int
declare @moneya int

declare @now_money int
declare @lastmoney int
declare @flag int = 0
declare cursor_table cursor for
	select idno,sssno,health4money,moneya from @tmp
open cursor_table
fetch next from cursor_table
into @idno,@sssno,@health4money,@moneya
while(@@FETCH_STATUS <> -1)
begin
	if(@lastsssno=@sssno)
	begin
		set @lastmoney = @lastmoney+@moneya
	end
	else
	begin
		set @flag=0
		set @lastmoney = @moneya
	end
	set @now_money = @health4money-@lastmoney
	if((@now_money < 0) and (@flag=0))
	begin
		update @tmp set moneyd = @now_money*(-1) where idno=@idno
		set @flag = 1
	end
	else if((@now_money < 0) and (@flag=1))
	begin
		update @tmp set moneyd = moneya where idno=@idno
	end
	update @tmp set moneyb=@lastmoney,
							moneyc=@health4money-@lastmoney
	where idno=@idno
	set @lastsssno=@sssno
	fetch next from cursor_table
	into @idno,@sssno,@health4money,@moneya
end
close cursor_table
deallocate cursor_table
update @tmp set moneye = round(moneyd*0.02,0)


--**處理分頁 <<Start>>
----------------------------------------------------------*
declare @t_pageline int = 17 -------一頁可放幾行
----------------------------------------------------------*
declare @t_Count int = 1
declare @t_bbsCount int = 0
declare @t_idno int
declare @t_nowPage int = 1
set @lastsssno = null
select @t_bbsCount = count(*) from @tmp where (gno='0')
if(@t_bbsCount > 0)
begin
	declare cursor_table cursor for
		select idno,sssno from @tmp where (gno='0') order by gno,sssno,datea
	open cursor_table
	fetch next from cursor_table
	into @t_idno,@sssno
	while(@@FETCH_STATUS <> -1)
	begin
		if((@t_Count>=@t_pageline) or (@lastsssno!=@sssno))
		begin
			set @t_nowPage = @t_nowPage+1
			set @t_Count = 1
		end
		update @tmp set pageno=@t_nowPage,orderby=@t_Count where idno=@t_idno
		set @t_Count =@t_Count+1
		set @lastsssno=@sssno
		fetch next from cursor_table
		into @t_idno,@sssno
	end
	close cursor_table
	deallocate cursor_table
end
--**處理分頁 <<End>>
--**插入空白行 <<Start>>
declare @namea nvarchar(max)
declare @pageno int
declare @recCount int
declare cursor_table cursor for
	select pageno,sssno,namea,max(orderby) from @tmp where (gno='0') group by pageno,sssno,namea
open cursor_table
fetch next from cursor_table
into @pageno,@sssno,@namea,@recCount
while(@@FETCH_STATUS <> -1)
begin
	if(@recCount<@t_pageline)
	begin
		while(@recCount<@t_pageline)
		begin
			set @recCount = @recCount+1
			insert into @tmp(gno,sssno,namea,pageno,orderby)
				values('1',@sssno,@namea,@pageno,@recCount)
		end
	end
	fetch next from cursor_table
	into @pageno,@sssno,@namea,@recCount
end
close cursor_table
deallocate cursor_table
--**插入空白行 <<End>>
insert into @tmp(gno,pageno,orderby,sssno)
	select
		'2' gno,a.pageno,9999,a.sssno
	from @tmp a
	group by a.sssno,a.pageno
update @tmp set moneyd=null,moneye=null where moneyd=0
select
	a.gno,a.pageno,a.orderby,a.idno,a.sssno,a.namea,a.datea,a.title,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.healthmoney),1)),4,12)) healthmoney,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.health4money),1)),4,12)) health4money,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.moneya),1)),4,12)) moneya,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.moneyb),1)),4,12)) moneyb,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.moneyc),1)),4,12)) moneyc,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.moneyd),1)),4,12)) moneyd,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.moneye),1)),4,12)) moneye,
	@t_xyears t_xyear
from @tmp a
order by a.pageno,a.orderby,a.idno;
--****************************************************************************************************************************************
z_sali:--z_sali
declare @t_bsno nvarchar(20)
declare @t_esno nvarchar(20)
declare @t_xyears nvarchar(10)
declare @strNum nvarchar(max) = N'零壹貳叁肆伍陸柒捌玖'
set @t_bsno = case when '#non' = [4] then '' else [4] end 
set @t_esno = case when '#non' = [5] then CHAR(255) else [5] end 
set @t_xyears = case when '#non' = [6] then '' else [6] end 
declare @tmp table(
	gno nvarchar(1),
	noa nvarchar(20),
	namea nvarchar(50),
	years nvarchar(20),
	prefix nvarchar(10),
	fnamea nvarchar(50),
	ch_labor int,
	ch_health int,
	total int,
	comp nvarchar(50),
	serial nvarchar(20),
	boss nvarchar(10),
	addr nvarchar(max),
	m01 nvarchar(10),
	m02 nvarchar(10),
	m03 nvarchar(10),
	m04 nvarchar(10),
	m05 nvarchar(10)
)
insert into @tmp
	select
		'0' gno,a.noa, a.namea,'','本人',a.namea,sum(d.ch_labor),
		sum(d.ch_health),0,isnull(c.acomp,''),isnull(c.serial,''),isnull(c.boss,''),isnull(c.addr,''),
		'' m01,'' m02,'' m03,'' m04,'' m05
	from sss a
	left join acomp c on c.noa = a.cno
	left join salarys d on d.sno = a.noa
	where (a.noa between @t_bsno and @t_esno) and
			 (left(d.mon,3) = @t_xyears) and
			 (isnull(a.outdate,'')='' or left(a.outdate,3)>=@t_xyears)
	group by a.noa, a.namea,isnull(c.acomp,''),isnull(c.serial,''),isnull(c.boss,''),isnull(c.addr,'')
delete @tmp where isnull(ch_labor,0)+isnull(ch_labor,0)=0
insert into @tmp(gno,noa,total,comp,serial,boss,addr)
	select
		'1' gno,noa,SUM(ch_labor)+SUM(ch_health),comp,serial,boss,addr
	from @tmp
	where gno='0'
	group by noa,comp,serial,boss,addr
insert into @tmp(gno,noa,total,comp,serial,boss,addr)
	select
		'2' gno,noa,SUM(ch_labor)+SUM(ch_health),comp,serial,boss,addr
	from @tmp
	where gno='0'
	group by noa,comp,serial,boss,addr
update a  
	set m01 = substring(@strNum,cast(substring(RIGHT(REPLICATE('0', 5) + cast(CAST(total as int) as nvarchar), 5),1,1) as int)+1,1),
	m02 = substring(@strNum,cast(substring(RIGHT(REPLICATE('0', 5) + cast(CAST(total as int) as nvarchar), 5),2,1) as int)+1,1),
	m03 = substring(@strNum,cast(substring(RIGHT(REPLICATE('0', 5) + cast(CAST(total as int) as nvarchar), 5),3,1) as int)+1,1),
	m04 = substring(@strNum,cast(substring(RIGHT(REPLICATE('0', 5) + cast(CAST(total as int) as nvarchar), 5),4,1) as int)+1,1),
	m05 = substring(@strNum,cast(substring(RIGHT(REPLICATE('0', 5) + cast(CAST(total as int) as nvarchar), 5),5,1) as int)+1,1)
from @tmp a
select
	a.gno,a.noa,a.namea,a.years,a.prefix,a.fnamea,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.ch_labor),1)),4,12)) ch_labor,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.ch_health),1)),4,12)) ch_health,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.total),1)),4,12)) total,
	a.comp,a.serial,a.boss,a.addr,a.m01,a.m02,a.m03,a.m04,a.m05,@t_xyears wyear
from @tmp a
order by a.noa,a.gno;
---------------------------------------------------------------------------------------------------------*
z_sald1:--z_sald1
declare @t_bxdate nvarchar(10)
declare @t_exdate nvarchar(10)
declare @t_bsno nvarchar(20)
declare @t_esno nvarchar(20)
set @t_bxdate = case when '#non' = [2] then '' else [2] end
set @t_exdate = case when '#non' = [3] then CHAR(255) else [3] end
set @t_bsno = case when '#non' = [4] then '' else [4] end
set @t_esno = case when '#non' = [5] then CHAR(255) else [5] end
declare @tmp table(
		gno nvarchar(1),
		datea nvarchar(10),
		sno nvarchar(20),
		namea nvarchar(50),
		id nvarchar(20),
		indate nvarchar(10),
		l1 nvarchar(2),
		l2 nvarchar(2),
		l3 nvarchar(2),
		[money] int,
		ba int,
		bd int,
		bf int,
		bo int,
		both int,
		salary int,
		unfix int,
		totsalary int,
		sal int,
		sar int,
		sah int,
		chl int,
		chh	int	
)
insert into @tmp
	select
		'0' gno,a.datea,b.noa,b.namea,b.id,b.indate,a.level1,a.level2,a.level3,
		a.money,a.bo_admin,0 bo_duty,a.bo_full,0 bo_over,a.bo_oth,a.salary,
		a.unfix,a.salary+a.unfix,a.sa_labor,a.sa_retire,a.sa_health,a.ch_labor,a.ch_health
	from saladjust a
	left join sss b on b.job = a.job
	where (b.noa between @t_bsno and @t_esno) and
			 (a.datea between @t_bxdate and @t_exdate)

select
	a.gno,a.datea,a.sno,a.namea,a.id,a.indate,a.l1,a.l2,a.l3,
	a.money,a.ba,a.bd,a.bf,a.bo,a.both,a.salary,a.unfix,a.totsalary,
	a.sal,a.sar,a.sah,a.chl,a.chh,
	case when (@t_bxdate='' and @t_exdate=char(255)) then '無設定日期'
		 when (@t_bxdate!='' and @t_exdate=char(255)) then @t_bxdate+' 至 全部日期'
		 when (@t_bxdate='' and @t_exdate!=char(255)) then '全部日期 至 '+@t_exdate
		 when (@t_bxdate!='' and @t_exdate!=char(255)) then @t_bxdate
		 else @t_bxdate + ' ~ ' + @t_exdate
	end showdate	
from @tmp a
order by a.sno,a.datea;
-----------------------------------------------------------------------------------------------*
z_sali:--z_sali
declare @t_bsno nvarchar(20)
declare @t_esno nvarchar(20)
declare @t_xyears nvarchar(10)
declare @strNum nvarchar(max) = N'零壹貳叁肆伍陸柒捌玖'
set @t_bsno = case when '#non' = [4] then '' else [4] end 
set @t_esno = case when '#non' = [5] then CHAR(255) else [5] end 
set @t_xyears = case when '#non' = [6] then '' else [6] end 
declare @tmp table(
	gno nvarchar(1),
	noa nvarchar(20),
	namea nvarchar(50),
	years nvarchar(20),
	prefix nvarchar(10),
	fnamea nvarchar(50),
	ch_labor int,
	ch_health int,
	total int,
	comp nvarchar(50),
	serial nvarchar(20),
	boss nvarchar(10),
	addr nvarchar(max),
	m01 nvarchar(10),
	m02 nvarchar(10),
	m03 nvarchar(10),
	m04 nvarchar(10),
	m05 nvarchar(10)
)
insert into @tmp
	select
		'0' gno,a.noa, a.namea,'','本人',a.namea,sum(d.ch_labor),
		sum(d.ch_health),0,isnull(c.acomp,''),isnull(c.serial,''),isnull(c.boss,''),isnull(c.addr,''),
		'' m01,'' m02,'' m03,'' m04,'' m05
	from sss a
	left join acomp c on c.noa = a.cno
	left join salarys d on d.sno = a.noa
	where (a.noa between @t_bsno and @t_esno) and
			 (left(d.mon,3) = @t_xyears) and
			 (isnull(a.outdate,'')='' or left(a.outdate,3)>=@t_xyears)
	group by a.noa, a.namea,isnull(c.acomp,''),isnull(c.serial,''),isnull(c.boss,''),isnull(c.addr,'')
delete @tmp where isnull(ch_labor,0)+isnull(ch_labor,0)=0
insert into @tmp(gno,noa,total,comp,serial,boss,addr)
	select
		'1' gno,noa,SUM(ch_labor)+SUM(ch_health),comp,serial,boss,addr
	from @tmp
	where gno='0'
	group by noa,comp,serial,boss,addr
insert into @tmp(gno,noa,total,comp,serial,boss,addr)
	select
		'2' gno,noa,SUM(ch_labor)+SUM(ch_health),comp,serial,boss,addr
	from @tmp
	where gno='0'
	group by noa,comp,serial,boss,addr
update a  
	set m01 = substring(@strNum,cast(substring(RIGHT(REPLICATE('0', 5) + cast(CAST(total as int) as nvarchar), 5),1,1) as int)+1,1),
	m02 = substring(@strNum,cast(substring(RIGHT(REPLICATE('0', 5) + cast(CAST(total as int) as nvarchar), 5),2,1) as int)+1,1),
	m03 = substring(@strNum,cast(substring(RIGHT(REPLICATE('0', 5) + cast(CAST(total as int) as nvarchar), 5),3,1) as int)+1,1),
	m04 = substring(@strNum,cast(substring(RIGHT(REPLICATE('0', 5) + cast(CAST(total as int) as nvarchar), 5),4,1) as int)+1,1),
	m05 = substring(@strNum,cast(substring(RIGHT(REPLICATE('0', 5) + cast(CAST(total as int) as nvarchar), 5),5,1) as int)+1,1)
from @tmp a
select
	a.gno,a.noa,a.namea,a.years,a.prefix,a.fnamea,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.ch_labor),1)),4,12)) ch_labor,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.ch_health),1)),4,12)) ch_health,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.total),1)),4,12)) total,
	a.comp,a.serial,a.boss,a.addr,a.m01,a.m02,a.m03,a.m04,a.m05,@t_xyears wyear
from @tmp a
order by a.noa,a.gno;
---------------------------------------------------------------------------------------------------------------------------------------
z_salb8:--z_salb8
declare @t_bsno nvarchar(20)
declare @t_esno nvarchar(20)
declare @t_xyears nvarchar(10)
set @t_bsno = case when '#non' = [4] then '' else [4] end
set @t_esno = case when '#non' = [5] then CHAR(255) else [5] end
set @t_xyears = case when '#non' = [6] then '' else [6] end

declare @tmp table(
	gno nvarchar(1),
	cno nvarchar(50),
	sssno nvarchar(50),
	years nvarchar(50),
	mon nvarchar(20),
	taxno nvarchar(50),
	addr_rent nvarchar(MAX),
	serial nvarchar(50),
	taxport nvarchar(50),
	wtno nvarchar(50),
	typea nvarchar(50),
	typeb nvarchar(50),
	typec nvarchar(50),
	id nvarchar(50),
	passportno nvarchar(50),
	n1 nvarchar(50),
	n2 nvarchar(50),
	y1 nvarchar(50),
	y2 nvarchar(50),
	m1 nvarchar(50),
	m2 nvarchar(50),
	namea nvarchar(50),
	addr_home nvarchar(MAX),
	retire float,
	total float,
	rate float,
	tax float,
	net float,
	acomp nvarchar(50),
	acomp_addr nvarchar(50),
	boss nvarchar(50)
)

insert @tmp
select '1',b.cno,b.sssno,left(a.mon,3),a.mon,c.taxno,c.addr_rent,d.serial,d.taxport,'',b.typea,b.typeb,b.typec,c.id,c.passportno
,(case when isnull(c.ishouse,0)=0 then '' else 'V' end) n1,(case when isnull(c.ishouse,0)=0 then 'V' else '' end) n2,'','','',''
,c.namea,c.addr_home,b.retire,b.money total,0,b.tax,b.money-b.tax net,d.acomp,d.addr acomp_addr,d.boss
from salb a left join salbs b on a.noa=b.noa left join sss c on b.sssno=c.noa left join acomp d on b.cno=d.noa
where (b.sssno between @t_bsno and @t_esno) and (len(@t_xyears)=0 or left(a.mon,3)=@t_xyears)
order by b.cno,b.sssno

insert @tmp
select '0',cno,sssno,MAX(years),'',taxno,addr_rent,serial,taxport,'A01'+MAX(years)+(right('00000'+cast(ROW_NUMBER() over(order by cno,typea,typeb,typec,sssno)as nvarchar(50)),5))--+serial
,typea,typeb,typec,id,passportno,n1,n2,MIN(years),MAX(years),MIN(mon),MAX(mon)
,namea,addr_home,SUM(retire),SUM(total),round(SUM(tax)/SUM(total)*100,0),SUM(tax),SUM(net),acomp,acomp_addr,boss
from @tmp
group by cno,sssno,taxno,addr_rent,serial,taxport,typea,typeb,typec,id,passportno,n1,n2,namea,addr_home,acomp,acomp_addr,boss

update @tmp
set m1=RIGHT(m1,2),m2=RIGHT(m2,2)

select 
case when retire=0 then null else dbo.getComma(retire,0) end retire,
case when rate=0 then null else dbo.getComma(rate,0)+'%' end rate,
case when tax=0 then null else dbo.getComma(tax,0) end tax,
dbo.getComma(total,0) total,
dbo.getComma(net,0) net,
* 
from @tmp where gno='0' order by cno,typea,typeb,typec,sssno
;
----------------------------------------------------------------------------------------------------------------------------------------
z_salb9:--z_salb9
declare @t_xyears nvarchar(10)
set @t_xyears = case when '#non' = [6] then '' else [6] end

declare @tmp table(
	gno nvarchar(1),
	noa nvarchar(50), --檔案編號
	taxportname nvarchar(MAX),
	years nvarchar(50),
	cno nvarchar(50),
	taxport nvarchar(50),
	taxno nvarchar(50),
	houseno nvarchar(50),
	serial nvarchar(50),
	acomp nvarchar(50),
	tel nvarchar(50),
	acomp_addr nvarchar(50),
	boss nvarchar(50),
	aconn nvarchar(50),
	atel nvarchar(100),
	
	c31 float,
	b31 nvarchar(50),
	e31 nvarchar(50),
	m31 float,
	t31 float,
	c32 float,
	b32 nvarchar(50),
	e32 nvarchar(50),
	m32 float,
	t32 float,
	
	c211 float,
	b211 nvarchar(50),
	e211 nvarchar(50),
	m211 float,
	t211 float,
	c212 float,
	b212 nvarchar(50),
	e212 nvarchar(50),
	m212 float,
	t212 float,
	
	c221 float,
	b221 nvarchar(50),
	e221 nvarchar(50),
	m221 float,
	t221 float,
	c222 float,
	b222 nvarchar(50),
	e222 nvarchar(50),
	m222 float,
	t222 float,
	
	c41 float,
	b41 nvarchar(50),
	e41 nvarchar(50),
	m41 float,
	t41 float,
	c42 float,
	b42 nvarchar(50),
	e42 nvarchar(50),
	m42 float,
	t42 float,
	
	c511 float,
	b511 nvarchar(50),
	e511 nvarchar(50),
	m511 float,
	t511 float,
	c512 float,
	b512 nvarchar(50),
	e512 nvarchar(50),
	m512 float,
	t512 float,
	
	c521 float,
	b521 nvarchar(50),
	e521 nvarchar(50),
	m521 float,
	t521 float,
	c522 float,
	b522 nvarchar(50),
	e522 nvarchar(50),
	m522 float,
	t522 float,
	
	c111 float,
	b111 nvarchar(50),
	e111 nvarchar(50),
	m111 float,
	t111 float,
	c112 float,
	b112 nvarchar(50),
	e112 nvarchar(50),
	m112 float,
	t112 float,
	
	c121 float,
	b121 nvarchar(50),
	e121 nvarchar(50),
	m121 float,
	t1211 float,
	t1212 float,
	c122 float,
	b122 nvarchar(50),
	e122 nvarchar(50),
	m122 float,
	t1221 float,
	t1222 float,
	
	c131 float,
	b131 nvarchar(50),
	e131 nvarchar(50),
	m131 float,
	t131 float,
	c132 float,
	b132 nvarchar(50),
	e132 nvarchar(50),
	m132 float,
	t132 float,
	
	c81 float,
	b81 nvarchar(50),
	e81 nvarchar(50),
	m81 float,
	t81 float,
	c82 float,
	b82 nvarchar(50),
	e82 nvarchar(50),
	m82 float,
	t82 float,
	
	c91 float,
	b91 nvarchar(50),
	e91 nvarchar(50),
	m91 float,
	t91 float,
	c92 float,
	b92 nvarchar(50),
	e92 nvarchar(50),
	m92 float,
	t92 float,
	
	ca1 float,
	ba1 nvarchar(50),
	ea1 nvarchar(50),
	ma1 float,
	ta1 float,
	ca2 float,
	ba2 nvarchar(50),
	ea2 nvarchar(50),
	ma2 float,
	ta2 float,
	
	ct1 float,
	mt1 float,
	tt11 float,
	tt12 float,
	ct2 float,
	mt2 float,
	tt21 float,
	tt22 float,
	
	rtotal float,
	coumt float,
	total float,
	
	y1 nvarchar(50),
	y2 nvarchar(50),
	y3 nvarchar(50),
	m1 nvarchar(50),
	m2 nvarchar(50),
	m3 nvarchar(50),
	d1 nvarchar(50),
	d2 nvarchar(50),
	d3 nvarchar(50)
)

insert @tmp
select '0','A110000ZZ00001',a.taxportname,@t_xyears,a.noa,a.taxport,a.taxno
,a.houseno,a.serial,a.acomp,a.tel,a.addr,a.boss,a.accconn,a.acctel
--3
,isnull((select COUNT(*) from (select sssno from salb sa left join salbs sb on sa.noa=sb.noa where left(sa.mon,3)=@t_xyears and sb.cno=a.noa and sb.typea='50' group by sssno)tmp ),0)
,'',''
,isnull((select SUM(sb.money) from salb sa left join salbs sb on sa.noa=sb.noa where left(sa.mon,3)=@t_xyears and sb.cno=a.noa and sb.typea='50' ),0)
,isnull((select SUM(sb.tax) from salb sa left join salbs sb on sa.noa=sb.noa where left(sa.mon,3)=@t_xyears and sb.cno=a.noa and sb.typea='50' ),0)
,0,'','',0,0
--21
,isnull((select COUNT(*) from (select sssno from salb sa left join salbs sb on sa.noa=sb.noa where left(sa.mon,3)=@t_xyears and sb.cno=a.noa and sb.typea='9A' group by sssno)tmp ),0)
,'',''
,isnull((select SUM(sb.money) from salb sa left join salbs sb on sa.noa=sb.noa where left(sa.mon,3)=@t_xyears and sb.cno=a.noa and sb.typea='9A' ),0)
,isnull((select SUM(sb.tax) from salb sa left join salbs sb on sa.noa=sb.noa where left(sa.mon,3)=@t_xyears and sb.cno=a.noa and sb.typea='9A' ),0)
,0,'','',0,0
--22
,isnull((select COUNT(*) from (select sssno from salb sa left join salbs sb on sa.noa=sb.noa where left(sa.mon,3)=@t_xyears and sb.cno=a.noa and sb.typea='9B' group by sssno)tmp ),0)
,'',''
,isnull((select SUM(sb.money) from salb sa left join salbs sb on sa.noa=sb.noa where left(sa.mon,3)=@t_xyears and sb.cno=a.noa and sb.typea='9B' ),0)
,isnull((select SUM(sb.tax) from salb sa left join salbs sb on sa.noa=sb.noa where left(sa.mon,3)=@t_xyears and sb.cno=a.noa and sb.typea='9B' ),0)
,0,'','',0,0
--4
,isnull((select COUNT(*) from (select sssno from salb sa left join salbs sb on sa.noa=sb.noa where left(sa.mon,3)=@t_xyears and sb.cno=a.noa and sb.typea in ('52','5A','5B','5C','60','61') group by sssno)tmp ),0)
,'',''
,isnull((select SUM(sb.money) from salb sa left join salbs sb on sa.noa=sb.noa where left(sa.mon,3)=@t_xyears and sb.cno=a.noa and sb.typea in ('52','5A','5B','5C','60','61') ),0)
,isnull((select SUM(sb.tax) from salb sa left join salbs sb on sa.noa=sb.noa where left(sa.mon,3)=@t_xyears and sb.cno=a.noa and sb.typea in ('52','5A','5B','5C','60','61') ),0)
,0,'','',0,0
--51
,isnull((select COUNT(*) from (select sssno from salb sa left join salbs sb on sa.noa=sb.noa where left(sa.mon,3)=@t_xyears and sb.cno=a.noa and sb.typea='51' group by sssno)tmp ),0)
,'',''
,isnull((select SUM(sb.money) from salb sa left join salbs sb on sa.noa=sb.noa where left(sa.mon,3)=@t_xyears and sb.cno=a.noa and sb.typea='51' ),0)
,isnull((select SUM(sb.tax) from salb sa left join salbs sb on sa.noa=sb.noa where left(sa.mon,3)=@t_xyears and sb.cno=a.noa and sb.typea='51' ),0)
,0,'','',0,0
--52
,isnull((select COUNT(*) from (select sssno from salb sa left join salbs sb on sa.noa=sb.noa where left(sa.mon,3)=@t_xyears and sb.cno=a.noa and sb.typea='53' group by sssno)tmp ),0)
,'',''
,isnull((select SUM(sb.money) from salb sa left join salbs sb on sa.noa=sb.noa where left(sa.mon,3)=@t_xyears and sb.cno=a.noa and sb.typea='53' ),0)
,isnull((select SUM(sb.tax) from salb sa left join salbs sb on sa.noa=sb.noa where left(sa.mon,3)=@t_xyears and sb.cno=a.noa and sb.typea='53' ),0)
,0,'','',0,0
--11
,isnull((select COUNT(*) from (select sssno from salb sa left join salbs sb on sa.noa=sb.noa where left(sa.mon,3)=@t_xyears and sb.cno=a.noa and sb.typea='54' and sb.typeb in ('',' ','A','B','I','J','K','L') group by sssno)tmp ),0)
,'',''
,isnull((select SUM(sb.money) from salb sa left join salbs sb on sa.noa=sb.noa where left(sa.mon,3)=@t_xyears and sb.cno=a.noa and sb.typea='54' and sb.typeb in ('',' ','A','B','I','J','K','L')),0)
,isnull((select SUM(sb.tax) from salb sa left join salbs sb on sa.noa=sb.noa where left(sa.mon,3)=@t_xyears and sb.cno=a.noa and sb.typea='54' and sb.typeb in ('',' ','A','B','I','J','K','L') ),0)
,0,'','',0,0
--12
,isnull((select COUNT(*) from (select sssno from salb sa left join salbs sb on sa.noa=sb.noa where left(sa.mon,3)=@t_xyears and sb.cno=a.noa and sb.typea='54' and sb.typeb in ('C','F','D','E','G','H','P','Q') group by sssno)tmp ),0)
,'',''
,isnull((select SUM(sb.money) from salb sa left join salbs sb on sa.noa=sb.noa where left(sa.mon,3)=@t_xyears and sb.cno=a.noa and sb.typea='54' and sb.typeb in ('C','F','D','E','G','H','P','Q')),0)
,isnull((select SUM(sb.tax) from salb sa left join salbs sb on sa.noa=sb.noa where left(sa.mon,3)=@t_xyears and sb.cno=a.noa and sb.typea='54' and sb.typeb in ('C','F','D','E','G','H','P','Q') ),0)
,isnull((select SUM(sb.tax2) from salb sa left join salbs sb on sa.noa=sb.noa where left(sa.mon,3)=@t_xyears and sb.cno=a.noa and sb.typea='54' and sb.typeb in ('C','F','D','E','G','H','P','Q') ),0)
,0,'','',0,0,0
--13
,isnull((select COUNT(*) from (select sssno from salb sa left join salbs sb on sa.noa=sb.noa where left(sa.mon,3)=@t_xyears and sb.cno=a.noa and sb.typea='54' and sb.typeb in ('M','N','Y') group by sssno)tmp ),0)
,'',''
,isnull((select SUM(sb.money) from salb sa left join salbs sb on sa.noa=sb.noa where left(sa.mon,3)=@t_xyears and sb.cno=a.noa and sb.typea='54' and sb.typeb in ('M','N','Y')),0)
,isnull((select SUM(sb.tax) from salb sa left join salbs sb on sa.noa=sb.noa where left(sa.mon,3)=@t_xyears and sb.cno=a.noa and sb.typea='54' and sb.typeb in ('M','N','Y') ),0)
,0,'','',0,0
--8
,isnull((select COUNT(*) from (select sssno from salb sa left join salbs sb on sa.noa=sb.noa where left(sa.mon,3)=@t_xyears and sb.cno=a.noa and sb.typea='91' group by sssno)tmp ),0)
,'',''
,isnull((select SUM(sb.money) from salb sa left join salbs sb on sa.noa=sb.noa where left(sa.mon,3)=@t_xyears and sb.cno=a.noa and sb.typea='91' ),0)
,isnull((select SUM(sb.tax) from salb sa left join salbs sb on sa.noa=sb.noa where left(sa.mon,3)=@t_xyears and sb.cno=a.noa and sb.typea='91' ),0)
,0,'','',0,0
--9
,isnull((select COUNT(*) from (select sssno from salb sa left join salbs sb on sa.noa=sb.noa where left(sa.mon,3)=@t_xyears and sb.cno=a.noa and sb.typea='93' group by sssno)tmp ),0)
,'',''
,isnull((select SUM(sb.money) from salb sa left join salbs sb on sa.noa=sb.noa where left(sa.mon,3)=@t_xyears and sb.cno=a.noa and sb.typea='93' ),0)
,isnull((select SUM(sb.tax) from salb sa left join salbs sb on sa.noa=sb.noa where left(sa.mon,3)=@t_xyears and sb.cno=a.noa and sb.typea='93' ),0)
,0,'','',0,0
--A
,isnull((select COUNT(*) from (select sssno from salb sa left join salbs sb on sa.noa=sb.noa where left(sa.mon,3)=@t_xyears and sb.cno=a.noa and sb.typea in ('90','92','94','95','96','97') group by sssno)tmp ),0)
,'',''
,isnull((select SUM(sb.money) from salb sa left join salbs sb on sa.noa=sb.noa where left(sa.mon,3)=@t_xyears and sb.cno=a.noa and sb.typea in ('90','92','94','95','96','97')),0)
,isnull((select SUM(sb.tax) from salb sa left join salbs sb on sa.noa=sb.noa where left(sa.mon,3)=@t_xyears and sb.cno=a.noa and sb.typea in ('90','92','94','95','96','97')),0)
,0,'','',0,0
--總計
,0,0,0,0,0,0,0,0
,isnull((select SUM(sb.retire) from salb sa left join salbs sb on sa.noa=sb.noa where left(sa.mon,3)=@t_xyears and sb.cno=a.noa ),0)
,0,0
,@t_xyears
,@t_xyears
,'   '
,isnull((select MIN(sa.mon) from salb sa left join salbs sb on sa.noa=sb.noa where left(sa.mon,3)=@t_xyears and sb.cno=a.noa ),'')
,isnull((select MAX(sa.mon) from salb sa left join salbs sb on sa.noa=sb.noa where left(sa.mon,3)=@t_xyears and sb.cno=a.noa ),'')
,'   ','01','31','   '
from acomp a

delete @tmp where m1='' and m2=''

update @tmp
set ct1=c31+c211+c221+c41+c511+c521+c111+c121+c131+c81+c91+ca1
,mt1=m31+m211+m221+m41+m511+m521+m111+m121+m131+m81+m91+ma1
,tt11=t31+t211+t221+t41+t511+t521+t111+t1211+t131+t81+t91+ta1
,tt12=t1212
,ct2=c32+c212+c222+c42+c512+c522+c112+c122+c132+c82+c92+ca2
,mt2=m32+m212+m222+m42+m512+m522+m112+m122+m132+m82+m92+ma2
,tt21=t32+t212+t222+t42+t512+t522+t112+t1212+t132+t82+t92+ta2
,tt22=t1222
,d2=dbo.q_lastday(m2+'/01')
,m1=RIGHT(m1,2)
,m2=RIGHT(m2,2)

select * from @tmp order by cno
;
---------------------------------------------------------------------------------------------------------------------------------------
z_salb10:--z_salb10
declare @t_xyears nvarchar(10)
set @t_xyears = case when '#non' = [6] then '' else [6] end

declare @tmp table(
	gno nvarchar(1),
	cno nvarchar(50),
	sssno nvarchar(50),
	years nvarchar(50),
	mon nvarchar(20),
	taxno nvarchar(50),
	addr_rent nvarchar(MAX),
	serial nvarchar(50),
	taxport nvarchar(50),
	wtno nvarchar(50),
	typea nvarchar(50),
	typeb nvarchar(50),
	typec nvarchar(50),
	id nvarchar(50),
	passportno nvarchar(50),
	n1 nvarchar(50),
	n2 nvarchar(50),
	y1 nvarchar(50),
	y2 nvarchar(50),
	m1 nvarchar(50),
	m2 nvarchar(50),
	namea nvarchar(50),
	addr_home nvarchar(MAX),
	retire float,
	total float,
	rate float,
	tax float,
	net float,
	acomp nvarchar(50),
	acomp_addr nvarchar(50),
	boss nvarchar(50)
)

insert @tmp
select '1',b.cno,b.sssno,left(a.mon,3),a.mon,c.taxno,c.addr_rent,d.serial,d.taxport,'',b.typea,b.typeb,b.typec,c.id,c.passportno
,(case when isnull(c.ishouse,0)=0 then '' else 'V' end) n1,(case when isnull(c.ishouse,0)=0 then 'V' else '' end) n2,'','','',''
,c.namea,c.addr_home,b.retire,b.money total,0,b.tax,b.money-b.tax net,d.nick,d.addr acomp_addr,d.boss
from salb a left join salbs b on a.noa=b.noa left join sss c on b.sssno=c.noa left join acomp d on b.cno=d.noa
where (len(@t_xyears)=0 or left(a.mon,3)=@t_xyears)
order by b.cno,b.sssno

insert @tmp
select '0',cno,sssno,MAX(years),'',taxno,addr_rent,serial,taxport,'A01'+MAX(years)+(right('00000'+cast(ROW_NUMBER() over(order by cno,typea,typeb,typec,sssno)as nvarchar(50)),5))--+serial
,typea,typeb,typec,id,passportno,n1,n2,MIN(years),MAX(years),MIN(mon),MAX(mon)
,namea,addr_home,SUM(retire),SUM(total),round(SUM(tax)/SUM(total)*100,0),SUM(tax),SUM(net),acomp,acomp_addr,boss
from @tmp
group by cno,sssno,taxno,addr_rent,serial,taxport,typea,typeb,typec,id,passportno,n1,n2,namea,addr_home,acomp,acomp_addr,boss


select 
left(acomp,5) acomp,
case when retire=0 then null else dbo.getComma(retire,0) end retire,
case when rate=0 then null else dbo.getComma(rate,0)+'%' end rate,
dbo.getComma(tax,0) tax,
dbo.getComma(total,0) total,
dbo.getComma(net,0) net,
* 
from @tmp where gno='0' order by cno,typea,typeb,typec,sssno
;