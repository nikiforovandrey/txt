z_salb1:--z_salb1
declare @t_xmon nvarchar(20)
set @t_xmon = case when '#non' = [1] then '' else [1] end
declare @tmp table(
	gno nvarchar(1),
	noa nvarchar(30),
	noq nvarchar(20),
	mon nvarchar(10),
	typea nvarchar(20),
	datea nvarchar(10),
	sex nvarchar(5),
	namea nvarchar(50),
	home_addr nvarchar(40),
	id nvarchar(10),
	v nvarchar(1),
	mo int,
	adm int,
	chl int,
	total int,
	mi_total int,
	tax int
)
insert into @tmp
	select
		'0' gno,b.noa,b.noq,a.mon,ISNULL(c.typea,''),a.datea,
		(case when b.sex='1' then '男' else '女' end),b.namea,
		b.addr,b.id,(case when b.isclerk = 1 then 'V' else '' end),b.mount,
		b.ad_money,b.ch_meal,b.money,b.mi_money,ISNULL(null,0)
	from salb a
	left join salbs b on b.noa = a.noa
	left join salary c on c.mon = a.mon
	where (LEN(@t_xmon)= 0 or a.mon = @t_xmon)

insert into @tmp(gno,mon,mo,adm,chl,total,mi_total,tax)
	select '1' gno,mon,0,sum(adm),sum(chl),sum(total),0,SUM(tax)
	from @tmp
	group by mon
select
	gno,noa,noq,mon,typea,datea,sex,namea,home_addr,id,v,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,mo),1)),4,12)) mo,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,adm),1)),4,12)) adm,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,chl),1)),4,12)) chl,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,total),1)),4,12)) total,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,mi_total),1)),4,12)) mi_total,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,tax),1)),4,12)) tax
from @tmp
order by mon,gno,noa;
--**********************************************************************************************
z_salb2:--z_salb2
declare @t_xyears nvarchar(10)
set @t_xyears = case when '#non' = [6] then '' else [6] end
declare @cmb table (
	noa nvarchar(20),
	m int,
	sal int,
	adm int,
	sachl int,
	b int,
	sbl int,
	bdm int,
	sbchl int
)
insert into @cmb
	select
		noa,
		SUM(case when isclerk = 1 then 1 else 0 end) m,
		SUM(case when isclerk=1 then money else 0  end) sal,
		SUM(case when isclerk = 1 then ad_money else 0  end) adm,
		SUM(case when isclerk = 1 then ch_meal else 0  end) sachl,
		SUM(case when isclerk = 0 then 1 else 0  end) b,
		SUM(case when isclerk=0 then money else 0  end) sbl,
		SUM(case when isclerk = 0 then ad_money else 0  end) bdm,
		SUM(case when isclerk = 0 then ch_meal else 0  end) sbchl
	from salbs 
	group by noa
declare @tmp table(
	gno nvarchar(1),
	years nvarchar(3),
	mon nvarchar(6),
	datea nvarchar(10),
	typea nvarchar(10),
	m int,
	b int,
	sal int,
	sbl int,
	adm int,
	bdm int,
	sachl int,
	sbchl int,
	sam int,
	sat int,
	satax int,
	sbm int,
	sbt int,
	sbtax int
)
insert into @tmp
	select
		'0' gno,LEFT(a.mon,3),a.mon,a.datea,
		ISNULL(c.mon,'')+ISNULL(c.typea,''),b.m,b.b,b.sal,b.sbl,b.adm,b.bdm,b.sachl,b.sbchl,
		0,0,0,0,0,0
	from salb a
	left join @cmb b on b.noa = a.noa 
	left join salary c on c.mon = a.mon
	where (LEN(@t_xyears)=0 or LEFT(a.mon,3)=@t_xyears)
insert into @tmp(gno,years,mon,datea,typea,m,sal,adm,sbchl,sam,sat,satax)
	select
		'1' gno,years,mon,datea,typea,
		sum((isnull(m,0)+isnull(b,0))),
		sum((isnull(sal,0)+isnull(sbl,0))),
		sum((isnull(adm,0)+isnull(bdm,0))),
		sum((isnull(sachl,0)+isnull(sbchl,0))),
		sum((isnull(sam,0)+isnull(sbm,0))),
		sum((isnull(sat,0)+isnull(sbt,0))),
		sum((isnull(satax,0)+isnull(sbtax,0)))
	from @tmp
	group by years,mon,datea,typea
select
	a.gno,a.years,a.mon,a.datea,a.typea,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.m),1)),4,12)) m,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.b),1)),4,12)) b,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.sal),1)),4,12)) sal,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.sbl),1)),4,12)) sbl,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.adm),1)),4,12)) adm,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.bdm),1)),4,12)) bdm,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.sachl),1)),4,12)) sachl,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.sbchl),1)),4,12)) sbchl,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.sam),1)),4,12)) sam,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.sat),1)),4,12)) sat,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.satax),1)),4,12)) satax,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.sbm),1)),4,12)) sbm,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.sbt),1)),4,12)) sbt,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.sbtax),1)),4,12)) sbtax
from @tmp a
order by a.years,a.mon,a.datea,a.typea,a.gno;
--************************************************************************************************
z_salb3:--z_salb3
declare @t_bxdate nvarchar(10)
declare @t_exdate nvarchar(10)
declare @t_bsno nvarchar(20)
declare @t_esno nvarchar(20)
set @t_bxdate = case when '#non' = [2] then '' else [2] end
set @t_exdate = case when '#non' = [3] then CHAR(255) else [3] end
set @t_bsno = case when '#non' = [4] then '' else [4] end
set @t_esno = case when '#non' = [5] then CHAR(255) else [5] end
declare @tmp table(
	gno nvarchar(1),
	noa nvarchar(30),
	noq nvarchar(20),
	datea nvarchar(10),
	years nvarchar(3),
	typea nvarchar(10),
	sno nvarchar(20),
	namea nvarchar(50),
	addr nvarchar(50),
	id nvarchar(10),
	mount int,
	adm int,
	chl int,
	total int,
	mit int
)
insert into @tmp
	select
		'0' gno,a.noa,b.noq,a.datea,LEFT(a.mon,3),isnull(c.mon,'')+isnull(c.typea,''),b.sssno,b.namea,b.addr,
		b.id,b.mount,b.ad_money,b.ch_meal,b.money,b.mi_money
	from salb a
	left join salbs b on b.noa = a.noa
	left join salary  c on c.mon = a.mon
	where (ISNULL(a.datea,'') between @t_bxdate and @t_exdate) and
			 (isnull(b.sssno,'') between @t_bsno and @t_esno)

insert into @tmp(gno,sno,adm,chl,total,mit)
	select
		'1' gno,sno,sum(adm),sum(chl),sum(total),SUM(mit)
	from @tmp
	group by sno
select
	a.gno,a.noa,a.noq,a.datea,a.years,a.typea,a.sno,a.namea,a.addr,a.id,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.mount),1)),4,12)) mount,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.adm),1)),4,12)) adm,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.chl),1)),4,12)) chl,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.total),1)),4,12)) total,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.mit),1)),4,12)) mit
from @tmp a
order by a.sno,a.gno;
--***************************************************************************************************************
z_salb3a:--z_salb3a
declare @t_bxdate nvarchar(10)
declare @t_exdate nvarchar(10)
declare @t_bsno nvarchar(20)
declare @t_esno nvarchar(20)
set @t_bxdate = case when '#non' = [2] then '' else [2] end
set @t_exdate = case when '#non' = [3] then CHAR(255) else [3] end
set @t_bsno = case when '#non' = [4] then '' else [4] end
set @t_esno = case when '#non' = [5] then CHAR(255) else [5] end
declare @cmp table(
	id nvarchar(10),
	total int,
	mi_total int,
	moneys int
)
insert into @cmp
	select
		id,SUM(money),SUM(mi_money),SUM(money)-SUM(mi_money)
	from salbs
	group by id
declare @tmp table(
	gno nvarchar(1),
	noa nvarchar(20),
	noq nvarchar(30),
	datea nvarchar(10),
	id nvarchar(10),
	sno nvarchar(20),
	namea nvarchar(50),
	mount int,
	total int,
	mi_rate int,
	mitotal int,
	moneys int
)
insert into @tmp
	select
		'0' gno,a.noa,a.noq,b.datea,a.id,a.sssno,a.namea,a.mount,
		ISNULL(c.total,''),0,ISNULL(c.mi_total,0),ISNULL(c.moneys,0)
	from salbs a
	left join salb b on b.noa = a.noa
	left join @cmp c on c.id = a.id
	where (b.datea between @t_bxdate and @t_exdate) and
			 (a.sssno between @t_bsno and @t_esno)
insert into @tmp(gno,total,mitotal,moneys)
	select
		'1' gno,sum(total),sum(mitotal),sum(moneys)
	from @tmp
	where gno='0'
select
	a.gno,a.noa,a.noq,a.datea,a.id,a.sno,a.namea,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.mount),1)),4,12)) mount,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.total),1)),4,12)) total,
	a.mi_rate,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.mitotal),1)),4,12)) mitotal,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.moneys),1)),4,12)) moneys
from @tmp a
order by a.gno,a.id;
--******************************************************************************************************************
z_salb4:--z_salb4
declare @t_xyears nvarchar(10)
set @t_xyears = case when '#non' = [6] then '' else [6] end
declare @cmb table(
	noa nvarchar(20),
	adm int,
	chl int,
	total int,
	mit int
)
insert into @cmb
	select
		a.noa,SUM(b.ad_money),SUM(b.ch_meal),SUM(b.money),SUM(b.mi_money)
	from salb a
	left join salbs b on b.noa = a.noa
	group by a.noa
declare @tmp table(
	gno nvarchar(1),
	noa nvarchar(30),
	datea nvarchar(10),
	typea nvarchar(20),
	years nvarchar(3), 
	adm int,
	chl int,
	total int,
	mit int
)
insert into @tmp
	select
		'0' gno,a.noa,a.datea,b.mon+b.typea,LEFT(b.mon,3),
		isnull(c.adm,0),ISNULL(c.chl,0),ISNULL(c.total,0),ISNULL(c.mit,0)
	from salb a
	left join salary b on b.mon = a.mon
	left join @cmb c on c.noa = a.noa
	where (LEN(@t_xyears)=0 or left(a.mon,3) = @t_xyears )
insert into @tmp(gno,adm,chl,total,mit)
	select '1' gno,sum(adm),sum(chl),sum(total),sum(mit)
from @tmp
select
	a.gno,a.noa,a.datea,a.typea,a.years,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.adm),1)),4,12)) adm,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.chl),1)),4,12)) chl,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.total),1)),4,12)) total,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.mit),1)),4,12)) mit
from @tmp a;
--*********************************************************************************************************************************
z_salb5:--z_salb5
declare @t_bsno nvarchar(20)
declare @t_esno nvarchar(20)
declare @t_xyears nvarchar(10)
set @t_bsno = case when '#non' = [4] then '' else [4] end
set @t_esno = case when '#non' = [5] then CHAR(255) else [5] end
set @t_xyears = case when '#non' = [6] then '' else [6] end
declare @tmp table(
	gno nvarchar(1),
	sno nvarchar(20),
	namea nvarchar(50),
	id nvarchar(20),
	addr nvarchar(50),
	indate nvarchar(10),
	job nvarchar(20),
	datea nvarchar(10),
	l1 nvarchar(2),
	l2 nvarchar(2),
	l3 nvarchar(2),
	[money] int,
	ba int,
	bd int,
	bf int,
	both int,
	salary int,
	unfix int,
	tot_salary int,
	sa_labor int,
	sa_health int,
	ch_labor int,
	health int	
)
insert into @tmp
	select '0' gno,b.noa,b.namea,b.id,b.addr_home,b.indate,b.job,a.datea,
	a.level1,a.level2,a.level3,a.money,a.bo_admin,a.bo_special,a.bo_full,a.bo_oth,
	a.salary,a.unfix,a.salary+a.unfix,a.sa_labor,a.sa_health,a.ch_labor,a.ch_health
	from saladjust a
	left join sss b on b.job = a.job
	where b.noa between @t_bsno and @t_esno

insert into @tmp(gno,sno,sa_labor,sa_health,ch_labor,health)
	select
		'1' gno,sno,sum(sa_labor),sum(sa_health),sum(ch_labor),sum(health)	
	from @tmp
	group by sno
select
	a.gno,a.sno,a.namea,a.id,a.addr,a.indate,a.job,a.datea,a.l1,a.l2,a.l3,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.money),1)),4,12)) money,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.ba),1)),4,12)) ba,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.bd),1)),4,12)) bd,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.bf),1)),4,12)) bf,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.both),1)),4,12)) both,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.salary),1)),4,12)) salary,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.unfix),1)),4,12)) unfix,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.tot_salary),1)),4,12)) tot_salary,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.sa_labor),1)),4,12)) sa_labor,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.sa_health),1)),4,12)) sa_health,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.ch_labor),1)),4,12)) ch_labor,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.health),1)),4,12)) health
from @tmp a
order by a.sno,a.gno;
--************************************************************************************************************************************
z_salb6:--z_salb6
declare @t_xmon nvarchar(20)
declare @t_bxdate nvarchar(10)
declare @t_exdate nvarchar(10)
declare @t_bsno nvarchar(20)
declare @t_esno nvarchar(20)
declare @t_xyears nvarchar(10)
set @t_bsno = case when '#non' = [4] then '' else [4] end
set @t_esno = case when '#non' = [5] then CHAR(255) else [5] end
set @t_xyears = case when '#non' = [6] then '' else [6] end
declare @tmp table(
	gno nvarchar(1),
	recno int identity(0,1),
	datea nvarchar(10),
	sno nvarchar(20),
	namea nvarchar(50),
	id nvarchar(20),
	indate nvarchar(10),
	l1 nvarchar(2),
	l2 nvarchar(2),
	l3 nvarchar(2),
	[money] int,
	ba int,
	bd int,
	bf int,
	both int,
	salary int,
	unfix int,
	totsalary int,
	sal int,
	sar int,
	sah int,
	chl int,
	chh int	
)
insert into @tmp
	select
		'0' gno,a.datea,b.noa,b.namea,b.id,b.indate,a.level1,a.level2,a.level3,a.money,a.bo_admin,a.bo_special,
		a.bo_full,a.bo_oth,a.salary,a.unfix,a.salary+a.unfix,a.sa_labor,a.sa_retire,a.sa_health,a.ch_labor,a.ch_health
	from saladjust a
	left join sss b on b.job = a.job
	where (b.noa between @t_bsno and @t_esno) and
			 (left(a.datea,3) = @t_xyears)
	order by b.noa,a.datea
declare @sno nvarchar(50)
declare @recno int
declare cursor_table cursor for
	select sno,max(recno) from @tmp group by sno
open cursor_table
fetch next from cursor_table
into @sno,@recno
while(@@FETCH_STATUS <> -1)
begin
	delete @tmp where (sno=@sno) and (recno < @recno)
	fetch next from cursor_table
	into @sno,@recno
end
close cursor_table
deallocate cursor_table
select
	a.gno,a.sno,a.namea,a.id,a.indate,a.l1,a.l2,a.l3,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.money),1)),4,12)) money,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.ba),1)),4,12)) ba,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.bd),1)),4,12)) bd,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.bf),1)),4,12)) bf,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.both),1)),4,12)) both,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.salary),1)),4,12)) salary,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.unfix),1)),4,12)) unfix,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.totsalary),1)),4,12)) totsalary,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.sal),1)),4,12)) sal,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.sar),1)),4,12)) sar,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.sah),1)),4,12)) sah,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.chl),1)),4,12)) chl,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.chh),1)),4,12)) chh
from @tmp a
order by a.sno;
--****************************************************************************************************************************************
z_sali:--z_sali
declare @t_bsno nvarchar(20)
declare @t_esno nvarchar(20)
declare @t_xyears nvarchar(10)
declare @strNum nvarchar(max) = N'零壹貳叁肆伍陸柒捌玖'
set @t_bsno = case when '#non' = [4] then '' else [4] end 
set @t_esno = case when '#non' = [5] then CHAR(255) else [5] end 
set @t_xyears = case when '#non' = [6] then '' else [6] end 
declare @tmp table(
	gno nvarchar(1),
	noa nvarchar(20),
	namea nvarchar(50),
	years nvarchar(20),
	prefix nvarchar(10),
	fnamea nvarchar(50),
	ch_labor int,
	ch_health int,
	total int,
	comp nvarchar(50),
	serial nvarchar(20),
	boss nvarchar(10),
	addr nvarchar(max),
	m01 nvarchar(10),
	m02 nvarchar(10),
	m03 nvarchar(10),
	m04 nvarchar(10),
	m05 nvarchar(10)
)
insert into @tmp
	select
		'0' gno,a.noa, a.namea,'','本人',a.namea,sum(d.ch_labor),
		sum(d.ch_health),0,isnull(c.acomp,''),isnull(c.serial,''),isnull(c.boss,''),isnull(c.addr,''),
		'' m01,'' m02,'' m03,'' m04,'' m05
	from sss a
	left join acomp c on c.noa = a.cno
	left join salarys d on d.sno = a.noa
	where (a.noa between @t_bsno and @t_esno) and
			 (left(d.mon,3) = @t_xyears) and
			 (isnull(a.outdate,'')='' or left(a.outdate,3)>=@t_xyears)
	group by a.noa, a.namea,isnull(c.acomp,''),isnull(c.serial,''),isnull(c.boss,''),isnull(c.addr,'')
delete @tmp where isnull(ch_labor,0)+isnull(ch_labor,0)=0
insert into @tmp(gno,noa,total,comp,serial,boss,addr)
	select
		'1' gno,noa,SUM(ch_labor)+SUM(ch_health),comp,serial,boss,addr
	from @tmp
	where gno='0'
	group by noa,comp,serial,boss,addr
insert into @tmp(gno,noa,total,comp,serial,boss,addr)
	select
		'2' gno,noa,SUM(ch_labor)+SUM(ch_health),comp,serial,boss,addr
	from @tmp
	where gno='0'
	group by noa,comp,serial,boss,addr
update a  
	set m01 = substring(@strNum,cast(substring(RIGHT(REPLICATE('0', 5) + cast(CAST(total as int) as nvarchar), 5),1,1) as int)+1,1),
	m02 = substring(@strNum,cast(substring(RIGHT(REPLICATE('0', 5) + cast(CAST(total as int) as nvarchar), 5),2,1) as int)+1,1),
	m03 = substring(@strNum,cast(substring(RIGHT(REPLICATE('0', 5) + cast(CAST(total as int) as nvarchar), 5),3,1) as int)+1,1),
	m04 = substring(@strNum,cast(substring(RIGHT(REPLICATE('0', 5) + cast(CAST(total as int) as nvarchar), 5),4,1) as int)+1,1),
	m05 = substring(@strNum,cast(substring(RIGHT(REPLICATE('0', 5) + cast(CAST(total as int) as nvarchar), 5),5,1) as int)+1,1)
from @tmp a
select
	a.gno,a.noa,a.namea,a.years,a.prefix,a.fnamea,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.ch_labor),1)),4,12)) ch_labor,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.ch_health),1)),4,12)) ch_health,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.total),1)),4,12)) total,
	a.comp,a.serial,a.boss,a.addr,a.m01,a.m02,a.m03,a.m04,a.m05,@t_xyears wyear
from @tmp a
order by a.noa,a.gno;