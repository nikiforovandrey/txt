z_tran00:--z_tran00
	declare @t_accy nvarchar(10)
	declare @t_month nvarchar(10)
	declare @t_date nvarchar(10)
	set @t_accy = '[1]'
	set @t_month = case when '#non'=[2] then '' else [2] end
	set @t_date = convert(varchar(4),convert(int,left(@t_month,3)+1911))+'-'+right(@t_month,2)+'-01'

	if LEN(@t_month)=0
	begin
		select '0' gno,'請輸入結轉月份' memo
		return
	end
	if NOT(LEN(@t_month)=6 and ISDATE(@t_date)=1)
	begin
		select '0' gno,'日期錯誤' memo
		return
	end
	--=================================================================================================================
	--cal_transz
	SET QUOTED_IDENTIFIER OFF
	declare @cmd nvarchar(max)

	--=========================================================暫存檔===================================================
	IF OBJECT_ID('tempdb..#transz')is not null
	BEGIN
		set @cmd = 'drop table #transz'
		EXECUTE sp_executesql @cmd
	END
	--1
	create table #transz(
		carteamno nvarchar(2),
		carno nvarchar(20),
		driverno nvarchar(20),
		mon nvarchar(10),
		日數 int,
		_31庫噸數 float,
		_41庫噸數 float,
		_31庫收入 int,
		_41庫收入 int,
		中鋼收入 int,
		車場收入 int,
		業績獎金 int,
		安全津貼 int,
		全勤獎金 int,
		收入半 int,
		收入全 int,
		收入其他 int,
		達成獎金 int,
		其他加項 int,
		應支金額 int,
		司機罰款 int,
		勞保 int,
		健保 int,
		勞退金 int,
		其他扣款 int,
		借支 int,
		實領金額 int,
		尚欠金額 int,
		公里數 float,
		油量 float,
		油費 int,
		耗油比 int,
		油耗 float,
		修理費 int,
		輪胎費 int,
		通行費 int,
		公司罰款 int,
		寄櫃費 int,
		保險費 int,
		牌照稅 int,
		燃料費 int,
		保牌燃費 int,
		折舊 int,
		淨利 int,
	)
	--2
	declare @genTemp nvarchar(max)
	set @genTemp = "
	create table #transz(z nvarchar(1))
	declare @sTableName nvarchar(20)
	declare @sColumnsName nvarchar(20)
	declare @iColumnsLength int
	declare @iColumnsOrder int
	declare @sColumnsType nvarchar(20)
	declare @iIsNull bit

	declare cursor_table cursor for
	SELECT  sysobjects.name AS sTableName, 
			syscolumns.name AS sColumnsName, 
			syscolumns.prec AS iColumnsLength, 
			syscolumns.colorder AS iColumnsOrder, 
			systypes.name + '' AS sColumnsType, 
			syscolumns.isnullable AS iIsNull
	FROM    dbo.sysobjects INNER JOIN
			dbo.syscolumns ON sysobjects.id = syscolumns.id INNER JOIN
			dbo.systypes ON syscolumns.xusertype = systypes.xusertype
	WHERE   (sysobjects.xtype = 'U') and sysobjects.name='transz'+'101'
	open cursor_table
	fetch next from cursor_table
	into @sTableName,@sColumnsName,@iColumnsLength,@iColumnsOrder,@sColumnsType,@iIsNull
	while(@@FETCH_STATUS <> -1)
	begin
		if @sColumnsType='nvarchar'
		begin
			set @cmd = 'alter table #transz add ['+ @sColumnsName+'] '+@sColumnsType+'('+CONVERT(nvarchar(4),@iColumnsLength)+')'
			EXECUTE sp_executesql @cmd
			--1--print @sColumnsName+' '+@sColumnsType+'('+CONVERT(nvarchar(4),@iColumnsLength)+'),'
			--2--print 'declare @'+ @sColumnsName+' '+@sColumnsType+'('+CONVERT(nvarchar(4),@iColumnsLength)+')'
		end
		if @sColumnsType='int' or @sColumnsType='float'
		begin
			set @cmd = 'alter table #transz add  ['+ @sColumnsName+'] '+@sColumnsType
			EXECUTE sp_executesql @cmd
			--1--print @sColumnsName+' '+@sColumnsType+','
			--2--print 'declare @'+ @sColumnsName+' '+@sColumnsType
		end
		fetch next from cursor_table
		into @sTableName,@sColumnsName,@iColumnsLength,@iColumnsOrder,@sColumnsType,@iIsNull
	end
	close cursor_table
	deallocate cursor_table"
	--=========================================================暫存檔===================================================end
	--=========================================================載入TRANS資料============================================
	declare @carteamno nvarchar(2)
	declare @carno nvarchar(20)
	declare @driverno nvarchar(20)
	declare @mon nvarchar(10)
	declare @日數 int
	declare @_31庫噸數 float
	declare @_41庫噸數 float
	declare @_31庫收入 int
	declare @_41庫收入 int
	declare @中鋼收入 int
	declare @車場收入 int
	declare @業績獎金 int
	declare @安全津貼 int
	declare @全勤獎金 int
	declare @收入半 int
	declare @收入全 int
	declare @收入其他 int
	declare @達成獎金 int
	declare @其他加項 int
	declare @應支金額 int
	declare @司機罰款 int
	declare @勞保 int
	declare @健保 int
	declare @勞退金 int
	declare @其他扣款 int
	declare @借支 int
	declare @實領金額 int
	declare @尚欠金額 int
	declare @公里數 float
	declare @油量 float
	declare @油費 int
	declare @耗油比 int
	declare @油耗 float
	declare @修理費 int
	declare @輪胎費 int
	declare @通行費 int
	declare @公司罰款 int
	declare @寄櫃費 int
	declare @保險費 int
	declare @牌照稅 int
	declare @燃料費 int
	declare @保牌燃費 int
	declare @折舊 int
	declare @淨利 int

	declare @tmp table(
		carteamno nvarchar(2),
		carno nvarchar(20),
		driverno nvarchar(20),
		日數 int,
		_31庫噸數 float,
		_41庫噸數 float,
		_31庫收入 int,
		_41庫收入 int,
		中鋼收入 int,
		車場收入 int,
		業績獎金 int,
		收入半 int,
		收入全 int,
		收入其他 int,
		其他加項 int,
		司機罰款 int,
		其他扣款 int,
		公里數 float,
		通行費 int,
		寄櫃費 int
	)
	set @cmd =
	"select ISNULL(carteamno,'') carteamno,
			ISNULL(carno,'') carno,
			ISNULL(driverno,'') driverno,
			COUNT(DISTINCT datea) 日數,	
			SUM(case when calctype = '1' then ISNULL(mount2,0) else 0 end)as _31庫噸數 ,
			SUM(case when calctype = '2' then ISNULL(mount2,0) else 0 end)as _41庫噸數 ,
			SUM(case when calctype = '1' then Round(ISNULL(mount * price,0), 0) else 0 end)as _31庫收入 ,
			SUM(case when calctype = '2' then Round(ISNULL(mount * price,0), 0) else 0 end)as _41庫收入 ,
			SUM(case when calctype between '7' and '8' then Round(ISNULL(mount2 * price2,0), 0) else 0 end)as 中鋼收入 ,
			SUM(case when calctype between '3' and '5' then Round(ISNULL(mount2 * price2,0), 0) else 0 end)as 車場收入 ,
			SUM(case when calctype = '1' then Round(ISNULL(mount2 * price2,0), 0) 
					 when calctype between '3' and '5' then Round(ISNULL(mount2 * price2 * case when discount=0 then 1 else discount end,0), 0)
					 when calctype between '7' and '8' then Round(ISNULL(mount2 * price2 * case when discount=0 then 1 else discount end,0), 0)
					 else 0 end)as 業績獎金 ,
			SUM(case when calctype = '3' or calctype = '7' then Round(ISNULL(mount2 * price2,0), 0) else 0 end)as 收入半,
			SUM(case when calctype = '4' or calctype = '8' then Round(ISNULL(mount2 * price2,0), 0) else 0 end)as 收入全,
			SUM(case when NOT(calctype = '3' or calctype = '7' or calctype = '4' or calctype = '8') then Round(ISNULL(mount2 * price2,0), 0) else 0 end)as 收入其他,
			SUM(ISNULL(plus,0)) 其他加項,
			SUM(ISNULL(ticket,0)) 司機罰款,
			SUM(ISNULL(minus,0)) 其他扣款,
			SUM(ISNULL(miles,0)) 公里數,
			SUM(ISNULL(tolls,0)) 通行費,
			SUM(isnull(reserve,0)) 寄櫃費
	from trans"+@t_accy+"
	where left(isnull(datea,''),6) = @t_month and len(isnull(carteamno,''))>0
	group by carteamno,carno,driverno"

	insert into @tmp
	EXECUTE sp_executesql @cmd,N'@t_month nvarchar(10)',@t_month=@t_month

	declare cursor_table cursor for
	select * from @tmp
	open cursor_table
	fetch next from cursor_table
	into @carteamno,@carno,@driverno,@日數,@_31庫噸數,@_41庫噸數,@_31庫收入,@_41庫收入,@中鋼收入,@車場收入,@業績獎金,@收入半,@收入全,@收入其他,@其他加項,@司機罰款,@其他扣款,@公里數,@通行費,@寄櫃費
	while(@@FETCH_STATUS <> -1)
	begin
		insert into #transz(carteamno,carno,driverno,mon,日數,_31庫噸數,_41庫噸數,_31庫收入,_41庫收入,中鋼收入,車場收入,業績獎金,收入半,收入全,收入其他,其他加項,司機罰款,其他扣款,公里數,通行費,寄櫃費)
		values(@carteamno,@carno,@driverno,@t_month,@日數,@_31庫噸數,@_41庫噸數,@_31庫收入,@_41庫收入,@中鋼收入,@車場收入,@業績獎金,@收入半,@收入全,@收入其他,@其他加項,@司機罰款,@其他扣款,@公里數,@通行費,@寄櫃費)
		fetch next from cursor_table
		into @carteamno,@carno,@driverno,@日數,@_31庫噸數,@_41庫噸數,@_31庫收入,@_41庫收入,@中鋼收入,@車場收入,@業績獎金,@收入半,@收入全,@收入其他,@其他加項,@司機罰款,@其他扣款,@公里數,@通行費,@寄櫃費
	end
	close cursor_table
	deallocate cursor_table
	--=========================================================載入TRANS資料============================================end
	--=========================================================載入勞健保資料===========================================
	declare @t_labor int
	declare @t_health int
	declare @t_pensionfund int

	declare cursor_table cursor for
	select driverno from #transz group by driverno
	open cursor_table
	fetch next from cursor_table
	into @driverno
	while(@@FETCH_STATUS <> -1)
	begin
		set @t_labor = 0
		set @t_health = 0
		set @t_pensionfund = 0
		
		select @t_labor=a.labor,@t_health=a.health,@t_pensionfund = a.pensionfund
		from(select labor,health,pensionfund from driver where noa=@driverno)as a
		
		update top(1) #transz
		set 勞保 = @t_labor, 健保=@t_health, 勞退金=@t_pensionfund where driverno=@driverno
		
		fetch next from cursor_table
		into @driverno
	end
	close cursor_table
	deallocate cursor_table
	--=========================================================載入勞健保資料===========================================end
	--=========================================================計算油費、維修費、罰款、規費=============================
	declare @tmp1 table(
		carno nvarchar(20),
		driverno nvarchar(20),
		公里數 float,
		油量 float,
		油費 int,
		單位油量 float,
		單位油費 float,
		修理費 int, 
		輪胎費 int,
		單位修理費 float,
		單位輪胎費 float,
		司機罰款 int,
		公司罰款 int,
		油量校正 int,
		油費校正 int,
		修理費校正 int,
		輪胎費校正 int,
		保險費 int,
		牌照稅 int,
		燃料費 int,
		折舊 int,
		其他加項 int,
		其他扣款 int
		primary key (carno,driverno) 
	)
	insert into @tmp1
	select carno,driverno,SUM(公里數),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	from #transz
	group by carno,driverno


	declare cursor_table cursor for
	select noa,driverno,sum(isnull(mount,0)),SUM(isnull(money,0)) 
	from oil
	where left(datea,6)=@t_month
	group by noa,driverno
	open cursor_table
	fetch next from cursor_table
	into @carno,@driverno,@油量,@油費
	while(@@FETCH_STATUS <> -1)
	begin
		if exists(select * from @tmp1 where carno = @carno and driverno = @driverno)
		begin
			update @tmp1
			set 油量=@油量,油費=@油費,
				單位油量=case when 公里數=0 then 0 else ROUND(@油量/公里數,3) end,
				單位油費=case when 公里數=0 then 0 else ROUND(@油費/公里數,3) end,
				油量校正=@油量,油費校正=@油費
			where carno = @carno and driverno = @driverno
		end
		else
		begin
			insert into @tmp1(carno,driverno,油量,油費,單位油量,單位油費)values(@carno,@driverno,@油量,@油費,@油量,@油費)
		end		
		fetch next from cursor_table
		into @carno,@driverno,@油量,@油費
	end
	close cursor_table
	deallocate cursor_table	

	declare cursor_table cursor for
	select a.carno,a.driverno,
		SUM(case when wtype='A' then ROUND(ISNULL(b.price * b.mount,0),0) else 0 end),
		SUM(case when wtype='B' then ROUND(ISNULL(b.price * b.mount,0),0) else 0 end)
	from fixas b
	left join fixa a on a.noa = b.noa
	where left(a.fixadate,6)=@t_month
	group by a.carno,a.driverno
	open cursor_table
	fetch next from cursor_table
	into @carno,@driverno,@修理費,@輪胎費
	while(@@FETCH_STATUS <> -1)
	begin
		if exists(select * from @tmp1 where carno = @carno and driverno = @driverno)
		begin
			update @tmp1 
			set 修理費=@修理費,輪胎費=@輪胎費,
				單位修理費=case when 公里數=0 then 0 else ROUND(@修理費/公里數,3) end,
				單位輪胎費=case when 公里數=0 then 0 else ROUND(@輪胎費/公里數,3) end,
				修理費校正=@修理費,輪胎費校正=@輪胎費
			where carno = @carno and driverno = @driverno
		end
		else
		begin
			insert into @tmp1(carno,driverno,修理費,輪胎費,單位修理費,單位輪胎費)values(@carno,@driverno,@修理費,@輪胎費,@修理費,@輪胎費)
		end			
		fetch next from cursor_table
		into @carno,@driverno,@修理費,@輪胎費
	end
	close cursor_table
	deallocate cursor_table

	declare cursor_table cursor for
	select carno, driverno,SUM(ISNULL(driverpay,0)),SUM(ISNULL(comppay,0))
	from ticket
	where left(paydate,6)=@t_month 
	group by carno,driverno
	open cursor_table
	fetch next from cursor_table
	into @carno,@driverno,@司機罰款,@公司罰款
	while(@@FETCH_STATUS <> -1)
	begin
		if exists(select * from @tmp1 where carno = @carno and driverno = @driverno)
		begin
			update @tmp1
			set 司機罰款=司機罰款+@司機罰款,公司罰款=公司罰款+@公司罰款 where carno = @carno and driverno = @driverno
		end
		else
		begin
			insert into @tmp1(carno,driverno,司機罰款,公司罰款)values(@carno,@driverno,@司機罰款,@公司罰款)
		end
		fetch next from cursor_table
		into @carno,@driverno,@司機罰款,@公司罰款
	end
	close cursor_table
	deallocate cursor_table	

	declare cursor_table cursor for
	select isnull(a.noa,''), ISNULL(a.driverno,''),
		isnull(b.money,0) ,
		case when right(a.ulicensemon,2)=right(@t_month,2) then isnull(a.ulicense,0) else 0 end +
		case when right(a.dlicensemon,2)=right(@t_month,2) then isnull(a.dlicense,0) else 0 end ,
		case when right(a.springmon,2)=right(@t_month,2) then isnull(a.spring,0) else 0 end +
		case when right(a.summermon,2)=right(@t_month,2) then isnull(a.summer,0) else 0 end +
		case when right(a.fallamon,2)=right(@t_month,2) then isnull(a.falla,0) else 0 end +
		case when right(a.wintermon,2)=right(@t_month,2) then isnull(a.winter,0) else 0 end ,
		a.amortization 折舊
	from car2 a
	left join (select noa carno,SUM(isnull(money,0)) money from carInsure where inmon=@t_month group by noa) as b
	on b.carno = a.noa
	open cursor_table
	fetch next from cursor_table
	into @carno,@driverno,@保險費,@牌照稅,@燃料費,@折舊 
	while(@@FETCH_STATUS <> -1)
	begin
		if exists(select * from @tmp1 where carno = @carno and driverno = @driverno)
		begin
			update @tmp1
			set 保險費=@保險費,牌照稅=@牌照稅,燃料費=@燃料費,折舊=@折舊
			where carno = @carno and driverno = @driverno
		end
		else
		begin
			insert into @tmp1 (carno,driverno,保險費,牌照稅,燃料費,折舊)values(@carno,@driverno,@保險費,@牌照稅,@燃料費,@折舊)
		end
		fetch next from cursor_table
		into @carno,@driverno,@保險費,@牌照稅,@燃料費,@折舊 
	end
	close cursor_table
	deallocate cursor_table	

	declare cursor_table cursor for
	select carno,isnull(driverno,''),SUM(ISNULL(inmoney,0)),SUM(ISNULL(outmoney,0))
	from carchg
	where left(datea,6)=@t_month 
	group by carno,driverno
	open cursor_table
	fetch next from cursor_table
	into @carno,@driverno,@其他加項,@其他扣款
	while(@@FETCH_STATUS <> -1)
	begin
		if exists(select * from @tmp1 where carno = @carno and driverno = @driverno)
		begin
			update @tmp1
			set 其他加項=@其他加項,其他扣款=@其他扣款 where carno = @carno and driverno = @driverno
		end
		else
		begin
			insert into @tmp1(carno,driverno,其他加項,其他扣款)	values(@carno,@driverno,@其他加項,@其他扣款)	
		end
		fetch next from cursor_table
		into @carno,@driverno,@其他加項,@其他扣款
	end
	close cursor_table
	deallocate cursor_table

	declare @t_單位油費 float
	declare @t_單位油量 float
	declare @t_單位修理費 float
	declare @t_單位輪胎費 float
	declare cursor_table cursor for
	select carteamno,carno,driverno,mon,公里數 from #transz
	open cursor_table
	fetch next from cursor_table
	into @carteamno,@carno,@driverno,@mon,@公里數
	while(@@FETCH_STATUS <> -1)
	begin
		SET @t_單位油費 = 0
		SET @t_單位油量 = 0
		SET @t_單位修理費 = 0
		SET @t_單位輪胎費 = 0
		
		select @t_單位油費 = isnull(單位油費,0),@t_單位油量 = isnull(單位油量,0),@t_單位修理費 = isnull(單位修理費,0),@t_單位輪胎費 = isnull(單位輪胎費,0)
		from @tmp1 
		where carno = @carno and driverno = @driverno
		
		update #transz
		set 油耗 = case when @t_單位油量=0 then 0 else ROUND(1/@t_單位油量,3) end,
			油量 = ROUND(公里數*@t_單位油量,0), 
			油費 = ROUND(公里數*@t_單位油費,0), 
			耗油比 = case when (中鋼收入+車場收入) = 0 then 0 else ROUND(公里數*@t_單位油費*100/(中鋼收入+車場收入),1) end, 
			修理費 = ROUND(公里數*@t_單位修理費,0),
			輪胎費 = ROUND(公里數*@t_單位輪胎費,0)
		where carteamno=@carteamno and carno=@carno and driverno=@driverno and mon=@mon
		
		fetch next from cursor_table
		into @carteamno,@carno,@driverno,@mon,@公里數
	end
	close cursor_table
	deallocate cursor_table

	declare cursor_table cursor for
	select carno,driverno,油量,油費,修理費,輪胎費 from #transz
	open cursor_table
	fetch next from cursor_table
	into @carno,@driverno,@油量,@油費,@修理費,@輪胎費
	while(@@FETCH_STATUS <> -1)
	begin
		update @tmp1
		set 油量校正 = 油量校正 - @油量,
			油費校正 = 油費校正 - @油費,
			修理費校正 = 修理費校正 - @修理費,
			輪胎費校正 = 輪胎費校正 - @輪胎費
		where carno = @carno and driverno = @driverno
		
		fetch next from cursor_table
		into @carno,@driverno,@油量,@油費,@修理費,@輪胎費
	end
	close cursor_table
	deallocate cursor_table	

	declare @油量校正 float
	declare @油費校正 int
	declare @修理費校正 int
	declare @輪胎費校正 int
	declare cursor_table cursor for
	select carno,driverno,isnull(油量校正,0),isnull(油費校正,0),isnull(修理費校正,0),isnull(輪胎費校正,0),isnull(公司罰款,0),isnull(保險費,0),isnull(牌照稅,0),isnull(燃料費,0),isnull(折舊,0),isnull(其他加項,0),isnull(其他扣款,0)  from @tmp1
	open cursor_table
	fetch next from cursor_table
	into @carno,@driverno,@油量校正,@油費校正,@修理費校正,@輪胎費校正,@公司罰款,@保險費,@牌照稅,@燃料費,@折舊,@其他加項,@其他扣款 
	while(@@FETCH_STATUS <> -1)
	begin
		if exists(select * from #transz where carno = @carno and driverno = @driverno)
		begin
			update top(1) #transz
			set 油量 = 油量 + @油量校正,
				油費 = 油費 + @油費校正,
				修理費 = 修理費 + @修理費校正,
				輪胎費 = 輪胎費 + @輪胎費校正,
				公司罰款 = @公司罰款,
				保險費 = @保險費,
				牌照稅 = @牌照稅,
				燃料費 = @燃料費,
				保牌燃費 = @保險費+@牌照稅+@燃料費,
				折舊 = @折舊 ,
				其他加項 = @其他加項,
				其他扣款 = @其他扣款
			where carno = @carno and driverno = @driverno
		end
		else
		begin
			update top(1) #transz
			set 油量 = 油量 + @油量校正,
				油費 = 油費 + @油費校正,
				修理費 = 修理費 + @修理費校正,
				輪胎費 = 輪胎費 + @輪胎費校正,
				公司罰款 = 公司罰款 + @公司罰款,
				保險費 = 保險費 + @保險費,
				牌照稅 = 牌照稅 + @牌照稅,
				燃料費 = 燃料費 + @燃料費,
				保牌燃費 = 保牌燃費 + @保險費+@牌照稅+@燃料費,
				折舊 = 折舊 + @折舊 
			where carno = @carno
			
			update top(1) @tmp
			set	其他加項 = 其他加項 + @其他加項,
				其他扣款 = 其他扣款 + @其他扣款
			where driverno = @driverno
		end
			
		fetch next from cursor_table
		into @carno,@driverno,@油量校正,@油費校正,@修理費校正,@輪胎費校正,@公司罰款,@保險費,@牌照稅,@燃料費,@折舊,@其他加項,@其他扣款
	end
	close cursor_table
	deallocate cursor_table
	--=========================================================計算油費、維修費、罰款、規費=============================end
	--=========================================================其他=====================================================
	declare @t_達成獎金 int
	declare @t_應支金額 int
	declare cursor_table cursor for
	select * from #transz
	open cursor_table
	fetch next from cursor_table
	into @carteamno,@carno,@driverno,@mon,@日數,@_31庫噸數,@_41庫噸數,@_31庫收入,@_41庫收入,@中鋼收入,@車場收入,
		 @業績獎金,@安全津貼,@全勤獎金,@收入半,@收入全,@收入其他,@達成獎金,@其他加項,
		 @應支金額,@司機罰款,@勞保,@健保,@勞退金,@其他扣款,@借支,@實領金額,@尚欠金額,@公里數,
		 @油量,@油費,@耗油比,@油耗,@修理費,@輪胎費,@通行費,@公司罰款,@寄櫃費,@保險費,@牌照稅,@燃料費,@保牌燃費,@折舊,@淨利
	while(@@FETCH_STATUS <> -1)
	begin	
		SET @t_達成獎金 = dbo.getBonus('1',@收入半,@mon)+dbo.getBonus('2',@收入全,@mon)+dbo.getBonus('3',@收入其他,@mon)
		SET @t_應支金額 = @業績獎金+@安全津貼+@全勤獎金+@t_達成獎金+@其他加項
		
		update #transz
		set 達成獎金 = @t_達成獎金,
			應支金額 = @t_應支金額,
			實領金額 = @t_應支金額 -(@司機罰款+@勞保+@健保+@勞退金+@其他扣款+@借支),
			耗油比 = case when (@中鋼收入+@車場收入+@_31庫收入+@_41庫收入) = 0 then 0 else ROUND(@油費*100/(@中鋼收入+@車場收入+@_31庫收入+@_41庫收入),1) end,
			油耗 = case when @油量=0 then 0 else ROUND(@公里數/@油量,3) end,
			淨利 = @中鋼收入+@車場收入-@油費-@修理費-@輪胎費-@通行費-@公司罰款-@寄櫃費-@保牌燃費-@折舊-@t_應支金額
		where carteamno=@carteamno and carno=@carno and driverno=@driverno and mon=@mon
		
		fetch next from cursor_table
		into @carteamno,@carno,@driverno,@mon,@日數,@_31庫噸數,@_41庫噸數,@_31庫收入,@_41庫收入,@中鋼收入,@車場收入,
		 @業績獎金,@安全津貼,@全勤獎金,@收入半,@收入全,@收入其他,@達成獎金,@其他加項,
		 @應支金額,@司機罰款,@勞保,@健保,@勞退金,@其他扣款,@借支,@實領金額,@尚欠金額,@公里數,
		 @油量,@油費,@耗油比,@油耗,@修理費,@輪胎費,@通行費,@公司罰款,@寄櫃費,@保險費,@牌照稅,@燃料費,@保牌燃費,@折舊,@淨利
	end
	close cursor_table
	deallocate cursor_table
	--=========================================================其他=====================================================end
	set @cmd = "delete from transz"+@t_accy+" where mon=@t_month"
	EXECUTE sp_executesql @cmd,N'@t_month nvarchar(10)',@t_month=@t_month
	set @cmd = "insert into transz"+@t_accy+" select * from #transz"
	EXECUTE sp_executesql @cmd

	select '0' gno,@t_month+' 結轉完成' memo; 

z_tran01:--z_tran01
	declare @t_accy nvarchar(10)
	declare @t_btrandate nvarchar(10)
	declare @t_etrandate nvarchar(10)
	set @t_accy='[1]'
	set @t_btrandate = case when '#non'=[5] then '' else [5] end
	set @t_etrandate = case when '#non'=[6] then '' else [6] end

	SET QUOTED_IDENTIFIER OFF
	declare @cmd nvarchar(max)
	declare @t_date nvarchar(10)
	declare @t_bdate nvarchar(10)
	declare @t_edate nvarchar(10)

	set @t_bdate = convert(nvarchar(4),convert(int,LEFT(@t_btrandate,3))+1911)+'-'+SUBSTRING(@t_btrandate,5,2)+'-'+RIGHT(@t_btrandate,2)
	set @t_edate = convert(nvarchar(4),convert(int,LEFT(@t_etrandate,3))+1911)+'-'+SUBSTRING(@t_etrandate,5,2)+'-'+RIGHT(@t_etrandate,2)
	set @t_date=@t_bdate

	if(isdate(@t_bdate)=0 or isdate(@t_edate)=0)
	begin
		select '0' gno,'' [date],0 mount,'日期錯誤' memo 
		return	
	end
	if(DATEDIFF(MM,@t_bdate,@t_edate)>2)
	begin
		select '0' gno,'' [date],0 mount,'查詢區間不可超過三個月' memo 
		return	
	end
	declare @listDate table(
		[date] nvarchar(10),
		[mount] int,
		[memo] nvarchar(max)
	)

	while (@t_date between @t_bdate and @t_edate)
	begin
		insert into @listDate select right('00'+convert(nvarchar(3),convert(int,YEAR(@t_date))-1911),3)+'/'+right('0'+convert(nvarchar(2),convert(int,MONTH(@t_date))),2)+'/'+right('0'+convert(nvarchar(2),convert(int,DAY(@t_date))),2),0,''
		set @t_date= convert(date,DATEADD(DD,1,@t_date),111)
	end

	declare @detail table(
		carno nvarchar(20),
		[date] nvarchar(10)
	)
	set @cmd = "select DISTINCT a.carno,a.trandate
				from trans"+@t_accy+" a
				left join car2 b on b.noa=a.carno
				where b.cartype='2' and 
					(a.trandate between @t_btrandate and @t_etrandate)
				order by a.carno,a.trandate"
	insert into @detail
	execute sp_executesql @cmd,N'@t_btrandate nvarchar(10),@t_etrandate nvarchar(10)',@t_btrandate=@t_btrandate,@t_etrandate=@t_etrandate
	declare @tmp table(
		[date] nvarchar(10),
		[memo] nvarchar(max)
	)

	declare @date nvarchar(10)
	declare @carno nvarchar(20)

	declare cursor_table cursor for
	select [date],carno 
	from @listDate listDate,(select carno from @detail group by carno) listCarno
	where not exists(select * from @detail where [date]= listDate.date and carno=listCarno.carno)
	open cursor_table
	fetch next from cursor_table
	into @date,@carno
	while(@@FETCH_STATUS <> -1)
	begin
		update top(1) @listDate set mount=mount+1,memo=memo+@carno+',' where [date]=@date
		fetch next from cursor_table
		into @date,@carno
	end
	close cursor_table
	deallocate cursor_table

	select '0' gno,[date],mount,case when len(memo)>0 then LEFT(memo,len(memo)-1) else memo end memo from @listDate;


z_tran02:--z_tran02
	declare @t_accy int
	declare @t_month nvarchar(10)
	declare @t_bmon nvarchar(10)
	declare @t_emon nvarchar(10)
	declare @t_bdate nvarchar(10)
	declare @t_edate nvarchar(10)
	declare @t_bcustno nvarchar(20)
	declare @t_ecustno nvarchar(20)
	declare @t_bdriverno nvarchar(20)
	declare @t_edriverno nvarchar(20)
	declare @t_bsalesno nvarchar(20)
	declare @t_esalesno nvarchar(20)
	declare @t_carteamno nvarchar(2)
	declare @t_carno nvarchar(20)
	set @t_accy = [1]
	set @t_month = case when '#non'=[2] then '' else [2] end
	set @t_bmon = case when '#non'=[3] then '' else [3] end
	set @t_emon = case when '#non'=[4] then char(255) else [4] end
	set @t_bdate = case when '#non'=[5] then '' else [5] end
	set @t_edate = case when '#non'=[6] then char(255) else [6] end
	set @t_bcustno = case when '#non'=[7] then '' else [7] end
	set @t_ecustno = case when '#non'=[8] then char(255) else [8] end
	set @t_bdriverno = case when '#non'=[9] then '' else [9] end
	set @t_edriverno = case when '#non'=[10] then char(255) else [10] end
	set @t_bsalesno = case when '#non'=[11] then '' else [11] end
	set @t_esalesno = case when '#non'=[12] then char(255) else [12] end
	set @t_carteamno = case when '#non'=[13] then '' else [13] end
	set @t_carno = case when '#non'=[14] then '' else [14] end
	--**********************************************************************************************************
	declare @tmp table(
		gno nvarchar(1),
		carteamno nvarchar(2),
		車隊 nvarchar(20),
		年份 nvarchar(10),
		汽缸 nvarchar(10),
		日數 int,
		carno nvarchar(20),
		driverno nvarchar(20),
		司機 nvarchar(20),
		_31庫收入 int,
		_41庫收入 int,
		中鋼收入 int,
		車場收入 int,
		公里數 float,
		油量 float,
		油費 int,
		修理費 int,
		輪胎費 int,
		通行費 int,
		公司罰款 int,
		寄櫃費 int,
		薪資 int,
		保牌燃費 int,
		折舊 int,
		淨利 int,
		耗油比 float,
		油耗 float
		primary key(carteamno,gno,carno,driverno)
	)
	
	insert into @tmp
		select '0' gno,*,
			 case when (中鋼收入+車場收入+_31庫收入+_41庫收入) = 0 then 0 else ROUND(油費*100/(中鋼收入+車場收入+_31庫收入+_41庫收入),1) end 耗油比,
			 case when 油量=0 then 0 else ROUND(公里數/油量,3) end 油耗
		from(select 
				a.carteamno,
				b.team 車隊, 
				d.caryear 年份,
				d.cylinder 汽缸,
				SUM(a.日數) 日數,
				a.carno carno,
				a.driverno driverno,
				c.namea 司機, 
				SUM(a._31庫收入) _31庫收入,
				SUM(a._41庫收入) _41庫收入,
				SUM(a.中鋼收入) 中鋼收入,
				SUM(a.車場收入) 車場收入,
				SUM(a.公里數) 公里數,
				SUM(a.油量) 油量,
				SUM(a.油費) 油費,
				SUM(a.修理費) 修理費,
				SUM(a.輪胎費) 輪胎費,
				SUM(a.通行費) 通行費,
				SUM(a.公司罰款) 公司罰款,
				SUM(a.寄櫃費) 寄櫃費,
				SUM(a.應支金額) 薪資,
				SUM(a.保牌燃費) 保牌燃費,
				SUM(a.折舊) 折舊,
				SUM(a.淨利) 淨利
			from transz[1] a
			left join carteam b on a.carteamno = b.noa
			left join driver c on a.driverno = c.noa 
			left join car2 d on a.carno = d.noa
			where (a.mon between @t_bmon and @t_emon) and (a.driverno between @t_bdriverno and @t_edriverno) and
				  (LEN(@t_carteamno)=0 or a.carteamno=@t_carteamno) and (LEN(@t_carno)=0 or a.carno=@t_carno)
			group by a.carteamno,b.team,d.caryear,d.cylinder,a.carno,a.driverno,c.namea) as a
	--**********************************************************************************************************
	insert into @tmp
		select  '1' gno,carteamno,'' 車隊,'' 年份,'' 汽缸,SUM(日數),'' carno,'' driverno,'' 司機,
				SUM(_31庫收入),SUM(_41庫收入),SUM(中鋼收入),SUM(車場收入),SUM(公里數),SUM(油量),SUM(油費),
				SUM(修理費),SUM(輪胎費),SUM(通行費),SUM(公司罰款),SUM(寄櫃費),SUM(薪資),SUM(保牌燃費),
				SUM(折舊),SUM(淨利),0 耗油比,0 油耗
		from @tmp
		group by carteamno
	--**********************************************************************************************************
	select gno,carteamno,車隊,年份,汽缸,日數,carno,driverno,司機,
		   SUBSTRING(CONVERT(varchar,CAST(_31庫收入 as money),1 ),1, LEN(CONVERT(varchar,CAST(_31庫收入 as money),1 ))-3) _31庫收入,
		   SUBSTRING(CONVERT(varchar,CAST(_41庫收入 as money),1 ),1, LEN(CONVERT(varchar,CAST(_41庫收入 as money),1 ))-3) _41庫收入,
		   SUBSTRING(CONVERT(varchar,CAST(中鋼收入 as money),1 ),1, LEN(CONVERT(varchar,CAST(中鋼收入 as money),1 ))-3) 中鋼收入,
		   SUBSTRING(CONVERT(varchar,CAST(車場收入 as money),1 ),1, LEN(CONVERT(varchar,CAST(車場收入 as money),1 ))-3) 車場收入,
		   SUBSTRING(CONVERT(varchar,CAST(公里數 as money),1 ),1, LEN(CONVERT(varchar,CAST(公里數 as money),1 ))-3) 公里數,
		   SUBSTRING(CONVERT(varchar,CAST(油量 as money),1 ),1, LEN(CONVERT(varchar,CAST(油量 as money),1 ))-1) 油量,
		   SUBSTRING(CONVERT(varchar,CAST(油費 as money),1 ),1, LEN(CONVERT(varchar,CAST(油費 as money),1 ))-3) 油費,
		   SUBSTRING(CONVERT(varchar,CAST(修理費 as money),1 ),1, LEN(CONVERT(varchar,CAST(修理費 as money),1 ))-3) 修理費,
		   SUBSTRING(CONVERT(varchar,CAST(輪胎費 as money),1 ),1, LEN(CONVERT(varchar,CAST(輪胎費 as money),1 ))-3) 輪胎費,
		   SUBSTRING(CONVERT(varchar,CAST(通行費 as money),1 ),1, LEN(CONVERT(varchar,CAST(通行費 as money),1 ))-3) 通行費,
		   SUBSTRING(CONVERT(varchar,CAST(公司罰款 as money),1 ),1, LEN(CONVERT(varchar,CAST(公司罰款 as money),1 ))-3) 公司罰款,
		   SUBSTRING(CONVERT(varchar,CAST(寄櫃費 as money),1 ),1, LEN(CONVERT(varchar,CAST(寄櫃費 as money),1 ))-3) 寄櫃費,
		   SUBSTRING(CONVERT(varchar,CAST(薪資 as money),1 ),1, LEN(CONVERT(varchar,CAST(薪資 as money),1 ))-3) 薪資,
		   SUBSTRING(CONVERT(varchar,CAST(保牌燃費 as money),1 ),1, LEN(CONVERT(varchar,CAST(保牌燃費 as money),1 ))-3) 保牌燃費,
		   SUBSTRING(CONVERT(varchar,CAST(折舊 as money),1 ),1, LEN(CONVERT(varchar,CAST(折舊 as money),1 ))-3) 折舊,
		   SUBSTRING(CONVERT(varchar,CAST(淨利 as money),1 ),1, LEN(CONVERT(varchar,CAST(淨利 as money),1 ))-3) 淨利,	
		   耗油比,
		   油耗
	from @tmp 
	order by carteamno,gno,年份,carno,driverno;

z_tran03:--z_tran03
	SET QUOTED_IDENTIFIER OFF
	declare @cmd nvarchar(max)
	declare @t_accy nvarchar(10)
	declare @t_month nvarchar(10)
	declare @t_bmon nvarchar(10)
	declare @t_emon nvarchar(10)
	declare @t_btrandate nvarchar(10)
	declare @t_etrandate nvarchar(10)
	declare @t_bcustno nvarchar(20)
	declare @t_ecustno nvarchar(20)
	declare @t_bdriverno nvarchar(20)
	declare @t_edriverno nvarchar(20)
	declare @t_bsalesno nvarchar(20)
	declare @t_esalesno nvarchar(20)
	declare @t_carteamno nvarchar(2)
	declare @t_carno nvarchar(20)
	declare @t_po nvarchar(20)
	set @t_accy = '[1]'
	set @t_month = case when '#non'=[2] then '' else [2] end
	set @t_bmon = case when '#non'=[3] then '' else [3] end
	set @t_emon = case when '#non'=[4] then char(255) else [4] end
	set @t_btrandate = case when '#non'=[5] then '' else [5] end
	set @t_etrandate = case when '#non'=[6] then char(255) else [6] end
	set @t_bcustno = case when '#non'=[7] then '' else [7] end
	set @t_ecustno = case when '#non'=[8] then char(255) else [8] end
	set @t_bdriverno = case when '#non'=[9] then '' else [9] end
	set @t_edriverno = case when '#non'=[10] then char(255) else [10] end
	set @t_bsalesno = case when '#non'=[11] then '' else [11] end
	set @t_esalesno = case when '#non'=[12] then char(255) else [12] end
	set @t_carteamno = case when '#non'=[13] then '' else [13] end
	set @t_carno = case when '#non'=[14] then '' else [14] end
	set @t_po = case when '#non'=[15] then '' else [15] end

	--used  @t_accy,@t_btrandate,@t_etrandate,@t_bcustno,@t_ecustno,@t_po

	declare @tmp table(
		gno nvarchar(1),
		custno nvarchar(20),
		comp nvarchar(50),
		mount int,
		total int,
		trandate nvarchar(10),
		tranno nvarchar(30),
		caseno nvarchar(20),
		money int,
		po nvarchar(20),
		uccno nvarchar(20),
		product nvarchar(40),
		addr nvarchar(20)
	)

	set @cmd = "SELECT '0',custno,comp,0,0,trandate,noa,caseno,total,po,uccno,product,straddr
				from trans"+@t_accy+"
				where len(ISNULL(po,''))>0 and (len(@t_po)=0 or po=@t_po) and
				(custno between @t_bcustno and @t_ecustno) and (trandate between @t_btrandate and @t_etrandate)
				order by custno,po,trandate"
	insert into @tmp
	execute sp_executesql @cmd,N'@t_po nvarchar(20),@t_bcustno nvarchar(20),@t_ecustno nvarchar(20),@t_btrandate nvarchar(10),@t_etrandate nvarchar(10)',
							@t_po=@t_po,@t_bcustno=@t_bcustno,@t_ecustno=@t_ecustno,@t_btrandate=@t_btrandate,@t_etrandate=@t_etrandate

	insert into @tmp
	select '1',custno,'',COUNT(1),SUM(money),'','','',0,po,'','',''
	from @tmp
	group by custno,po

	insert into @tmp
	select '2',custno,'',sum(mount),SUM(money),'','','',0,CHAR(255),'','',''
	from @tmp
	where gno='1'
	group by custno

	select custno+'_'+po g,*
	from @tmp order by custno,po,gno,trandate,caseno;

z_tran06:--z_tran06
	SET QUOTED_IDENTIFIER OFF
	declare @cmd nvarchar(max)
	declare @t_accy nvarchar(10)
	--declare @t_month nvarchar(10)
	--declare @t_bmon nvarchar(10)
	--declare @t_emon nvarchar(10)
	declare @t_btrandate nvarchar(10)
	declare @t_etrandate nvarchar(10)
	--declare @t_bcustno nvarchar(20)
	--declare @t_ecustno nvarchar(20)
	declare @t_bdriverno nvarchar(20)
	declare @t_edriverno nvarchar(20)
	--declare @t_bsalesno nvarchar(20)
	--declare @t_esalesno nvarchar(20)
	declare @t_carteamno nvarchar(2)
	declare @t_carno nvarchar(20)
	set @t_accy = '[1]'
	--set @t_month = case when '#non'=[2] then '' else [2] end
	--set @t_bmon = case when '#non'=[3] then '' else [3] end
	--set @t_emon = case when '#non'=[4] then char(255) else [4] end
	set @t_btrandate = case when '#non'=[5] then '' else [5] end
	set @t_etrandate = case when '#non'=[6] then char(255) else [6] end
	--set @t_bcustno = case when '#non'=[7] then '' else [7] end
	--set @t_ecustno = case when '#non'=[8] then char(255) else [8] end
	set @t_bdriverno = case when '#non'=[9] then '' else [9] end
	set @t_edriverno = case when '#non'=[10] then char(255) else [10] end
	--set @t_bsalesno = case when '#non'=[11] then '' else [11] end
	--set @t_esalesno = case when '#non'=[12] then char(255) else [12] end
	set @t_carteamno = case when '#non'=[13] then '' else [13] end
	set @t_carno = case when '#non'=[14] then '' else [14] end
	
	declare @tmp table(
		gno nvarchar(1),
		driverno nvarchar(20),
		driver nvarchar(40),
		carno nvarchar(20),
		[type] nvarchar(10),
		本期運費 int,
		公司車帳款 int,
		外車帳款 int,
		差額 int,
		里程數 float,
		油量 float,
		油耗 float
		primary key (driverno,gno,carno) 
	)

	set @cmd = "select '0',isnull(a.driverno,''),isnull(b.namea,''),isnull(a.carno,''),'' [type],"+
			   "sum(round(a.mount*a.price,0)),"+
			   "sum(round(a.mount2*a.price2,0)),"+
			   "sum(round(a.mount2*a.price3*a.discount,0)),"+
			   "0 差額,"+
			   "sum(isnull(a.miles,0)),"+
			   "0 油量,"+
			   "0 油耗"+
			   " from trans"+@t_accy+" a"+
			   " left join driver b on b.noa=a.driverno"+
			   " where not len(isnull(a.driverno,''))=0 and "+
			   " (isnull(a.driverno,'') between @t_bdriverno and @t_edriverno) and "+
			   " (isnull(a.trandate,'') between @t_btrandate and @t_etrandate) and "+
			   " (len(isnull(@t_carteamno,''))=0 or a.carteamno=@t_carteamno) and "+
			   " (len(isnull(@t_carno,''))=0 or a.carno=@t_carno) "+
			   " group by isnull(a.driverno,''),isnull(b.namea,''),isnull(a.carno,'')"
	insert into @tmp
	execute sp_executesql @cmd,N'@t_btrandate nvarchar(10),@t_etrandate nvarchar(10),@t_bdriverno nvarchar(20),@t_edriverno nvarchar(20),@t_carteamno nvarchar(20),@t_carno nvarchar(20)',
		@t_btrandate=@t_btrandate,@t_etrandate=@t_etrandate,@t_bdriverno=@t_bdriverno,@t_edriverno=@t_edriverno,@t_carteamno=@t_carteamno,@t_carno=@t_carno
--=====================================================================================================

	declare @driverno nvarchar(20)
	declare @carno nvarchar(20)
	declare @mon nvarchar(10)
	declare @t_oilmount float
	
	declare cursor_table cursor for
	select driverno,carno from @tmp 
	open cursor_table
	fetch next from cursor_table
	into @driverno,@carno
	while(@@FETCH_STATUS <> -1)
	begin
		set @t_oilmount = 0
		select @t_oilmount = a.mount
		from(select SUM(mount) mount from oil where driverno=@driverno and carno=@carno and (datea between @t_btrandate and @t_etrandate) group by driver,carno) a
		
		update @tmp set [type]=case when not 公司車帳款=0 and 外車帳款=0 then '公' when 公司車帳款=0 and not 外車帳款=0 then '外' else '*' end,
			差額=本期運費-公司車帳款-外車帳款,
			油量=@t_oilmount,
			油耗=case when @t_oilmount=0 then 0 else ROUND(里程數/@t_oilmount,2) end
		where driverno=@driverno and carno=@carno
		
		fetch next from cursor_table
		into @driverno,@carno
	end
	close cursor_table
	deallocate cursor_table
--=====================================================================================================	

	select gno,driverno+carno g,driverno a,driver b,carno c,[type] d,
		SUBSTRING(CONVERT(nvarchar,CAST(本期運費 as money),1 ),1, LEN(CONVERT(nvarchar,CAST(本期運費 as money),1 ))-3) e,
		SUBSTRING(CONVERT(nvarchar,CAST(公司車帳款+外車帳款 as money),1 ),1, LEN(CONVERT(nvarchar,CAST(公司車帳款+外車帳款 as money),1 ))-3) f,
		SUBSTRING(CONVERT(nvarchar,CAST(差額 as money),1 ),1, LEN(CONVERT(nvarchar,CAST(差額 as money),1 ))-3) h,
		SUBSTRING(CONVERT(nvarchar,CAST(里程數 as money),1 ),1, LEN(CONVERT(nvarchar,CAST(里程數 as money),1 ))-3) i,
		SUBSTRING(CONVERT(nvarchar,CAST(油量 as money),1 ),1, LEN(CONVERT(nvarchar,CAST(油量 as money),1 ))-3) j,
		SUBSTRING(CONVERT(nvarchar,CAST(油耗 as money),1 ),1, LEN(CONVERT(nvarchar,CAST(油耗 as money),1 ))) k
	from @tmp;

z_tran07:--z_tran07
	SET QUOTED_IDENTIFIER OFF
	declare @cmd nvarchar(max)
	declare @t_accy nvarchar(10)
	--declare @t_month nvarchar(10)
	--declare @t_bmon nvarchar(10)
	--declare @t_emon nvarchar(10)
	declare @t_btrandate nvarchar(10)
	declare @t_etrandate nvarchar(10)
	declare @t_bcustno nvarchar(20)
	declare @t_ecustno nvarchar(20)
	--declare @t_bdriverno nvarchar(20)
	--declare @t_edriverno nvarchar(20)
	--declare @t_bsalesno nvarchar(20)
	--declare @t_esalesno nvarchar(20)
	--declare @t_carteamno nvarchar(2)
	--declare @t_carno nvarchar(20)
	set @t_accy = '[1]'
	--set @t_month = case when '#non'=[2] then '' else [2] end
	--set @t_bmon = case when '#non'=[3] then '' else [3] end
	--set @t_emon = case when '#non'=[4] then char(255) else [4] end
	set @t_btrandate = case when '#non'=[5] then '' else [5] end
	set @t_etrandate = case when '#non'=[6] then char(255) else [6] end
	set @t_bcustno = case when '#non'=[7] then '' else [7] end
	set @t_ecustno = case when '#non'=[8] then char(255) else [8] end
	--set @t_bdriverno = case when '#non'=[9] then '' else [9] end
	--set @t_edriverno = case when '#non'=[10] then char(255) else [10] end
	--set @t_bsalesno = case when '#non'=[11] then '' else [11] end
	--set @t_esalesno = case when '#non'=[12] then char(255) else [12] end
	--set @t_carteamno = case when '#non'=[13] then '' else [13] end
	--set @t_carno = case when '#non'=[14] then '' else [14] end
	
	declare @tmp table(
		gno nvarchar(1),
		custno nvarchar(20),
		comp nvarchar(40),
		mon nvarchar(10),
		本期運費 int,
		公司車帳款 int,
		外車帳款 int,
		差額 int,
		請款金額 int,
		當月請款 int,
		次月請款 int,
		未沖帳餘額 int
	)

	set @cmd = "select '0',isnull(a.custno,''),isnull(b.comp,''),left(isnull(a.trandate,''),6),"+
			   "sum(round(mount*price,0)),"+
			   "sum(case when NOT calctype='6' then round(mount2*price2,0) else 0 end),"+
			   "sum(case when calctype='6' then round(mount2*price3*discount,0) else 0 end),"+
			   "0 差額,"+
			   "sum(isnull(c.tranmoney,0)) 請款金額,"+
			   "sum(case when d.mon=left(isnull(a.trandate,''),6) then isnull(c.tranmoney,0) else 0 end) 當月請款,"+
			   "sum(case when d.mon=left(isnull(a.trandate,''),6) then 0 else isnull(c.tranmoney,0) end) 次月請款,"+
			   "0 未沖帳餘額"+
			   " from trans"+@t_accy+" a"+
			   " left join cust b on b.noa=a.custno"+
			   " left join trds"+@t_accy+" c on c.tranno=a.noa and c.trannoq=a.noq"+
			   " left join trd"+@t_accy+" d on d.noa=c.noa"+
			   " where (isnull(a.custno,'') between @t_bcustno and @t_ecustno) and (isnull(a.trandate,'') between @t_btrandate and @t_etrandate)"+
			   " group by isnull(a.custno,''),isnull(b.comp,''),left(isnull(a.trandate,''),6)"
	insert into @tmp
	execute sp_executesql @cmd,N'@t_btrandate nvarchar(10),@t_etrandate nvarchar(10),@t_bcustno nvarchar(20),@t_ecustno nvarchar(20)',
		@t_btrandate=@t_btrandate,@t_etrandate=@t_etrandate,@t_bcustno=@t_bcustno,@t_ecustno=@t_ecustno
--=====================================================================================================
	declare @custno nvarchar(20)
	declare @mon nvarchar(10)
	declare @t_unpay int

	declare cursor_table cursor for
	select custno,mon from @tmp 
	open cursor_table
	fetch next from cursor_table
	into @custno,@mon
	while(@@FETCH_STATUS <> -1)
	begin
		set @t_unpay = 0
		set @cmd = "select @t_unpay=sum(isnull(unpay,0)) from trd"+@t_accy+" where custno=@custno group by custno"
		execute sp_executesql @cmd,N'@t_unpay int output,@custno nvarchar(20)',@t_unpay=@t_unpay output,@custno=@custno
		update @tmp set 差額=本期運費-公司車帳款-外車帳款 where custno=@custno and mon=@mon
		
		fetch next from cursor_table
		into @custno,@mon
	end
	close cursor_table
	deallocate cursor_table
	
	declare cursor_table cursor for
	select custno from @tmp group by custno 
	open cursor_table
	fetch next from cursor_table
	into @custno
	while(@@FETCH_STATUS <> -1)
	begin
		set @t_unpay = 0
		set @cmd = "select @t_unpay=sum(isnull(unpay,0)) from trd"+@t_accy+" where custno=@custno group by custno"
		execute sp_executesql @cmd,N'@t_unpay int output,@custno nvarchar(20)',@t_unpay=@t_unpay output,@custno=@custno
		update top(1) @tmp set 未沖帳餘額=@t_unpay where custno=@custno
		
		fetch next from cursor_table
		into @custno
	end
	close cursor_table
	deallocate cursor_table
	--=====================================================================================================
	insert into @tmp
	select '1',custno,'',CHAR(255),sum(本期運費),sum(公司車帳款),sum(外車帳款),sum(差額),sum(請款金額),sum(當月請款),sum(次月請款),sum(未沖帳餘額) 
	from @tmp group by custno
	
	select gno,custno g,custno,comp,mon,
	SUBSTRING(CONVERT(nvarchar,CAST(本期運費 as money),1 ),1, LEN(CONVERT(nvarchar,CAST(本期運費 as money),1 ))-3) m1,
	SUBSTRING(CONVERT(nvarchar,CAST(公司車帳款 as money),1 ),1, LEN(CONVERT(nvarchar,CAST(公司車帳款 as money),1 ))-3) m2,
	SUBSTRING(CONVERT(nvarchar,CAST(外車帳款 as money),1 ),1, LEN(CONVERT(nvarchar,CAST(外車帳款 as money),1 ))-3) m3,
	SUBSTRING(CONVERT(nvarchar,CAST(差額 as money),1 ),1, LEN(CONVERT(nvarchar,CAST(差額 as money),1 ))-3) m4,
	SUBSTRING(CONVERT(nvarchar,CAST(當月請款 as money),1 ),1, LEN(CONVERT(nvarchar,CAST(當月請款 as money),1 ))-3) m5,
	SUBSTRING(CONVERT(nvarchar,CAST(次月請款 as money),1 ),1, LEN(CONVERT(nvarchar,CAST(次月請款 as money),1 ))-3) m6,
	SUBSTRING(CONVERT(nvarchar,CAST(未沖帳餘額 as money),1 ),1, LEN(CONVERT(nvarchar,CAST(未沖帳餘額 as money),1 ))-3) m7 
	from @tmp order by custno,mon,gno;

z_tran09:--z_tran09
	declare @t_accy int
	declare @t_month nvarchar(10)
	declare @t_bmon nvarchar(10)
	declare @t_emon nvarchar(10)
	declare @t_bdate nvarchar(10)
	declare @t_edate nvarchar(10)
	declare @t_bcustno nvarchar(20)
	declare @t_ecustno nvarchar(20)
	declare @t_bdriverno nvarchar(20)
	declare @t_edriverno nvarchar(20)
	declare @t_bsalesno nvarchar(20)
	declare @t_esalesno nvarchar(20)
	declare @t_carteamno nvarchar(2)
	declare @t_carno nvarchar(20)
	set @t_accy = [1]
	set @t_month = case when '#non'=[2] then '' else [2] end
	set @t_bmon = case when '#non'=[3] then '' else [3] end
	set @t_emon = case when '#non'=[4] then char(255) else [4] end
	set @t_bdate = case when '#non'=[5] then '' else [5] end
	set @t_edate = case when '#non'=[6] then char(255) else [6] end
	set @t_bcustno = case when '#non'=[7] then '' else [7] end
	set @t_ecustno = case when '#non'=[8] then char(255) else [8] end
	set @t_bdriverno = case when '#non'=[9] then '' else [9] end
	set @t_edriverno = case when '#non'=[10] then char(255) else [10] end
	set @t_bsalesno = case when '#non'=[11] then '' else [11] end
	set @t_esalesno = case when '#non'=[12] then char(255) else [12] end
	set @t_carteamno = case when '#non'=[13] then '' else [13] end
	set @t_carno = case when '#non'=[14] then '' else [14] end
	--**********************************************************************************************************
	declare @tmp table(
		gno nvarchar(1),
		carteamno nvarchar(2),
		車隊 nvarchar(20),
		年份 nvarchar(10),
		carno nvarchar(20),
		driverno nvarchar(20),
		司機 nvarchar(20),
		廠牌 nvarchar(20),
		汽缸 nvarchar(10),
		業績 int,
		油費 int,
		耗油比 float,
		日數 int,
		油耗 float,
		公里數 float,
		油量 float
		primary key (carteamno,gno,carno,driverno) 
	)
	
	insert into @tmp
		select 
			'0' gno,
			a.carteamno,
			b.team 車隊,
			c.caryear 年份,
			a.carno,
			a.driverno,
			d.namea 司機,
			e.brand 廠牌,
			c.cylinder 汽缸,
			a.業績,
			a.油費,
			case when a.業績=0 then 0 else ROUND((a.油費+0.00)*100/a.業績,0) end 耗油比,
			a.日數,
			case when a.油量=0 then 0 else ROUND(a.公里數/a.油量,3) end 油耗,
			a.公里數,
			a.油量
		from( 
			select carteamno,carno,driverno,
				SUM(_31庫收入+_41庫收入+中鋼收入+車場收入) 業績,
				SUM(油費) 油費,
				SUM(日數) 日數,
				SUM(公里數) 公里數,
				SUM(油量) 油量
			from transz[1] 
			where (mon between @t_bmon and @t_emon) and (driverno between @t_bdriverno and @t_edriverno) and
				  (LEN(@t_carteamno)=0 or carteamno=@t_carteamno) and (LEN(@t_carno)=0 or carno=@t_carno)
			group by carteamno,carno,driverno
			
		)as a
		left join carteam b on b.noa = a.carteamno
		left join car2 c on c.noa = a.carno
		left join driver d on d.noa = a.driverno
		left join carbrand e on e.noa = c.carbrandno
	--*****************************************************************************************************
	select gno,carteamno,車隊,年份,carno,driverno,司機,廠牌,汽缸,
		SUBSTRING(CONVERT(varchar,CAST(業績 as money),1 ),1, LEN(CONVERT(varchar,CAST(業績 as money),1 ))-3) 業績,
		SUBSTRING(CONVERT(varchar,CAST(油費 as money),1 ),1, LEN(CONVERT(varchar,CAST(油費 as money),1 ))-3) 油費,
		耗油比,
		日數,
		油耗,
		SUBSTRING(CONVERT(varchar,CAST(公里數 as money),1 ),1, LEN(CONVERT(varchar,CAST(公里數 as money),1 ))-1) 公里數,
		SUBSTRING(CONVERT(varchar,CAST(油量 as money),1 ),1, LEN(CONVERT(varchar,CAST(油量 as money),1 ))-1) 油量
	from @tmp;

z_tran11:--z_tran11
	declare @t_accy int
	declare @t_month nvarchar(10)
	declare @t_bmon nvarchar(10)
	declare @t_emon nvarchar(10)
	declare @t_btrandate nvarchar(10)
	declare @t_etrandate nvarchar(10)
	declare @t_bcustno nvarchar(20)
	declare @t_ecustno nvarchar(20)
	declare @t_bdriverno nvarchar(20)
	declare @t_edriverno nvarchar(20)
	declare @t_bsalesno nvarchar(20)
	declare @t_esalesno nvarchar(20)
	declare @t_carteamno nvarchar(2)
	declare @t_carno nvarchar(20)
	set @t_accy = [1]
	set @t_month = case when '#non'=[2] then '' else [2] end
	set @t_bmon = case when '#non'=[3] then '' else [3] end
	set @t_emon = case when '#non'=[4] then char(255) else [4] end
	set @t_btrandate = case when '#non'=[5] then '' else [5] end
	set @t_etrandate = case when '#non'=[6] then char(255) else [6] end
	set @t_bcustno = case when '#non'=[7] then '' else [7] end
	set @t_ecustno = case when '#non'=[8] then char(255) else [8] end
	set @t_bdriverno = case when '#non'=[9] then '' else [9] end
	set @t_edriverno = case when '#non'=[10] then char(255) else [10] end
	set @t_bsalesno = case when '#non'=[11] then '' else [11] end
	set @t_esalesno = case when '#non'=[12] then char(255) else [12] end
	set @t_carteamno = case when '#non'=[13] then '' else [13] end
	set @t_carno = case when '#non'=[14] then '' else [14] end
	--**********************************************************************************************************
	declare @result table(
		gno nvarchar(1),
		salesno nvarchar(20),
		業務 nvarchar(40),
		貨櫃金額 int,
		平板金額 int,
		散裝金額 int,
		中鋼外車 int
		primary key (gno,salesno,業務) 
	)
	--1@貨櫃,2@平板,3@散裝
	insert into @result
		select '0' gno,
			ISNULL(a.salesno,''),
			ISNULL(b.namea,''),
			sum(case when ttype='1' then round(mount*price,0) else 0 end),
			sum(case when ttype='2' then round(mount*price,0) else 0 end),
			sum(case when ttype='3' then round(mount*price,0) else 0 end),
			0 中鋼外車
		from trans[1] a
		left join sss b on b.noa = a.salesno
		where a.trandate between @t_btrandate and @t_etrandate and a.salesno between @t_bsalesno and @t_esalesno
		group by a.salesno,b.namea
	--*****************************************************************************************************
	insert into @result
		select 
			'1' gno,
			'',
			'',
			sum(散裝金額),
			sum(平板金額),
			sum(貨櫃金額),
			sum(中鋼外車)
		from @result
	--*****************************************************************************************************
	select gno,salesno,業務,
		SUBSTRING(CONVERT(varchar,CAST(散裝金額 as money),1 ),1, LEN(CONVERT(varchar,CAST(散裝金額 as money),1 ))-3) 散裝金額,
		SUBSTRING(CONVERT(varchar,CAST(平板金額 as money),1 ),1, LEN(CONVERT(varchar,CAST(平板金額 as money),1 ))-3) 平板金額,
		SUBSTRING(CONVERT(varchar,CAST(貨櫃金額 as money),1 ),1, LEN(CONVERT(varchar,CAST(貨櫃金額 as money),1 ))-3) 貨櫃金額,
		SUBSTRING(CONVERT(varchar,CAST(中鋼外車 as money),1 ),1, LEN(CONVERT(varchar,CAST(中鋼外車 as money),1 ))-3) 中鋼外車
	from @result;


z_tran12:--z_tran12
	declare @t_accy int
	declare @t_month nvarchar(10)
	declare @t_bmon nvarchar(10)
	declare @t_emon nvarchar(10)
	declare @t_btrandate nvarchar(10)
	declare @t_etrandate nvarchar(10)
	declare @t_bcustno nvarchar(20)
	declare @t_ecustno nvarchar(20)
	declare @t_bdriverno nvarchar(20)
	declare @t_edriverno nvarchar(20)
	declare @t_bsalesno nvarchar(20)
	declare @t_esalesno nvarchar(20)
	declare @t_carteamno nvarchar(2)
	declare @t_carno nvarchar(20)
	set @t_accy = [1]
	set @t_month = case when '#non'=[2] then '' else [2] end
	set @t_bmon = case when '#non'=[3] then '' else [3] end
	set @t_emon = case when '#non'=[4] then char(255) else [4] end
	set @t_btrandate = case when '#non'=[5] then '' else [5] end
	set @t_etrandate = case when '#non'=[6] then char(255) else [6] end
	set @t_bcustno = case when '#non'=[7] then '' else [7] end
	set @t_ecustno = case when '#non'=[8] then char(255) else [8] end
	set @t_bdriverno = case when '#non'=[9] then '' else [9] end
	set @t_edriverno = case when '#non'=[10] then char(255) else [10] end
	set @t_bsalesno = case when '#non'=[11] then '' else [11] end
	set @t_esalesno = case when '#non'=[12] then char(255) else [12] end
	set @t_carteamno = case when '#non'=[13] then '' else [13] end
	set @t_carno = case when '#non'=[14] then '' else [14] end
	--**********************************************************************************************************
	declare @result table(
		gno nvarchar(1),
		custno nvarchar(20),
		comp nvarchar(40),
		噸數 float,
		散裝金額 int,
		櫃量 float,
		貨櫃金額 int,
		平板金額 int
		primary key (gno,custno) 
	)
	
	insert into @result
		select '0' gno,
			a.custno,
			b.comp,
			sum(case when ttype='3' then mount else 0 end),
			sum(case when ttype='3' then round(mount*price,0) else 0 end),
			sum(case when ttype='1' then mount else 0 end),
			sum(case when ttype='1' then round(mount*price,0) else 0 end),
			sum(case when ttype='2' then round(mount*price,0) else 0 end)
		from trans[1] a
		left join cust b on b.noa = a.custno
		where a.trandate between @t_btrandate and @t_etrandate and a.custno between @t_bcustno and @t_ecustno
		group by a.custno,b.comp
	--*****************************************************************************************************
	insert into @result
		select 
			'1' gno,
			'',
			'',
			sum(噸數),
			sum(散裝金額),
			sum(櫃量),
			sum(貨櫃金額),
			sum(平板金額)
		from @result
	--*****************************************************************************************************
	select gno,custno,comp,
		CONVERT(varchar,CAST(噸數 as money),1 ) 噸數,
		SUBSTRING(CONVERT(varchar,CAST(散裝金額 as money),1 ),1, LEN(CONVERT(varchar,CAST(散裝金額 as money),1 ))-3) 散裝金額,
		SUBSTRING(CONVERT(varchar,CAST(櫃量 as money),1 ),1, LEN(CONVERT(varchar,CAST(櫃量 as money),1 ))-1) 櫃量,
		SUBSTRING(CONVERT(varchar,CAST(貨櫃金額 as money),1 ),1, LEN(CONVERT(varchar,CAST(貨櫃金額 as money),1 ))-3) 貨櫃金額,
		SUBSTRING(CONVERT(varchar,CAST(平板金額 as money),1 ),1, LEN(CONVERT(varchar,CAST(平板金額 as money),1 ))-3) 平板金額
	from @result;

z_tran13:--z_tran13
	declare @t_accy int
	declare @t_month nvarchar(10)
	declare @t_bmon nvarchar(10)
	declare @t_emon nvarchar(10)
	declare @t_btrandate nvarchar(10)
	declare @t_etrandate nvarchar(10)
	declare @t_bcustno nvarchar(20)
	declare @t_ecustno nvarchar(20)
	declare @t_bdriverno nvarchar(20)
	declare @t_edriverno nvarchar(20)
	declare @t_bsalesno nvarchar(20)
	declare @t_esalesno nvarchar(20)
	declare @t_carteamno nvarchar(2)
	declare @t_carno nvarchar(20)
	set @t_accy = [1]
	set @t_month = case when '#non'=[2] then '' else [2] end
	set @t_bmon = case when '#non'=[3] then '' else [3] end
	set @t_emon = case when '#non'=[4] then char(255) else [4] end
	set @t_btrandate = case when '#non'=[5] then '' else [5] end
	set @t_etrandate = case when '#non'=[6] then char(255) else [6] end
	set @t_bcustno = case when '#non'=[7] then '' else [7] end
	set @t_ecustno = case when '#non'=[8] then char(255) else [8] end
	set @t_bdriverno = case when '#non'=[9] then '' else [9] end
	set @t_edriverno = case when '#non'=[10] then char(255) else [10] end
	set @t_bsalesno = case when '#non'=[11] then '' else [11] end
	set @t_esalesno = case when '#non'=[12] then char(255) else [12] end
	set @t_carteamno = case when '#non'=[13] then '' else [13] end
	set @t_carno = case when '#non'=[14] then '' else [14] end
	--*****************************************************************************************************
	declare @result table(
		gno nvarchar(1),
		custno nvarchar(20),
		comp nvarchar(40),
		本期運費 int, 
		外車帳款 int,
		差額 int
		primary key (gno,custno) 
	)
	
	insert into @result
		select '0' gno,
			a.custno,
			b.comp,
			SUM(case when calctype='6' then Round(mount * price, 0)else 0 end),
			SUM(case when calctype='6' then Round(mount2 * price3*discount, 0)else 0 end),
			SUM(case when calctype='6' then Round(mount * price, 0)else 0 end-case when calctype='6' then Round(mount2 * price3, 0)else 0 end)
		from trans[1] a
		left join cust b on b.noa = a.custno
		where a.trandate between @t_btrandate and @t_etrandate and a.custno between @t_bcustno and @t_ecustno
		group by a.custno,b.comp
	--*****************************************************************************************************
	insert into @result
		select 
			'1',
			'',
			'',
			sum(本期運費 ),
			sum(外車帳款),
			sum(差額)
		from @result
	--*****************************************************************************************************
	select gno,custno,comp,
		SUBSTRING(CONVERT(varchar,CAST(本期運費 as money),1 ),1, LEN(CONVERT(varchar,CAST(本期運費 as money),1 ))-3) 本期運費,
		SUBSTRING(CONVERT(varchar,CAST(外車帳款 as money),1 ),1, LEN(CONVERT(varchar,CAST(外車帳款 as money),1 ))-3) 外車帳款,
		SUBSTRING(CONVERT(varchar,CAST(差額 as money),1 ),1, LEN(CONVERT(varchar,CAST(差額 as money),1 ))-3) 差額
	from @result where 本期運費>0 or 外車帳款> 0 or 差額>0;

z_tran18:--z_tran18
	declare @t_accy int
	declare @t_month nvarchar(10)
	declare @t_bmon nvarchar(10)
	declare @t_emon nvarchar(10)
	declare @t_bdate nvarchar(10)
	declare @t_edate nvarchar(10)
	declare @t_bcustno nvarchar(20)
	declare @t_ecustno nvarchar(20)
	declare @t_bdriverno nvarchar(20)
	declare @t_edriverno nvarchar(20)
	declare @t_bsalesno nvarchar(20)
	declare @t_esalesno nvarchar(20)
	declare @t_carteamno nvarchar(2)
	declare @t_carno nvarchar(20)
	set @t_accy = [1]
	set @t_month = case when '#non'=[2] then '' else [2] end
	set @t_bmon = case when '#non'=[3] then '' else [3] end
	set @t_emon = case when '#non'=[4] then char(255) else [4] end
	set @t_bdate = case when '#non'=[5] then '' else [5] end
	set @t_edate = case when '#non'=[6] then char(255) else [6] end
	set @t_bcustno = case when '#non'=[7] then '' else [7] end
	set @t_ecustno = case when '#non'=[8] then char(255) else [8] end
	set @t_bdriverno = case when '#non'=[9] then '' else [9] end
	set @t_edriverno = case when '#non'=[10] then char(255) else [10] end
	set @t_bsalesno = case when '#non'=[11] then '' else [11] end
	set @t_esalesno = case when '#non'=[12] then char(255) else [12] end
	set @t_carteamno = case when '#non'=[13] then '' else [13] end
	set @t_carno = case when '#non'=[14] then '' else [14] end
	--**********************************************************************************************************
	declare @tmp table(
		gno nvarchar(1),
		carteamno nvarchar(2),
		車隊 nvarchar(20),
		年份 nvarchar(10),
		汽缸 nvarchar(10),
		日數 int,
		carno nvarchar(20),
		driverno nvarchar(20),
		司機 nvarchar(20),
		_31庫噸數 float,
		_41庫噸數 float,
		_31庫收入 int,
		_41庫收入 int,
		中鋼收入 int,
		車場收入 int,
		業績獎金 int,
		安全津貼 int,
		全勤獎金 int,
		達成獎金 int,
		其他加項 int,
		應支金額 int,
		司機罰款 int,
		勞保 int,
		健保 int,
		勞退金 int,
		其他扣款 int,
		借支 int,
		實領金額 int,
		尚欠金額 int,
		備註 nvarchar(max)
		primary key(carteamno,gno,carno,driverno)
	)
	
	insert into @tmp
		select 
			'0' gno,
			a.carteamno,
			b.team 車隊, 
			d.caryear 年份,
			d.cylinder 汽缸,
			SUM(a.日數) 日數,
			a.carno carno,
			a.driverno driverno,
			c.namea 司機, 
			SUM(a._31庫噸數),
			SUM(a._41庫噸數),
			SUM(a._31庫收入),
			SUM(a._41庫收入),
			SUM(a.中鋼收入),
			SUM(a.車場收入),
			SUM(a.業績獎金),
			SUM(a.安全津貼),
			SUM(a.全勤獎金),
			SUM(a.達成獎金),
			SUM(a.其他加項),
			SUM(a.應支金額),
			SUM(a.司機罰款),
			SUM(a.勞保),
			SUM(a.健保),
			SUM(a.勞退金),
			SUM(a.其他扣款),
			SUM(a.借支),
			SUM(a.實領金額),
			SUM(a.尚欠金額),
			'' 備註
		from transz[1] a
		left join carteam b on a.carteamno = b.noa
		left join driver c on a.driverno = c.noa 
		left join car2 d on a.carno = d.noa
		where (a.mon between @t_bmon and @t_emon) and (a.driverno between @t_bdriverno and @t_edriverno) and
			  (LEN(@t_carteamno)=0 or a.carteamno=@t_carteamno) and (LEN(@t_carno)=0 or a.carno=@t_carno)
		group by a.carteamno,b.team,d.caryear,d.cylinder,a.carno,a.driverno,c.namea
	--**********************************************************************************************************
	insert into @tmp
		select 
			'1' gno,
			carteamno,
			'' 車隊, 
			'' 年份,
			'' 汽缸,
			SUM(日數),
			'' carno,
			'' driverno,
			'' 司機, 
			SUM(_31庫噸數),
			SUM(_41庫噸數),
			SUM(_31庫收入),
			SUM(_41庫收入),
			SUM(中鋼收入),
			SUM(車場收入),
			SUM(業績獎金),
			SUM(安全津貼),
			SUM(全勤獎金),
			SUM(達成獎金),
			SUM(其他加項),
			SUM(應支金額),
			SUM(司機罰款),
			SUM(勞保),
			SUM(健保),
			SUM(勞退金),
			SUM(其他扣款),
			SUM(借支),
			SUM(實領金額),
			SUM(尚欠金額),
			'' 備註
		from @tmp
		group by carteamno
	--**********************************************************************************************************
	select gno,carteamno,車隊,年份,汽缸,日數,carno,driverno,司機,
		   SUBSTRING(CONVERT(varchar,CAST(_31庫噸數 as money),1 ),1, LEN(CONVERT(varchar,CAST(_31庫噸數 as money),1 ))-3) _31庫噸數,
		   SUBSTRING(CONVERT(varchar,CAST(_41庫噸數 as money),1 ),1, LEN(CONVERT(varchar,CAST(_41庫噸數 as money),1 ))-3) _41庫噸數,
		   SUBSTRING(CONVERT(varchar,CAST(_31庫收入 as money),1 ),1, LEN(CONVERT(varchar,CAST(_31庫收入 as money),1 ))-3) _31庫收入,
		   SUBSTRING(CONVERT(varchar,CAST(_41庫收入 as money),1 ),1, LEN(CONVERT(varchar,CAST(_41庫收入 as money),1 ))-3) _41庫收入,
		   SUBSTRING(CONVERT(varchar,CAST(中鋼收入 as money),1 ),1, LEN(CONVERT(varchar,CAST(中鋼收入 as money),1 ))-3) 中鋼收入,
		   SUBSTRING(CONVERT(varchar,CAST(車場收入 as money),1 ),1, LEN(CONVERT(varchar,CAST(車場收入 as money),1 ))-3) 車場收入,
		   SUBSTRING(CONVERT(varchar,CAST(業績獎金 as money),1 ),1, LEN(CONVERT(varchar,CAST(業績獎金 as money),1 ))-3) 業績獎金,
		   SUBSTRING(CONVERT(varchar,CAST(安全津貼 as money),1 ),1, LEN(CONVERT(varchar,CAST(安全津貼 as money),1 ))-3) 安全津貼,
		   SUBSTRING(CONVERT(varchar,CAST(全勤獎金 as money),1 ),1, LEN(CONVERT(varchar,CAST(全勤獎金 as money),1 ))-3) 全勤獎金,
		   SUBSTRING(CONVERT(varchar,CAST(達成獎金 as money),1 ),1, LEN(CONVERT(varchar,CAST(達成獎金 as money),1 ))-3) 達成獎金,
		   SUBSTRING(CONVERT(varchar,CAST(其他加項 as money),1 ),1, LEN(CONVERT(varchar,CAST(其他加項 as money),1 ))-3) 其他加項,
		   SUBSTRING(CONVERT(varchar,CAST(應支金額 as money),1 ),1, LEN(CONVERT(varchar,CAST(應支金額 as money),1 ))-3) 應支金額,
		   SUBSTRING(CONVERT(varchar,CAST(司機罰款 as money),1 ),1, LEN(CONVERT(varchar,CAST(司機罰款 as money),1 ))-3) 司機罰款,
		   SUBSTRING(CONVERT(varchar,CAST(勞保 as money),1 ),1, LEN(CONVERT(varchar,CAST(勞保 as money),1 ))-3) 勞保,
		   SUBSTRING(CONVERT(varchar,CAST(健保 as money),1 ),1, LEN(CONVERT(varchar,CAST(健保 as money),1 ))-3) 健保,
		   SUBSTRING(CONVERT(varchar,CAST(其他扣款 as money),1 ),1, LEN(CONVERT(varchar,CAST(其他扣款 as money),1 ))-3) 其他扣款,
		   SUBSTRING(CONVERT(varchar,CAST(借支 as money),1 ),1, LEN(CONVERT(varchar,CAST(借支 as money),1 ))-3) 借支,
		   SUBSTRING(CONVERT(varchar,CAST(實領金額 as money),1 ),1, LEN(CONVERT(varchar,CAST(實領金額 as money),1 ))-3) 實領金額,
		   SUBSTRING(CONVERT(varchar,CAST(尚欠金額 as money),1 ),1, LEN(CONVERT(varchar,CAST(尚欠金額 as money),1 ))-3) 尚欠金額,
		   SUBSTRING(CONVERT(varchar,CAST(勞保+健保+勞退金 as money),1 ),1, LEN(CONVERT(varchar,CAST(勞保+健保+勞退金 as money),1 ))-3) 勞健保,
		   '' 備註
	from @tmp 
	order by carteamno,gno,年份,carno,driverno;
--****************************************************************************************************************************************************
z_tran14:
	
	declare @t_month nvarchar(10)
	declare @t_bmon nvarchar(10)
	declare @t_emon nvarchar(10)
	declare @t_bdate nvarchar(10)
	declare @t_edate nvarchar(10)
	declare @t_bcustno nvarchar(20)
	declare @t_ecustno nvarchar(20)
	declare @t_bdriverno nvarchar(20)
	declare @t_edriverno nvarchar(20)
	declare @t_bsalesno nvarchar(20)
	declare @t_esalesno nvarchar(20)
	declare @t_carteamno nvarchar(2)
	declare @t_carno nvarchar(20)
	set @t_month = case when '#non'=[2] then '' else [2] end
	set @t_bmon = case when '#non'=[3] then '' else [3] end
	set @t_emon = case when '#non'=[4] then char(255) else [4] end
	set @t_bdate = case when '#non'=[5] then '' else [5] end
	set @t_edate = case when '#non'=[6] then char(255) else [6] end
	set @t_bcustno = case when '#non'=[7] then '' else [7] end
	set @t_ecustno = case when '#non'=[8] then char(255) else [8] end
	set @t_bdriverno = case when '#non'=[9] then '' else [9] end
	set @t_edriverno = case when '#non'=[10] then char(255) else [10] end
	set @t_bsalesno = case when '#non'=[11] then '' else [11] end
	set @t_esalesno = case when '#non'=[12] then char(255) else [12] end
	set @t_carteamno = case when '#non'=[13] then '' else [13] end
	set @t_carno = case when '#non'=[14] then '' else [14] end
declare @result table(
		gno nvarchar(1),
		noa nvarchar(20),
		datea nvarchar(20),
		custno nvarchar(20),
		comp nvarchar(90),
		driverno nvarchar(20),
		driver nvarchar(20),
		carno nvarchar(20),
		uccno  nvarchar(20),
		product nvarchar(20),
		straddr nvarchar(20),
		mount float,
		price float,
		total float
)
insert into @result
select '0' gno,noa,datea,custno,left(comp,4),driverno,driver,carno,uccno,product,straddr,mount,price,total 
from trans[1]
where (datea between @t_bdate and @t_edate) and
(custno between @t_bcustno and @t_ecustno) and
(driverno between @t_bdriverno and @t_edriverno) and
(LEN(@t_carno)=0 or carno=@t_carno)
select *
from @result
order by datea;
--****************************************************************************************************************************************************
z_tran15:--z_tran15
	declare @t_month nvarchar(10)
	declare @t_bmon nvarchar(10)
	declare @t_emon nvarchar(10)
	declare @t_bdate nvarchar(10)
	declare @t_edate nvarchar(10)
	declare @t_bcustno nvarchar(20)
	declare @t_ecustno nvarchar(20)
	declare @t_bdriverno nvarchar(20)
	declare @t_edriverno nvarchar(20)
	declare @t_bsalesno nvarchar(20)
	declare @t_esalesno nvarchar(20)
	declare @t_carteamno nvarchar(2)
	declare @t_carno nvarchar(20)
	set @t_month = case when '#non'=[2] then '' else [2] end
	set @t_bmon = case when '#non'=[3] then '' else [3] end
	set @t_emon = case when '#non'=[4] then char(255) else [4] end
	set @t_bdate = case when '#non'=[5] then '' else [5] end
	set @t_edate = case when '#non'=[6] then char(255) else [6] end
	set @t_bcustno = case when '#non'=[7] then '' else [7] end
	set @t_ecustno = case when '#non'=[8] then char(255) else [8] end
	set @t_bdriverno = case when '#non'=[9] then '' else [9] end
	set @t_edriverno = case when '#non'=[10] then char(255) else [10] end
	set @t_bsalesno = case when '#non'=[11] then '' else [11] end
	set @t_esalesno = case when '#non'=[12] then char(255) else [12] end
	set @t_carteamno = case when '#non'=[13] then '' else [13] end
	set @t_carno = case when '#non'=[14] then '' else [14] end
declare @result table(
		gno nvarchar(1),
		noa nvarchar(20),
		datea nvarchar(20),
		custno nvarchar(20),
		comp nvarchar(90),
		driverno nvarchar(20),
		driver nvarchar(20),
		carno nvarchar(20),
		uccno  nvarchar(20),
		product nvarchar(20),
		straddr nvarchar(20),
		mount2 float,
		price2 float,
		discount float, 
		total2 float
)
insert into @result
select '0' gno,noa,datea,custno,left(comp,4),driverno,driver,carno,uccno,product,straddr,mount2,price2,discount,total2 
from trans[1]
where (datea between @t_bdate and @t_edate) and
(custno between @t_bcustno and @t_ecustno) and
(driverno between @t_bdriverno and @t_edriverno) and
(LEN(@t_carno)=0 or carno=@t_carno)
select *
from @result
order by datea;