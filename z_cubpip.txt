z_cubpip1:--z_cubpip1
declare @t_bnoa nvarchar(35)
declare @t_enoa nvarchar(35)
set @t_bnoa = case when '#non' = [2] then '' else [2] end
set @t_enoa = case when '#non' = [3] then CHAR(255) else [3] end
declare @tmp table(
	gno nvarchar(1),
	noa nvarchar(35),
	ordeno nvarchar(35),
	no2 nvarchar(10),
	custno nvarchar(35),
	custs nvarchar(90),
	pno nvarchar(35),
	products nvarchar(90),
	csize nvarchar(max),
	amount float,
	aweight float,
	gmount float,
	gweight float,
	memo nvarchar(max)
)
insert into @tmp
	select
		'2',a.noa,a.ordeno,a.no2,a.custno,b.nick,a.productno,a.product,
		dbo.csize('B2',a.dime,a.width,a.lengthb,a.radius),a.mount,a.weight,0,0,a.memo
	from view_cubs[1] a
	left join cust b on a.custno = b.noa
	where (a.noa between @t_bnoa and @t_enoa)
insert into @tmp(gno,noa)
	select '1',noa from @tmp where gno = '2' group by noa
insert into @tmp(gno,noa)
	select '3',noa from @tmp where gno = '2' group by noa

insert into @tmp
	select
		'5',a.noa,a.ordeno,'','','',a.productno,a.product,
		dbo.csize((case c.typea when '1' then 'A1' else 'B2' end),a.dime,a.width,a.lengthb,a.radius),
		a.mount,a.weight,a.gmount,a.gweight,a.memo
	from view_cubt[1] a
	left join cust b on a.custno = b.noa
	left join view_cub[1] c on a.noa = c.noa
	where (a.noa between @t_bnoa and @t_enoa)
insert into @tmp(gno,noa)
	select '4',noa from @tmp where gno = '5' group by noa
insert into @tmp(gno,noa)
	select '6',noa from @tmp where gno = '5' group by noa
select
	gno,noa,ordeno,no2,custno,custs,pno,products,csize,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,amount),1)),4,12)) amount,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,floor(aweight)),1)),4,12))+'.'+LEFT(CAST((cast(floor((aweight*10)-(floor(aweight)*10)) as nvarchar)) as NVARCHAR) + REPLICATE('0', 1), 1) aweight,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,gmount),1)),4,12)) gmount,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,floor(gweight)),1)),4,12))+'.'+LEFT(CAST((cast(floor((gweight*10)-(floor(gweight)*10)) as nvarchar)) as NVARCHAR) + REPLICATE('0', 1), 1) gweight,
	memo
from @tmp order by noa,gno;
----------**************************************************----------
z_cubpip2:--z_cubpip2
declare @t_bnoa nvarchar(35)
declare @t_enoa nvarchar(35)
declare @t_pageline int = 15   --------一頁幾行
set @t_bnoa = case when '#non' = [2] then '' else [2] end
set @t_enoa = case when '#non' = [3] then CHAR(255) else [3] end
declare @tmp table(
	gno nvarchar(1),
	idno int identity(0,1),
	orderno int,
	pageno int,
	noa nvarchar(35),
	uno nvarchar(90),
	pno nvarchar(35),
	products nvarchar(90),
	csize nvarchar(max),
	amount float,
	aweight float,
	gmount float,
	gweight float
)
insert into @tmp
	select
		'0',ROW_NUMBER()over(partition by a.noa order by a.noa),1,
		a.noa,a.uno,a.productno,a.product,dbo.csize((case c.typea when '1' then 'A1' else 'B2' end),dime,width,lengthb,radius),
		a.mount,a.weight,a.gmount,a.gweight
	from view_cubt[1] a
	left join cust b on a.custno = b.noa
	left join view_cub[1] c on a.noa = c.noa
	where (a.noa between @t_bnoa and @t_enoa)
	order by a.noa
declare @a_noa nvarchar(30)
declare @a_count int
declare @idno int
declare @k int = 0 ----差幾頁
declare @pageCount int
declare @orderno int
declare @pageno int

declare cursor_table cursor for
	select noa,count(*),max(orderno) from @tmp group by noa
open cursor_table
fetch next from cursor_table
into @a_noa,@a_count,@orderno
while(@@FETCH_STATUS <> -1)
begin		
	if(@a_count > @t_pageline)
	begin
		set @k = CEILING((cast(@a_count as float)/@t_pageline))
		while(@k > 0)
		begin
			update @tmp set pageno = @k where orderno > ((@k-1)*@t_pageline) and orderno <= (@k*@t_pageline)
			set @k -=1
		end
	end
	fetch next from cursor_table
	into @a_noa,@a_count,@orderno
end
close cursor_table
deallocate cursor_table
update @tmp set orderno = orderno-((pageno-1)*@t_pageline)
declare cursor_table cursor for
	select distinct noa,max(orderno),pageno,min(idno),count(*) from @tmp group by noa,pageno
open cursor_table
fetch next from cursor_table
into @a_noa,@orderno,@pageno,@idno,@a_count
while(@@FETCH_STATUS <> -1)
begin		
	set @k = @t_pageline -(@a_count%@t_pageline)
	set @pageCount = @a_count/@t_pageline
	if(@k < @t_pageline and (@pageCount =0))
	begin
		while(@k > 0)
		begin
			insert into @tmp(gno,orderno,pageno,noa)
				select '0',(@orderno+1),@pageno,@a_noa from @tmp where idno = @idno
			set @k = @k-1
			set @orderno = @orderno +1
		end
	end
	insert into @tmp(gno,orderno,pageno,noa,amount,aweight,gmount,gweight)
		select '1',(@t_pageline+1),pageno,noa,sum(amount),sum(aweight),sum(gmount),sum(gweight) from @tmp where gno=0 and noa=@a_noa and pageno=@pageno group by noa,pageno
	insert into @tmp(gno,orderno,pageno,noa) 
		select '2',(@t_pageline+2),pageno,noa from @tmp where gno=0 and noa=@a_noa and pageno=@pageno group by noa,pageno
	fetch next from cursor_table
	into @a_noa,@orderno,@pageno,@idno,@a_count
end
close cursor_table
deallocate cursor_table
select
	gno,idno,orderno,pageno,noa,uno,pno,products,csize,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,amount),1)),4,12)) amount,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,floor(aweight)),1)),4,12))+'.'+LEFT(CAST((cast(floor((aweight*10)-(floor(aweight)*10)) as nvarchar)) as NVARCHAR) + REPLICATE('0', 1), 1) aweight,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,gmount),1)),4,12)) gmount,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,floor(gweight)),1)),4,12))+'.'+LEFT(CAST((cast(floor((gweight*10)-(floor(gweight)*10)) as nvarchar)) as NVARCHAR) + REPLICATE('0', 1), 1) gweight
from @tmp order by noa desc,pageno,gno,orderno;