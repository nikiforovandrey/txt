z_tb:--z_tb
	declare @t_bdate nvarchar(10)
	declare @t_edate nvarchar(10)
	declare @t_bproductno nvarchar(30)
	declare @t_eproductno nvarchar(30)
	set @t_bdate = case when '#non'=[1] then '' else [1] end
	set @t_edate = case when '#non'=[2] then char(255) else [2] end
	set @t_bproductno = case when '#non'=[3] then '' else [3] end
	set @t_eproductno = case when '#non'=[4] then char(255) else [4] end

	declare @result table(
		gno nvarchar(1),
		recno int,
		productno nvarchar(30),
		xproduct nvarchar(40),
		datea nvarchar(10),
		typea nvarchar(10),
		typec nvarchar(10),
		noa nvarchar(20),
		comp nvarchar(40),
		unit nvarchar(10),
		mount decimal(16,2),
		weight decimal(16,2),
		totmount decimal(18,2),
		totweight decimal(18,2)
		primary key (productno,recno) 
	)
	insert into @result
	select
		'0' gno, ROW_NUMBER()over(order by productno,datea,typea)as recno,R1.*, 0 totmount, 0 totweight
	from(
		select noa productno,product xproduct,isnull(datea,'') datea,'01' typea,'期初' typec, 
		       '' noa,'' comp, unit, start mount, start weight
		from ucc[5] 
		where  noa BETWEEN @t_bproductno AND @t_eproductno and datea<=@t_edate
		union
		select noa productno,product xproduct,isnull(datea,'') datea,'02' typea,'盤點' typec, 
		       noa,'' comp, unit, adjmount mount, adjweight weight
		from ucces[5]
		where  noa BETWEEN @t_bproductno AND @t_eproductno and datea<=@t_edate
		union
		select b.productno,b.product xproduct,isnull(b.datea,'') datea,case a.typea when '退' then 'A0' else '10' end typea,case a.typea when '退' then '進退' else '進貨' end typec,
		       b.noa, isNull(a.comp,'') comp, b.unit, b.mount, b.weight
		from rc2s[5] b left join rc2[5] a on a.noa=b.noa
		where b.productno BETWEEN @t_bproductno AND @t_eproductno and b.datea<=@t_edate
		union
		select b.productno,b.product xproduct,isnull(b.datea,'') datea,case a.typea when '退' then '11' else 'B0' end typea,case a.typea when '退' then '出退' else '出貨' end typec,
		       b.noa, isNull(a.comp,'') comp, b.unit, b.mount, b.weight
		from vccs[5] b left join vcc[5] a on a.noa=b.noa
		where b.productno BETWEEN @t_bproductno AND @t_eproductno and b.datea<=@t_edate
		union
		select productno,product xproduct,isnull(datea,'') datea, '12' typea, '入庫' typec,
		       noa, '' comp, unit, mount, weight
		from inas[5]
		where productno BETWEEN @t_bproductno AND @t_eproductno and datea<=@t_edate
		union
		select productno,product xproduct,isnull(datea,'') datea, 'C0' typea, '領料' typec,
		       noa, '' comp, unit, mount, weight
		from gets[5]
		where productno BETWEEN @t_bproductno AND @t_eproductno and datea<=@t_edate
		) as R1

	--*****************************************************************************************	
	declare @recno int
	declare @productno nvarchar(30)
	declare @typea nvarchar(10)
	declare @datea nvarchar(10)
	declare @mount decimal(18,2)
	declare @weight decimal(18,2)
	
	declare @t_productno nvarchar(30)
	declare @t_mount decimal(18,2)
	declare @t_weight decimal(18,2)
	declare @t_totmount decimal(18,2)
	declare @t_totweight decimal(18,2)
	set @t_productno = '@#S(DJ#SH!@'
	set @t_mount = 0
	set @t_weight = 0
	set @t_totmount = 0
	set @t_totweight = 0
	
	declare cursor_table cursor for
	select recno,productno,typea,datea,mount,weight from @result order by productno,recno
	open cursor_table
	fetch next from cursor_table
	into @recno,@productno,@typea,@datea,@mount,@weight
	while(@@FETCH_STATUS <> -1)
	begin
		if @t_productno!=@productno and @t_productno!='@#S(DJ#SH!@'
		begin
			insert into @result
			select '1' gno,-1 recno,@t_productno,'' xproduct,'' datea,'zz' typea,'小計' typec, 
				   '' noa,'' comp, '' unit, @t_mount mount, @t_weight weight, @t_totmount totmount, @t_totweight totweight
		end
		if @t_productno!=@productno
		begin
			set @t_productno = @productno
			set @t_mount = 0
			set @t_weight = 0
			set @t_totmount = 0
			set @t_totweight = 0
		end
		if  @datea between @t_bdate and @t_edate
		begin
			set @t_mount =
				case 
				when @typea='01' or @typea='02' then @mount
				when @typea='10' or @typea='11' or @typea='12' then @t_mount + @mount
				when @typea='A0' or @typea='B0' or @typea='C0' then @t_mount - @mount
				end
			set @t_weight =
				case 
				when @typea='01' or @typea='02' then @weight
				when @typea='10' or @typea='11' or @typea='12' then @t_weight + @weight
				when @typea='A0' or @typea='B0' or @typea='C0' then @t_weight - @weight
				end
		end
		set @t_totmount =
			case 
			when @typea='01' or @typea='02' then @mount
			when @typea='10' or @typea='11' or @typea='12' then @t_totmount + @mount
			when @typea='A0' or @typea='B0' or @typea='C0' then @t_totmount - @mount
			end
		set @t_totweight =
			case 
			when @typea='01' or @typea='02' then @weight
			when @typea='10' or @typea='11' or @typea='12' then @t_totweight + @weight
			when @typea='A0' or @typea='B0' or @typea='C0' then @t_totweight - @weight
			end
		
		update @result set totmount = @t_totmount, totweight = @t_totweight where productno=@productno and recno=@recno

		fetch next from cursor_table
		into @recno,@productno,@typea,@datea,@mount,@weight
	end
	close cursor_table
	deallocate cursor_table
	if @t_productno!='@#S(DJ#SH!@'
	begin
		insert into @result
		select '1' gno,-1 recno,@t_productno,'' xproduct,'' datea,'zz' typea,'小計' typec, 
			   '' noa,'' comp, '' unit, @t_mount mount, @t_weight weight, @t_totmount totmount, @t_totweight totweigh
	end
	--*****************************************************************************************	
	select * from @result where gno='1' or (gno='0' and datea between @t_bdate and @t_edate) order by productno, gno, recno;

z_stk:	--庫存表  
	--z_stk
	declare @t_bdate nvarchar(10)
	declare @t_edate nvarchar(10)
	declare @t_bproductno nvarchar(30)
	declare @t_eproductno nvarchar(30)
	set @t_bdate = case when '#non'=[1] then '' else [1] end
	set @t_edate = case when '#non'=[2] then char(255) else [2] end
	set @t_bproductno = case when '#non'=[3] then '' else [3] end
	set @t_eproductno = case when '#non'=[4] then char(255) else [4] end

	declare @result table(
		gno nvarchar(1),
		recno int,
		productno nvarchar(30),
		xproduct nvarchar(40),
		datea nvarchar(10),
		typea nvarchar(10),
		typec nvarchar(10),
		noa nvarchar(20),
		comp nvarchar(40),
		unit nvarchar(10),
		mount decimal(16,2),
		weight decimal(16,2),
		totmount decimal(18,2),
		totweight decimal(18,2)
		primary key (productno,recno) 
	)
	insert into @result
	select
		'z' gno, ROW_NUMBER()over(order by productno,datea,typea)as recno,R1.*, 0 totmount, 0 totweight
	from(
		select noa productno,product xproduct,isnull(datea,'') datea,'01' typea,'期初' typec, 
		       '' noa,'' comp, unit, start mount, start weight
		from ucc[5] 
		where  noa BETWEEN @t_bproductno AND @t_eproductno and datea<=@t_edate
		union
		select noa productno,product xproduct,isnull(datea,'') datea,'02' typea,'盤點' typec, 
		       noa,'' comp, unit, adjmount mount, adjweight weight
		from ucces[5]
		where  noa BETWEEN @t_bproductno AND @t_eproductno and datea<=@t_edate
		union
		select b.productno,b.product xproduct,isnull(b.datea,'') datea,case a.typea when '退' then 'A0' else '10' end typea,case a.typea when '退' then '進退' else '進貨' end typec,
		       b.noa, isNull(a.comp,'') comp, b.unit, b.mount, b.weight
		from rc2s[5] b left join rc2[5] a on a.noa=b.noa
		where b.productno BETWEEN @t_bproductno AND @t_eproductno and b.datea<=@t_edate
		union
		select b.productno,b.product xproduct,isnull(b.datea,'') datea,case a.typea when '退' then '11' else 'B0' end typea,case a.typea when '退' then '出退' else '出貨' end typec,
		       b.noa, isNull(a.comp,'') comp, b.unit, b.mount, b.weight
		from vccs[5] b left join vcc[5] a on a.noa=b.noa
		where b.productno BETWEEN @t_bproductno AND @t_eproductno and b.datea<=@t_edate
		union
		select productno,product xproduct,isnull(datea,'') datea, '12' typea, '入庫' typec,
		       noa, '' comp, unit, mount, weight
		from inas[5]
		where productno BETWEEN @t_bproductno AND @t_eproductno and datea<=@t_edate
		union
		select productno,product xproduct,isnull(datea,'') datea, 'C0' typea, '領料' typec,
		       noa, '' comp, unit, mount, weight
		from gets[5]
		where productno BETWEEN @t_bproductno AND @t_eproductno and datea<=@t_edate
		) as R1

	--*****************************************************************************************	
	declare @recno int
	declare @productno nvarchar(30)
	declare @product nvarchar(40)
	declare @typea nvarchar(10)
	declare @unit nvarchar(10)
	declare @datea nvarchar(10)
	declare @mount decimal(18,2)
	declare @weight decimal(18,2)
	
	declare @t_productno nvarchar(30)
	declare @t_mount decimal(18,2)
	declare @t_weight decimal(18,2)
	declare @t_totmount decimal(18,2)
	declare @t_totweight decimal(18,2)
	set @t_productno = '@#S(DJ#SH!@'
	set @t_mount = 0
	set @t_weight = 0
	set @t_totmount = 0
	set @t_totweight = 0
	
	declare cursor_table cursor for
	select recno,productno,typea,datea,mount,weight,unit from @result order by productno,recno
	open cursor_table
	fetch next from cursor_table
	into @recno,@productno,@typea,@datea,@mount,@weight,@unit
	while(@@FETCH_STATUS <> -1)
	begin
		if @t_productno!=@productno and @t_productno!='@#S(DJ#SH!@'
		begin
			insert into @result
			select '0' gno,-1 recno,@t_productno,'' xproduct,'' datea,'zz' typea,'小計' typec, 
				   '' noa,'' comp, @unit unit, @t_mount mount, @t_weight weight, @t_totmount totmount, @t_totweight totweight
		end
		if @t_productno!=@productno
		begin
			set @t_productno = @productno
			set @t_mount = 0
			set @t_weight = 0
			set @t_totmount = 0
			set @t_totweight = 0
		end
		if  @datea between @t_bdate and @t_edate
		begin
			set @t_mount =
				case 
				when @typea='01' or @typea='02' then @mount
				when @typea='10' or @typea='11' or @typea='12' then @t_mount + @mount
				when @typea='A0' or @typea='B0' or @typea='C0' then @t_mount - @mount
				end
			set @t_weight =
				case 
				when @typea='01' or @typea='02' then @weight
				when @typea='10' or @typea='11' or @typea='12' then @t_weight + @weight
				when @typea='A0' or @typea='B0' or @typea='C0' then @t_weight - @weight
				end
		end
		set @t_totmount =
			case 
			when @typea='01' or @typea='02' then @mount
			when @typea='10' or @typea='11' or @typea='12' then @t_totmount + @mount
			when @typea='A0' or @typea='B0' or @typea='C0' then @t_totmount - @mount
			end
		set @t_totweight =
			case 
			when @typea='01' or @typea='02' then @weight
			when @typea='10' or @typea='11' or @typea='12' then @t_totweight + @weight
			when @typea='A0' or @typea='B0' or @typea='C0' then @t_totweight - @weight
			end
		fetch next from cursor_table
		into @recno,@productno,@typea,@datea,@mount,@weight,@unit
	end
	close cursor_table
	deallocate cursor_table
	if @t_productno!='@#S(DJ#SH!@'
	begin
		insert into @result
		select '0' gno,-1 recno,@t_productno,'' xproduct,'' datea,'zz' typea,'小計' typec, 
			   '' noa,'' comp, @unit unit, @t_mount mount, @t_weight weight, @t_totmount totmount, @t_totweight totweigh
	end

	declare cursor_table cursor for
	select noa,product from ucc order by noa
	open cursor_table
	fetch next from cursor_table
	into @productno,@product
	while(@@FETCH_STATUS <> -1)
	begin
		update @result set xproduct = @product where productno=@productno
		fetch next from cursor_table
		into @productno,@product
	end
	close cursor_table
	deallocate cursor_table
	--*****************************************************************************************	
	select * from @result where gno='0' order by productno, gno, recno;

z_stk1:	
	return
	--庫存表-依倉庫  同Z_TB 小計
	select *, b.product xproduct, b.unit xunit, c.store xstore
	from(
		select
			'0' gno,'2' gx,0 recno,'' noa,'' xorder,'z' datea, '' comp,'小計' type,storeno,productno,'' product,'' unit,0 mount,0 weight,sum(mount2) mount2,sum(weight2) weight2,sum(mount2) xmount,sum(weight2) xweight
		from
			(select a.noa,'1' xorder, a.datea, a.comp, case a.type when '退' then '進退' else '進貨' end type,b.storeno storeno, b.productno, b.product, b.unit, b.mount, b.weight, case a.type when '退' then -b.mount else b.mount end mount2, case a.type when '退' then -b.weight else b.weight end weight2  from rc2[5] a,rc2s[5] b where a.noa=b.noa and LEN(productno)>0 [2] [5]
			union
			select a.noa, '2' xorder, a.datea, '' comp, a.type,a.storeno storeno, b.productno, b.product, b.unit, b.mount, b.weight, b.mount mount2, b.weight weight2 from ina[5] a,inas[5] b where a.noa=b.noa and LEN(b.productno)>0  [2] [6]
			union
			select a.noa, 'A' xorder, a.datea, a.comp, case a.type when '退' then '出退' else '出貨' end,b.storeno storeno, b.productno, b.product, b.unit, b.mount, b.weight, case a.type when '退' then b.mount else -b.mount end mount2, case a.type when '退' then b.weight else -b.weight end weight2 from vcc[5] a, vccs[5] b where a.noa=b.noa and LEN(b.productno)>0  [2] [5]
			union
			select a.noa, 'B' xorder, a.datea, '' comp, a.type,a.storeno storeno, b.productno, b.product, b.unit, b.mount, b.weight, -b.mount mount2, -b.weight weight2 from get[5] a, gets[5] b where a.noa=b.noa and LEN(b.productno)>0 [2] [6]) AS R3
		group by productno,storeno) as a
	left join ucc[5] b on a.productno=b.noa 
	left join store c on a.storeno = c.noa
	order by a.productno,a.storeno,a.gno,a.gx,a.recno;

--**************************************************************************************************
z_ucc3:--z_ucc3

declare @bpno nvarchar(30)
declare @epno nvarchar(30)
declare @enddate nvarchar(30)

set @bpno = case when '#non'=[3] then '' else [3] end
set @epno = case when '#non'=[4] then char(255) else [4] end

set @enddate=case when '#non'=[6] then '' else [6] end

--儲存在製品的製令單//避免一個製令被領料或入庫兩次以上
declare @work table(
	workno nvarchar(30)
)

declare @end table(
	recno int identity(0,1),
	gno nvarchar(50),
	gnoworkno nvarchar(50),
	workno nvarchar(50),
	productno nvarchar(50),
	product nvarchar(50),
	mount float,
	inmount float,
	productno2 nvarchar(50),
	product2 nvarchar(50),
	mount2 float,
	outmount float,
	scost float,
	ocost float,
	cost float
)


--插入在截止日之前有領料的製令單
insert into @work
select DISTINCT a.noa from view_work102 a left join view_workas102 b on a.noa=b.workno left join view_workcs102 c on a.noa=c.workno
where (b.datea<=@enddate and c.datea is null) or (c.datea<=@enddate and b.datea is null)


--刪除在截止日之前已"全部"入庫的製令單
delete @work
where workno in(
select a.workno from @work a left join view_work102 b on a.workno=b.noa
left join(
--workc
select b.workno,b.productno,b.product,SUM(b.mount) mount 
from view_workb102 a left join view_workbs102 b on a.noa=b.noa 
where b.datea <=@enddate
group by b.workno,b.productno,b.product
union
--workd
select b.workno,b.productno,b.product,SUM(b.mount) mount 
from view_workd102 a left join view_workds102 b on a.noa=b.noa 
where b.datea <=@enddate
group by b.workno,b.productno,b.product
)c on b.noa=c.workno
where b.mount=c.mount)


insert into @end
select '0'gno,wa.workno,wa.workno,wb.productno,wb.product product,wb.mount mount,
(case when len(wb.tggno)=0 then 
isnull((select SUM(b.mount) mount 
from view_workb102 a left join view_workbs102 b on a.noa=b.noa 
where b.datea <=@enddate and b.workno=wa.workno and b.productno=wb.productno
group by b.workno,b.productno),0)
else
isnull((select SUM(b.mount) mount 
from view_workd102 a left join view_workds102 b on a.noa=b.noa 
where b.datea <=@enddate and b.workno=wa.workno and b.productno=wb.productno
group by b.workno,b.productno),0)
end) inmount,
wc.productno productno2,wc.product product2,wc.mount mount2,
(case when len(wb.tggno)=0 then 
isnull((select SUM(b.mount) mount 
from view_worka102 a left join view_workas102 b on a.noa=b.noa 
where b.datea <=@enddate and b.workno=wa.workno and b.productno=wc.productno
group by b.workno,b.productno),0)
else
isnull((select SUM(b.mount) mount 
from view_workc102 a left join view_workcs102 b on a.noa=b.noa 
where b.datea <=@enddate and b.workno=wa.workno and b.productno=wc.productno
group by b.workno,b.productno),0)
end) outmount,
--領料成本
--(case when (select noa from ucc where noa=wc.productno)!='' then -- 原料

--(select sum(ucmoney) from (select (case when UPPER(b.unit)!='KG' then b.mount else b.weight end) --每張領料單的數量
--*(select cb.lastprice from cost ca left join costs cb on ca.noa=cb.noa where cb.productno=wc.productno and ca.mon=left(a.datea,6)) ucmoney--當月原料成本
--from view_worka102 a left join view_workas102 b on a.noa=b.noa where a.datea <=@enddate and a.workno=wa.workno and b.productno=wc.productno)ucccost)

--else --在製品
--(	--找下一層原料
--	select sum(ucmoney)from(
--		select
--			((case when UPPER(b.unit)!='KG' then b.mount else b.weight end)--每張領料單的數量
--			*(select cb.lastprice from cost ca left join costs cb on ca.noa=cb.noa where cb.productno=b.productno and ca.mon=left(a.datea,6)))
--			+(case when UPPER(b.unit)!='KG' then b.mount else b.weight end)*a.price--委外單價
--		ucmoney
--		from view_workc102 a left join view_workcs102 b on a.noa=b.noa
--		where (case when CHARINDEX('-',a.workno)=0 then a.noa else LEFT(a.workno,CHARINDEX('-',a.workno)-1) end)
--		=LEFT(wc.noa,CHARINDEX('-',wc.noa)-1) and a.productno=wc.productno
--	)tmp
--)
--end
--)
0,0,0 cost
from @work wa left join view_work102 wb on wa.workno=wb.noa left join view_works102 wc on wb.noa=wc.noa
where wb.productno between @bpno and @epno
order by wa.workno,wb.productno,wc.productno


--------------------------------------------------------------------

declare @bproductno nvarchar(50)
declare @bparent nvarchar(50) 
declare @bworkno nvarchar(50)
declare @t_bworkno nvarchar(50)
declare @recno nvarchar(50)
declare @bprice float
declare @sprice float 
declare @oprice float

declare @tmp table(
	workno nvarchar(20),
	productno nvarchar(20),
	parent nvarchar(20)
)
set @bparent='root'
set @t_bworkno='XXXX---XXXX'

declare cursor_table cursor for
select recno,workno,productno2 from @end --where cost is null
open cursor_table
fetch next from cursor_table
into @recno,@bworkno,@bproductno
while(@@FETCH_STATUS <> -1)
begin

	insert into @tmp
	select a.noa,b.productno,a.productno from view_work102 a left join view_works102 b on a.noa=b.noa
	where (case when CHARINDEX('-',a.noa)=0 then a.noa else LEFT(a.noa,CHARINDEX('-',a.noa)-1) end)
	=(case when CHARINDEX('-',@bworkno)=0 then @bworkno else LEFT(@bworkno,CHARINDEX('-',@bworkno)-1) end)
	
	insert into @tmp
	select @bworkno,@bproductno,@bparent 
	
	
	BEGIN TRY
	--遞迴
	WITH OrdersTable (workno,productno,noa,Level,sortCol,price,sprice,opriec) as
	(
	 Select a.workno,a.productno,a.parent,0, CONVERT(nvarchar(128),a.productno)
	 ,--isnull((select c.lastprice from costs c where c.mon='102/06' and c.productno=a.productno),0)*
	 --*isnull((select sum(case when UPPER(wa.unit)!='KG' then wa.mount else wa.weight end) from view_workas102 wa where wa.datea <=@enddate and  wa.workno=a.workno and wa.productno=a.productno ),0)
	 (select cost from workpick102(@enddate) fu where fu.workno=a.workno and fu.productno=a.productno),
	(select cost from workpick102(@enddate) fu where fu.workno=a.workno and fu.productno=a.productno),
	(select outmoney from workpick102(@enddate) fu where fu.workno=a.workno and fu.productno=a.productno)
	 from @tmp a
	 where parent=@bparent
	 UNION ALL
	 SELECT a.workno,a.productno,a.parent,OrdersTable.Level+1,CONVERT(nvarchar(128),OrdersTable.SortCol+'-'+CONVERT(nvarchar(128),a.productno))
	 ,
	 --原料金額
	 (
	 	(select cost from workpick102(@enddate) fu where fu.workno=a.workno and fu.productno=a.productno)
		--isnull((select c.lastprice from costs c where c.mon='102/06' and c.productno=a.productno),0)*
		 --*(
			--isnull((select (case when UPPER(wa.unit)!='KG' then wa.mount else wa.weight end) from view_workas102 wa where wa.datea <=@enddate and wa.workno=a.workno and wa.productno=a.productno ),0)
			--+isnull((select (case when UPPER(wc.unit)!='KG' then wc.mount else wc.weight end) from view_workcs102 wc where wc.datea <=@enddate and wc.workno=a.workno and wc.productno=a.productno ),0)
		 --)
	 )
	 
	 --委外金額
	 +(select outmoney from workpick102(@enddate) fu where fu.workno=a.workno and fu.productno=a.productno)
	 
	 --+(isnull((select b.price from workc102 b where b.workno=a.workno ),0)
	 --*(select mount from workpick102(@enddate) fu where fu.workno=a.workno and fu.productno=a.productno)
	 --*(isnull((select (case when UPPER(wc.unit)!='KG' then wc.mount else wc.weight end) from view_workcs102 wc where wc.datea <=@enddate and wc.workno=a.workno and wc.productno=a.productno ),0) ))
	 ,(select cost from workpick102(@enddate) fu where fu.workno=a.workno and fu.productno=a.productno),
	(select outmoney from workpick102(@enddate) fu where fu.workno=a.workno and fu.productno=a.productno) 
	 FROM @tmp a, OrdersTable 
	 WHERE a.parent=OrdersTable.productno 

	)
	--Select workno,REPLICATE('       ',Level) + productno productno, Level, SortCol,price From OrdersTable order by sortCol
	
	Select  @bprice=sum(price),@oprice=sum(opriec),@sprice=SUM(sprice) From OrdersTable
	
	END TRY
	BEGIN CATCH
	 select @bprice=null ,@oprice=null ,@sprice=null 
	END CATCH
	
	update @end
	set cost=@bprice,ocost=@oprice ,scost=@sprice 
	where workno=@bworkno and productno2=@bproductno
	
	delete @tmp
	
	if(@t_bworkno=@bworkno)
	begin
		update @end
		set workno='',productno='',product='',mount=null,inmount=null
		where recno=@recno
	end
	
	set @t_bworkno=@bworkno
	
	fetch next from cursor_table
	into @recno,@bworkno,@bproductno
end
close cursor_table
deallocate cursor_table


insert into @end
select '1',gnoworkno,'','','',null,null,'','',null,null,SUM(scost),SUM(ocost),SUM(cost) from @end group by gnoworkno


select recno,gno,gnoworkno,workno,productno productnoa,product producta
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,mount),1)),0,30)) mounta
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,inmount),1)),0,30)) inmount
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,mount-inmount),1)),0,30)) uninmount
,productno2 productnob,product2 productb
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,mount2),1)),0,30)) mountb
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,outmount),1)),0,30)) outmount
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,mount2-outmount),1)),0,30)) unoutmount
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,scost),1)),0,30)) scost 
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,ocost),1)),0,30)) ocost 
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,cost),1)),0,30)) cost
,@bpno bpno,@epno epno ,@enddate enddate
from @end order by gnoworkno,gno
;