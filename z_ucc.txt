z_ucctb:--z_ucctb
	declare @t_bdate nvarchar(10)
	declare @t_edate nvarchar(10)
	declare @t_bproductno nvarchar(50)
	declare @t_eproductno nvarchar(50)
	declare @t_bstoreno nvarchar(50)
	declare @t_estoreno nvarchar(50)
	declare @t_typea nvarchar(15)
	
	set @t_bdate = case when '#non'=[2] then '' else [2] end
	set @t_edate = case when '#non'=[3] then char(255) else [3] end
	set @t_bproductno = case when '#non'=[4] then '' else [4] end
	set @t_eproductno = case when '#non'=[5] then char(255) else [5] end
	set @t_bstoreno = case when '#non'=[6] then '' else [6] end
	set @t_estoreno = case when '#non'=[7] then char(255) else [7] end
	set @t_typea = case when '#non'=[11] then '' else [11] end
-------------------------------------------------------------------------------------------------------

	declare @result table(
		gno nvarchar(1),
		recno int,
		storeno nvarchar(50),
		stores nvarchar(50),
		productno nvarchar(30),
		xproduct nvarchar(40),
		datea nvarchar(10),
		typea nvarchar(10),
		typec nvarchar(10),
		noa nvarchar(20),
		comp nvarchar(40),
		unit nvarchar(10),
		mount decimal(16,2),
		weight decimal(16,2),
		qhref nvarchar(50),
		totmount decimal(18,2),
		totweight decimal(18,2),
		ucctype nvarchar(15)
		primary key (productno,recno) 
	)
	
	insert into @result
	select
		'0' gno, ROW_NUMBER()over(order by productno,datea,typea)as recno,R1.*, 0 totmount, 0 totweight,''
	from(
		select storeno,store,noa productno,product xproduct,isnull(datea,'') datea,'01' typea,'期初' typec, 
		       '' noa,'' comp, unit, start mount, start weight,'' qhref
		from ucc[1] 
		where  noa BETWEEN @t_bproductno AND @t_eproductno and datea<=@t_edate and storeno between @t_bstoreno and @t_estoreno
		union
		select storeno,store,noa productno,product xproduct,isnull(datea,'') datea,'02' typea,'盤點' typec, 
		       noa,'' comp, unit, adjmount mount, adjweight weight,'ucce?noa=$noa?' qhref
		from ucces[1]
		where  noa BETWEEN @t_bproductno AND @t_eproductno and datea<=@t_edate and storeno between @t_bstoreno and @t_estoreno
		union
		select b.storeno,b.store,b.productno,b.product xproduct,isnull(b.datea,'') datea,case a.typea when '退' then 'A0' else '10' end typea,case a.typea when '退' then '進退' else '進貨' end typec,
		       b.noa, isNull(a.tgg,'') comp, b.unit, b.mount, b.weight,'rc2?noa=$noa?' qhref
		from rc2s[1] b left join rc2[1] a on a.noa=b.noa
		where b.productno BETWEEN @t_bproductno AND @t_eproductno and b.datea<=@t_edate and b.storeno between @t_bstoreno and @t_estoreno
		union
		select b.storeno,b.store,b.productno,b.product xproduct,isnull(b.datea,'') datea,case a.typea when '2' then '11' else 'B0' end typea,case a.typea when '2' then '出退' else '出貨' end typec,
		       b.noa, isNull(a.comp,'') comp, b.unit, b.mount, b.weight,'vcc?noa=$noa?' qhref
		from vccs[1] b left join vcc[1] a on a.noa=b.noa
		where b.productno BETWEEN @t_bproductno AND @t_eproductno and b.datea<=@t_edate and b.storeno between @t_bstoreno and @t_estoreno
		union
		select a.storeno,a.store,b.productno,b.product xproduct,isnull(b.datea,'') datea, '12' typea, '入庫' typec,
		       b.noa,  isNull(a.comp,'') comp, b.unit, b.mount, b.weight,'ina?noa=$noa?' qhref
		from inas[1] b left join ina[1] a on b.noa=a.noa 
		where b.productno BETWEEN @t_bproductno AND @t_eproductno and b.datea<=@t_edate and a.storeno between @t_bstoreno and @t_estoreno
		union
		select a.storeno,a.store,b.productno,b.product xproduct,isnull(b.datea,'') datea, 'C0' typea, '領料' typec,
		       b.noa, isNull(a.comp,'') comp, b.unit, b.mount, b.weight,'get?noa=$noa?' qhref
		from gets[1] b left join get[1] a on a.noa=b.noa
		where b.productno BETWEEN @t_bproductno AND @t_eproductno and b.datea<=@t_edate and a.storeno between @t_bstoreno and @t_estoreno
		union
		select b.storeno,b.store,b.productno,b.product xproduct,isnull(a.datea,'') datea, 'C0' typea, '領料' typec,
		       a.noa, isNull(a.station,'') comp, b.unit, b.mount, b.weight,'worka?noa=$noa?' qhref
		from workas[1] b left join worka[1] a on a.noa = b.noa
		where b.productno BETWEEN @t_bproductno AND @t_eproductno and a.datea<=@t_edate and b.storeno between @t_bstoreno and @t_estoreno
		union
		select b.storeno,b.store,b.productno,b.product xproduct,isnull(a.datea,'') datea, 'C0' typea, '委領' typec,
		       a.noa, isNull(a.tgg,'') comp, b.unit, b.mount, b.weight,'workc?noa=$noa?' qhref
		from workcs[1] b left join workc[1] a on a.noa = b.noa
		where b.productno BETWEEN @t_bproductno AND @t_eproductno and a.datea<=@t_edate and b.storeno between @t_bstoreno and @t_estoreno
		union
		select b.storeno,b.store,b.productno,b.product xproduct,isnull(a.datea,'') datea, '10' typea, '入庫' typec,
		       a.noa, isNull(a.station,'') comp, b.unit, b.mount, b.weight,'workb?noa=$noa?' qhref
		from workbs[1] b left join workb[1] a on a.noa = b.noa
		where b.productno BETWEEN @t_bproductno AND @t_eproductno and a.datea<=@t_edate and b.storeno between @t_bstoreno and @t_estoreno
		union
		select b.storeno,b.store,b.productno,b.product xproduct,isnull(a.datea,'') datea, '10' typea, '委入' typec,
		       a.noa, isNull(a.tgg,'') comp, b.unit, b.mount+b.inmount-b.outmount, b.weight,'workd?noa=$noa?' qhref
		from workds[1] b left join workd[1] a on a.noa = b.noa
		where b.productno BETWEEN @t_bproductno AND @t_eproductno and a.datea<=@t_edate and b.storeno between @t_bstoreno and @t_estoreno
		
		union
		select a.storeinno,a.storein,b.productno,b.product xproduct,isnull(a.datea,'') datea, '10' typea, '撥入' typec,
		       a.noa, isNull(a.tgg,'') comp, b.unit, b.mount, b.weight,'cng?noa=$noa?' qhref
		from view_cngs[1] b left join view_cng[1] a on a.noa = b.noa
		where b.productno BETWEEN @t_bproductno AND @t_eproductno and a.datea<=@t_edate and a.storeinno between @t_bstoreno and @t_estoreno
		and a.typea='1' and a.storeinno!=''
		union
		select a.storeno,a.store,b.productno,b.product xproduct,isnull(a.datea,'') datea, 'C0' typea, '調出' typec,
		       a.noa, isNull(a.tgg,'') comp, b.unit, b.mount, b.weight,'cng?noa=$noa?' qhref
		from view_cngs[1] b left join view_cng[1] a on a.noa = b.noa
		where b.productno BETWEEN @t_bproductno AND @t_eproductno and a.datea<=@t_edate and a.storeno between @t_bstoreno and @t_estoreno
		and a.typea='1' and a.storeno!=''
		
		union
		select a.storeinno,a.storein,b.productno,b.product xproduct,isnull(a.datea,'') datea, '10' typea, '委入' typec,
		       a.noa, isNull(a.tgg,'') comp, b.unit, b.mount, b.weight,'cng?noa=$noa?' qhref
		from view_cngs[1] b left join view_cng[1] a on a.noa = b.noa
		where b.productno BETWEEN @t_bproductno AND @t_eproductno and a.datea<=@t_edate and a.storeinno between @t_bstoreno and @t_estoreno
		and a.typea='3' and a.storeinno!=''
		union
		select a.storeno,a.store,b.productno,b.product xproduct,isnull(a.datea,'') datea, 'C0' typea, '委入' typec,
		       a.noa, isNull(a.tgg,'') comp, b.unit, b.mount, b.weight,'cng?noa=$noa?' qhref
		from view_cngs[1] b left join view_cng[1] a on a.noa = b.noa
		where b.productno BETWEEN @t_bproductno AND @t_eproductno and a.datea<=@t_edate and a.storeno between @t_bstoreno and @t_estoreno
		and a.typea='3' and a.storeno!=''
		
		union
		select a.storeinno,a.storein,b.productno,b.product xproduct,isnull(a.datea,'') datea, '10' typea, '委出' typec,
		       a.noa, isNull(a.tgg,'') comp, b.unit, b.mount, b.weight,'cng?noa=$noa?' qhref
		from view_cngs[1] b left join view_cng[1] a on a.noa = b.noa
		where b.productno BETWEEN @t_bproductno AND @t_eproductno and a.datea<=@t_edate and a.storeinno between @t_bstoreno and @t_estoreno
		and a.typea='2' and a.storeinno!=''
		union
		select a.storeno,a.store,b.productno,b.product xproduct,isnull(a.datea,'') datea, 'C0' typea, '委出' typec,
		       a.noa, isNull(a.tgg,'') comp, b.unit, b.mount, b.weight,'cng?noa=$noa?' qhref
		from view_cngs[1] b left join view_cng[1] a on a.noa = b.noa
		where b.productno BETWEEN @t_bproductno AND @t_eproductno and a.datea<=@t_edate and a.storeno between @t_bstoreno and @t_estoreno
		and a.typea='2' and a.storeno!=''
		
		union
		select a.storeinno,a.storein,b.productno,b.product xproduct,isnull(a.datea,'') datea, '10' typea, '歸還' typec,
		       a.noa, isNull(a.tgg,'') comp, b.unit, b.mount, b.weight,'cng?noa=$noa?' qhref
		from view_cngs[1] b left join view_cng[1] a on a.noa = b.noa
		where b.productno BETWEEN @t_bproductno AND @t_eproductno and a.datea<=@t_edate and a.storeinno between @t_bstoreno and @t_estoreno
		and a.typea='5' and a.storeinno!=''
		union
		select a.storeno,a.store,b.productno,b.product xproduct,isnull(a.datea,'') datea, 'C0' typea, '歸還' typec,
		       a.noa, isNull(a.tgg,'') comp, b.unit, b.mount, b.weight,'cng?noa=$noa?' qhref
		from view_cngs[1] b left join view_cng[1] a on a.noa = b.noa
		where b.productno BETWEEN @t_bproductno AND @t_eproductno and a.datea<=@t_edate and a.storeno between @t_bstoreno and @t_estoreno
		and a.typea='5' and a.storeno!=''
		
		union
		select a.storeinno,a.storein,b.productno,b.product xproduct,isnull(a.datea,'') datea, '10' typea, '借出' typec,
		       a.noa, isNull(a.tgg,'') comp, b.unit, b.mount, b.weight,'cng?noa=$noa?' qhref
		from view_cngs[1] b left join view_cng[1] a on a.noa = b.noa
		where b.productno BETWEEN @t_bproductno AND @t_eproductno and a.datea<=@t_edate and a.storeinno between @t_bstoreno and @t_estoreno
		and a.typea='4'  and a.storeinno!=''
		union
		select a.storeno,a.store,b.productno,b.product xproduct,isnull(a.datea,'') datea, 'C0' typea, '借出' typec,
		       a.noa, isNull(a.tgg,'') comp, b.unit, b.mount, b.weight,'cng?noa=$noa?' qhref
		from view_cngs[1] b left join view_cng[1] a on a.noa = b.noa
		where b.productno BETWEEN @t_bproductno AND @t_eproductno and a.datea<=@t_edate and a.storeno between @t_bstoreno and @t_estoreno
		and a.typea='4'  and a.storeno!=''
		
		) as R1

	--*****************************************************************************************	
	declare @recno int
	declare @productno nvarchar(30)
	declare @typea nvarchar(10)
	declare @datea nvarchar(10)
	declare @mount decimal(18,2)
	declare @weight decimal(18,2)
	
	declare @t_productno nvarchar(30)
	declare @t_mount decimal(18,2)
	declare @t_weight decimal(18,2)
	declare @t_totmount decimal(18,2)
	declare @t_totweight decimal(18,2)
	set @t_productno = '@#S(DJ#SH!@'
	set @t_mount = 0
	set @t_weight = 0
	set @t_totmount = 0
	set @t_totweight = 0
	
	declare cursor_table cursor for
	select recno,productno,typea,datea,mount,weight from @result order by productno,recno
	open cursor_table
	fetch next from cursor_table
	into @recno,@productno,@typea,@datea,@mount,@weight
	while(@@FETCH_STATUS <> -1)
	begin
		if @t_productno!=@productno and @t_productno!='@#S(DJ#SH!@'
		begin
			insert into @result
			select '1' gno,-1 recno,'','',@t_productno,'' xproduct,'' datea,'zz' typea,'小計' typec, 
				   '' noa,'' comp, '' unit, @t_mount mount, @t_weight weight,'', @t_totmount totmount, @t_totweight totweight,''
		end
		if @t_productno!=@productno
		begin
			set @t_productno = @productno
			set @t_mount = 0
			set @t_weight = 0
			set @t_totmount = 0
			set @t_totweight = 0
		end
		if  @datea between @t_bdate and @t_edate
		begin
			set @t_mount =
				case 
				when @typea='01' or @typea='02' then @mount
				when @typea='10' or @typea='11' or @typea='12' then @t_mount + @mount
				when @typea='A0' or @typea='B0' or @typea='C0' then @t_mount - @mount
				end
			set @t_weight =
				case 
				when @typea='01' or @typea='02' then @weight
				when @typea='10' or @typea='11' or @typea='12' then @t_weight + @weight
				when @typea='A0' or @typea='B0' or @typea='C0' then @t_weight - @weight
				end
		end
		set @t_totmount =
			case 
			when @typea='01' or @typea='02' then @mount
			when @typea='10' or @typea='11' or @typea='12' then @t_totmount + @mount
			when @typea='A0' or @typea='B0' or @typea='C0' then @t_totmount - @mount
			end
		set @t_totweight =
			case 
			when @typea='01' or @typea='02' then @weight
			when @typea='10' or @typea='11' or @typea='12' then @t_totweight + @weight
			when @typea='A0' or @typea='B0' or @typea='C0' then @t_totweight - @weight
			end
		
		update @result set totmount = @t_totmount, totweight = @t_totweight where productno=@productno and recno=@recno

		fetch next from cursor_table
		into @recno,@productno,@typea,@datea,@mount,@weight
	end
	close cursor_table
	deallocate cursor_table
	if @t_productno!='@#S(DJ#SH!@'
	begin
		insert into @result
		select '1' gno,-1 recno,'','',@t_productno,'' xproduct,'' datea,'zz' typea,'小計' typec, 
			   '' noa,'' comp, '' unit, @t_mount mount, @t_weight weight,'', @t_totmount totmount, @t_totweight totweigh,''
	end
	
	declare @ucctype nvarchar(15)
	declare cursor_table cursor for
	select noa,typea from ucc order by noa
	open cursor_table
	fetch next from cursor_table
	into @t_productno,@ucctype
	while(@@FETCH_STATUS <> -1)
	begin
		update @result set ucctype = @ucctype where productno=@t_productno
		fetch next from cursor_table
		into @t_productno,@ucctype
	end
	close cursor_table
	deallocate cursor_table
	
	declare cursor_table cursor for
	select noa,typea from uca order by noa
	open cursor_table
	fetch next from cursor_table
	into @t_productno,@ucctype
	while(@@FETCH_STATUS <> -1)
	begin
		if(@ucctype = 1)
			set @ucctype = 2
		else
			set @ucctype = 3
		update @result set ucctype = @ucctype where productno=@t_productno
		fetch next from cursor_table
		into @t_productno,@ucctype
	end
	close cursor_table
	deallocate cursor_table
	--*****************************************************************************************	
	
	select gno,recno,storeno,left(stores,7) stores,productno,xproduct,datea,typea,typec,noa,left(comp,11) comp,unit,ucctype,qhref
	,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,mount),1)),4,30)) mount
	,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,weight),1)),0,30)) weight
	,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,totmount),1)),4,30)) totmount
	,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,totweight),1)),0,30)) totweight
	
	from @result where (gno='1' or (gno='0' and datea between @t_bdate and @t_edate)) 
	 and (len(@t_typea) = 0 or ucctype = @t_typea)
	order by productno, gno, recno;
	
--*****************************************************************************************	
z_ucc1:	--庫存表  --ucc1
	declare @t_bproductno nvarchar(50)
	declare @t_eproductno nvarchar(50)
	declare @t_typea nvarchar(15)
	declare @t_bstoreno nvarchar(50) 
	declare @t_estoreno nvarchar(50)
	declare @t_group nvarchar(15)
	declare @t_showprice  nvarchar(15)
	
	set @t_bproductno = case when '#non'=[4] then '' else [4] end
	set @t_eproductno = case when '#non'=[5] then char(255) else [5] end
	set @t_typea = case when '#non'=[11] then '' else [11] end
	set @t_bstoreno = case when '#non' = [6] then '' else [6] end
	set @t_estoreno = case when '#non' = [7] then CHAR(255) else [7] end
	set @t_group = case when '#non'=[13] then '' else [13] end
	set @t_showprice=[16]

	declare @t_stkdate nvarchar(30)
	set @t_stkdate=CONVERT (VARCHAR(7), GETDATE(),12 )+0890000
	set @t_stkdate=left(@t_stkdate,3)+'/'+substring(@t_stkdate,4,2)+'/'+right(@t_stkdate,2)
	
	declare @groups table(
		groupsno nvarchar(20),
		groups nvarchar(50)
	)
	
	declare @groupstmp nvarchar(MAX)
	set @groupstmp='[14]'
	
	while(charindex(',',@groupstmp)>0) 
	begin 
		insert @groups
		select LEFT(@groupstmp,CHARINDEX('@',@groupstmp)-1),REPLACE(SUBSTRING(@groupstmp,CHARINDEX('@',@groupstmp)+1,CHARINDEX(',',@groupstmp)-CHARINDEX('@',@groupstmp)-1),' ','')
		
		set @groupstmp=SUBSTRING(@groupstmp,CHARINDEX(',',@groupstmp)+1,LEN(@groupstmp)) 
	end
	insert @groups
	select LEFT(@groupstmp,CHARINDEX('@',@groupstmp)-1),SUBSTRING(@groupstmp,CHARINDEX('@',@groupstmp)+1,LEN(@groupstmp)) 

	declare @result table(
		gno nvarchar(1),
		xgroupno nvarchar(50),
		productno nvarchar(30),
		xproduct nvarchar(40),
		unit nvarchar(10),
		totmount float,
		safemount float,
		price float,
		total float
	)
	
	insert into @result
	select '0' gno,b.groupano,a.productno,a.product xproduct,b.unit,a.mount totmount,b.safemount,c.price,a.mount*c.price total
	from (
		select productno,MAX(product) product,sum(mount) mount 	from stkucc[1](@t_stkdate,'','') s
		where (s.storeno between @t_bstoreno and @t_estoreno) group by productno
	) a left join ucc b on a.productno=b.noa  
	left join (select * from costs[1] where mon=LEFT(@t_stkdate,6)) c on a.productno=c.productno
	where a.productno in (select noa from ucc) 
	and (len(@t_typea)=0 or b.typea=@t_typea) and (len(@t_group)=0 or b.typea=@t_group)
	and a.productno between @t_bproductno and @t_eproductno
	
	if (@t_showprice='0')
	begin
		update @result set price=null,total=null
	end

	select gno,xgroupno,(select top 1 groups from @groups where groupsno=a.xgroupno) xgroups,productno,xproduct,unit
		,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,round(totmount,0)),1)),4,30)) totmount
		,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,round(safemount,0)),1)),4,30)) safemount
		,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,round(price,2)),1)),0,30)) price
		,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,round(total,0)),1)),4,30)) total
	from @result a order by xgroupno,productno
;
--*****************************************************************************************
z_stk1:	
	return
	--庫存表-依倉庫  同Z_TB 小計
	select *, b.product xproduct, b.unit xunit, c.store xstore
	from(
		select
			'0' gno,'2' gx,0 recno,'' noa,'' xorder,'z' datea, '' comp,'小計' type,storeno,productno,'' product,'' unit,0 mount,0 weight,sum(mount2) mount2,sum(weight2) weight2,sum(mount2) xmount,sum(weight2) xweight
		from
			(select a.noa,'1' xorder, a.datea, a.comp, case a.type when '退' then '進退' else '進貨' end type,b.storeno storeno, b.productno, b.product, b.unit, b.mount, b.weight, case a.type when '退' then -b.mount else b.mount end mount2, case a.type when '退' then -b.weight else b.weight end weight2  from rc2[1] a,rc2s[1] b where a.noa=b.noa and LEN(productno)>0 [2] [1]
			union
			select a.noa, '2' xorder, a.datea, '' comp, a.type,a.storeno storeno, b.productno, b.product, b.unit, b.mount, b.weight, b.mount mount2, b.weight weight2 from ina[1] a,inas[1] b where a.noa=b.noa and LEN(b.productno)>0  [2] [6]
			union
			select a.noa, 'A' xorder, a.datea, a.comp, case a.type when '退' then '出退' else '出貨' end,b.storeno storeno, b.productno, b.product, b.unit, b.mount, b.weight, case a.type when '退' then b.mount else -b.mount end mount2, case a.type when '退' then b.weight else -b.weight end weight2 from vcc[1] a, vccs[1] b where a.noa=b.noa and LEN(b.productno)>0  [2] [1]
			union
			select a.noa, 'B' xorder, a.datea, '' comp, a.type,a.storeno storeno, b.productno, b.product, b.unit, b.mount, b.weight, -b.mount mount2, -b.weight weight2 from get[1] a, gets[1] b where a.noa=b.noa and LEN(b.productno)>0 [2] [6]) AS R3
		group by productno,storeno) as a
	left join ucc[1] b on a.productno=b.noa 
	left join store c on a.storeno = c.noa
	order by a.productno,a.storeno,a.gno,a.gx,a.recno;

--**************************************************************************************************
z_ucc3:--z_ucc3

declare @bpno nvarchar(30)
declare @epno nvarchar(30)
declare @enddate nvarchar(30)
declare @bordeno nvarchar(30)
declare @eordeno nvarchar(30)
declare @outtype nvarchar(30)

set @bpno = case when '#non'=[4] then '' else [4] end
set @epno = case when '#non'=[5] then char(255) else [5] end

set @enddate=case when '#non'=[8] then '' else [8] end

set @bordeno = case when '#non'=[9] then '' else [9] end
set @eordeno = case when '#non'=[10] then char(255) else [10] end

set @outtype=case when '#non'=[12] then '' else [12] end

--儲存在製品的製令單//避免一個製令被領料或入庫兩次以上
declare @work table(
	workno nvarchar(30)
)

declare @end table(
	recno int identity(0,1),
	gno nvarchar(50),
	custno nvarchar(50),
	compnick nvarchar(50),
	ordeno nvarchar(50),
	no2 nvarchar(50),
	gnoworkno nvarchar(50),
	workno nvarchar(50),
	cuano nvarchar(50),
	productno nvarchar(50),
	product nvarchar(50),
	mount float,
	inmount float,
	productno2 nvarchar(50),
	product2 nvarchar(50),
	mount2 float,
	outmount float,
	acost float,
	bcost float,
	ccost float,
	dcost float,
	cost float
)


--插入在截止日之前有領料的製令單
if(@outtype='all')
	insert into @work
	select DISTINCT a.noa from view_work[1] a left join view_workas[1] b on a.noa=b.workno left join view_workcs[1] c on a.noa=c.workno
	where ((b.datea<=@enddate and c.datea is null) or (c.datea<=@enddate and b.datea is null)) and (a.ordeno between @bordeno and @eordeno)
	and (b.mount>0 or c.mount>0)

if(@outtype='out')
	insert into @work
	select DISTINCT a.noa from view_work[1] a left join view_workas[1] b on a.noa=b.workno left join view_workcs[1] c on a.noa=c.workno
	where ((b.datea<=@enddate and c.datea is null) or (c.datea<=@enddate and b.datea is null)) and (a.ordeno between @bordeno and @eordeno)
	and (b.mount>0 or c.mount>0)
	and a.tggno!=''

if(@outtype='notout')
	insert into @work
	select DISTINCT a.noa from view_work[1] a left join view_workas[1] b on a.noa=b.workno left join view_workcs[1] c on a.noa=c.workno
	where ((b.datea<=@enddate and c.datea is null) or (c.datea<=@enddate and b.datea is null)) and (a.ordeno between @bordeno and @eordeno)
	and (b.mount>0 or c.mount>0)
	and (a.tggno='' or a.tggno is null)

--刪除在截止日之前已"全部"入庫的製令單
delete @work
where workno in(
	select a.workno from @work a left join view_work[1] b on a.workno=b.noa
	left join(
	--workb
	select b.workno,b.productno,b.product,SUM(b.mount) mount 
	from view_workb[1] a left join view_workbs[1] b on a.noa=b.noa 
	where b.datea <=@enddate
	group by b.workno,b.productno,b.product
	union
	--workd
	select b.workno,b.productno,b.product,SUM(b.mount+b.inmount-b.outmount) mount 
	from view_workd[1] a left join view_workds[1] b on a.noa=b.noa 
	where b.datea <=@enddate
	group by b.workno,b.productno,b.product
)c on b.noa=c.workno
where b.mount=c.mount)


insert into @end
select '0'gno,oe.custno,ct.nick,wb.ordeno,wb.no2,wa.workno,wa.workno,ca.noa,wb.productno,wb.product product,wb.mount mount,
(case when len(wb.tggno)=0  then 
isnull((select SUM(b.mount) mount 
from view_workb[1] a left join view_workbs[1] b on a.noa=b.noa 
where b.datea <=@enddate and b.workno=wa.workno and b.productno=wb.productno
group by b.workno,b.productno),0)
else
isnull((select SUM(b.mount+b.inmount-b.outmount) mount 
from view_workd[1] a left join view_workds[1] b on a.noa=b.noa 
where b.datea <=@enddate and b.workno=wa.workno and b.productno=wb.productno
group by b.workno,b.productno),0)
end) inmount,
wc.productno productno2,wc.product product2,wc.mount mount2,
(case when len(wb.tggno)=0  then 
isnull((select SUM(b.mount) mount 
from view_worka[1] a left join view_workas[1] b on a.noa=b.noa 
where b.datea <=@enddate and b.workno=wa.workno and b.productno=wc.productno
group by b.workno,b.productno),0)
else
isnull((select SUM(b.mount) mount 
from view_workc[1] a left join view_workcs[1] b on a.noa=b.noa 
where b.datea <=@enddate and b.workno=wa.workno and b.productno=wc.productno
group by b.workno,b.productno),0)
end) outmount,

(case when len(wb.tggno)=0  then 
isnull((select SUM(b.costa) mount 
from view_workas[1] a LEFT join wcost[1] b on a.noa=b.noa and a.workno=b.workno and a.productno=b.productno
where a.datea <=@enddate and a.workno=wa.workno and a.productno=wc.productno
group by a.workno,a.productno),0)
else
isnull((select SUM(b.costa) mount 
from view_workcs[1] a LEFT join wcost[1] b on a.noa=b.noa and a.workno=b.workno and a.productno=b.productno
where a.datea <=@enddate and a.workno=wa.workno and a.productno=wc.productno
group by a.workno,a.productno),0)
end) acost,
isnull((select SUM(b.costb) mount 
from view_workbs[1] a LEFT join wcost[1] b on a.noa=b.noa and a.workno=b.workno and a.productno=b.productno
where a.datea <=@enddate and a.workno=wa.workno and a.productno=wc.productno
group by a.workno,a.productno),0) bcost,
isnull((select SUM(b.costc) mount 
from view_workbs[1] a LEFT join wcost[1] b on a.noa=b.noa and a.workno=b.workno and a.productno=b.productno
where a.datea <=@enddate and a.workno=wa.workno and a.productno=wc.productno
group by a.workno,a.productno),0) ccost,
isnull((select SUM(b.costd) mount 
from view_workds[1] a LEFT join wcost[1] b on a.noa=b.noa and a.workno=b.workno and a.productno=b.productno
where a.datea <=@enddate and a.workno=wa.workno and a.productno=wc.productno
group by a.workno,a.productno),0) dcost,
0 cost
from @work wa left join view_work[1] wb on wa.workno=wb.noa left join view_works[1] wc on wb.noa=wc.noa
left join view_orde[1] oe on wb.ordeno=oe.noa left join cust ct on oe.custno=ct.noa
left join view_cua[1] ca on ca.noa=wb.cuano 
where wb.productno between @bpno and @epno and ca.noa!=''
order by wa.workno,wb.productno,wc.productno

--from @work wa left join view_work[1] wb on wa.workno=wb.noa left join view_works[1] wc on wb.noa=wc.noa
--left join view_orde[1] oe on wb.ordeno=oe.noa left join cust ct on oe.custno=ct.noa
--where wb.productno between @bpno and @epno
--order by wa.workno,wb.productno,wc.productno

update @end
set cost=isnull(acost,0)+isnull(bcost,0)+isnull(ccost,0)+isnull(dcost,0)
--------------------------------------------------------------------

insert into @end --製令
select '1',custno,compnick,ordeno,no2,gnoworkno,'',cuano,'','',null,null,'','',null,null,SUM(acost),SUM(bcost),SUM(ccost),SUM(dcost),SUM(cost) from @end group by custno,compnick,ordeno,no2,gnoworkno,cuano

insert into @end --訂單
select '2',custno,compnick,ordeno,char(255),char(255),'','','','',null,null,'','',null,null,SUM(acost),SUM(bcost),SUM(ccost),SUM(dcost),SUM(cost) from @end group by custno,compnick,ordeno

insert into @end --客戶
select '3',custno,compnick,char(255),char(255),char(255),'','','','',null,null,'','',null,null,SUM(acost),SUM(bcost),SUM(ccost),SUM(dcost),SUM(cost) from @end group by custno,compnick

insert into @end --全部
select '4',char(255),char(255),'','','','','','','',null,null,'','',null,null,SUM(acost),SUM(bcost),SUM(ccost),SUM(dcost),SUM(cost) from @end


select recno,gno,custno,compnick,ordeno,no2,ordeno+' '+no2 orde2,gnoworkno,workno,cuano,productno productnoa,product producta
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,mount),1)),0,30)) mounta
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,inmount),1)),0,30)) inmount
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,mount-inmount),1)),0,30)) uninmount
,productno2 productnob,product2 productb
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,mount2),1)),0,30)) mountb
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,outmount),1)),0,30)) outmount
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,mount2-outmount),1)),0,30)) unoutmount
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,acost),1)),0,30)) acost
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,bcost),1)),0,30)) bcost
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,ccost),1)),0,30)) ccost
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,dcost),1)),0,30)) dcost 
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,cost),1)),0,30)) cost
,@bpno bpno,@epno epno ,@enddate enddate
from @end order by custno,ordeno,gnoworkno,gno
;
-----------------------------------------------------------------------------------------------------------------------
z_ucc4:--z_ucc4  
declare @t_bstoreno nvarchar(50) 
declare @t_estoreno nvarchar(50)
declare @t_bpno nvarchar(50) 
declare @t_epno nvarchar(50)  

set @t_bstoreno = case when '#non' = [6] then '' else [6] end
set @t_estoreno = case when '#non' = [7] then CHAR(255) else [7] end
set @t_bpno = case when '#non' = [4] then '' else [4] end
set @t_epno = case when '#non' = [5] then CHAR(255) else [5] end

declare @t_stkdate nvarchar(30) --今天日期
set @t_stkdate=CONVERT (VARCHAR(7), GETDATE(),12 )+0890000
set @t_stkdate=left(@t_stkdate,3)+'/'+substring(@t_stkdate,4,2)+'/'+right(@t_stkdate,2)
--******************************************************************
declare @tmp table(
	gno nvarchar(1), 
	storeno nvarchar(20),
	stores nvarchar(20),
	pno nvarchar(50), 
	product nvarchar(90), 
	unit nvarchar(20), 
	mount float
) 

insert into @tmp
select '0',a.storeno,a.store,a.productno,a.product,(select top 1 unit from view_ucaucc where noa=a.productno)
,a.mount from stkucc[1](@t_stkdate,'','') a
where ( a.storeno between @t_bstoreno and @t_estoreno) and ( a.productno between @t_bpno and @t_epno)
and a.productno !='' and a.mount !=0

insert into @tmp(storeno,gno,mount)
select storeno,'1',sum(mount) from @tmp group by storeno

select gno,storeno,stores,pno,product,unit
,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,mount),1)),4,12)) mount
from @tmp
order by storeno,gno,pno
;
----------------------------------------------------------------------------------------------------------------------------------------
z_ucc2:	--產品列表  --ucc2
	declare @t_bproductno nvarchar(50)
	declare @t_eproductno nvarchar(50)
	declare @t_typea nvarchar(15)
	declare @t_group nvarchar(15)
	declare @t_showprice  nvarchar(15)
	
	set @t_bproductno = case when '#non'=[4] then '' else [4] end
	set @t_eproductno = case when '#non'=[5] then char(255) else [5] end
	set @t_typea = case when '#non'=[11] then '' else [11] end
	set @t_group = case when '#non'=[13] then '' else [13] end
	set @t_showprice=[16]
	
	declare @groups table(
		groupsno nvarchar(20),
		groups nvarchar(50)
	)
	
	declare @groupstmp nvarchar(MAX)
	set @groupstmp='[14]'
	
	while(charindex(',',@groupstmp)>0) 
	begin 
		insert @groups
		select LEFT(@groupstmp,CHARINDEX('@',@groupstmp)-1),REPLACE(SUBSTRING(@groupstmp,CHARINDEX('@',@groupstmp)+1,CHARINDEX(',',@groupstmp)-CHARINDEX('@',@groupstmp)-1),' ','')
		
		set @groupstmp=SUBSTRING(@groupstmp,CHARINDEX(',',@groupstmp)+1,LEN(@groupstmp)) 
	end
	insert @groups
	select LEFT(@groupstmp,CHARINDEX('@',@groupstmp)-1),SUBSTRING(@groupstmp,CHARINDEX('@',@groupstmp)+1,LEN(@groupstmp)) 
	
	
	declare @types table(
		typesno nvarchar(20),
		types nvarchar(50)
	)
	
	declare @typestmp nvarchar(MAX)
	set @typestmp='[15]'
	
	while(charindex(',',@typestmp)>0) 
	begin 
		insert @types
		select LEFT(@typestmp,CHARINDEX('@',@typestmp)-1),REPLACE(SUBSTRING(@typestmp,CHARINDEX('@',@typestmp)+1,CHARINDEX(',',@typestmp)-CHARINDEX('@',@typestmp)-1),' ','')
		
		set @typestmp=SUBSTRING(@typestmp,CHARINDEX(',',@typestmp)+1,LEN(@typestmp)) 
	end
	insert @types
	select LEFT(@typestmp,CHARINDEX('@',@typestmp)-1),SUBSTRING(@typestmp,CHARINDEX('@',@typestmp)+1,LEN(@typestmp)) 


	declare @result table(
		gno nvarchar(1),
		xgroupno nvarchar(50),
		productno nvarchar(30),
		xproduct nvarchar(50),
		typeano nvarchar(50),
		spec nvarchar(50),
		unit nvarchar(10),
		inprice float,
		saleprice float
	)
	
	insert into @result
	select '0',groupano,noa,product,typea,spec,unit,inprice,saleprice from ucc
	
	if (@t_showprice='0')
	begin
		update @result set inprice=null
	end

	select gno,xgroupno,(select top 1 groups from @groups where groupsno=a.xgroupno) xgroups
		,typeano,(select top 1 types from @types where typesno=a.typeano) typeas
		,productno,xproduct,spec,unit
		,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,round(inprice,0)),1)),4,30)) inprice
		,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,round(saleprice,0)),1)),4,30)) saleprice
	from @result a order by xgroupno,productno
;
------------------------------------------------------------------------------------------------------------------------------------------------
z_ucc5:	--z_ucc5	
	declare @t_bdate nvarchar(10)
	declare @t_edate nvarchar(10)
	declare @t_bproductno nvarchar(30)
	declare @t_eproductno nvarchar(30)
	declare @t_typea nvarchar(15)
	declare @t_showprice  nvarchar(15)
	
	set @t_typea = case when '#non'=[11] then '' else [11] end
	set @t_bdate = case when '#non'=[2] then '' else [2] end
	set @t_edate = case when '#non'=[3] then char(255) else [3] end
	set @t_bproductno = case when '#non'=[4] then '' else [4] end
	set @t_eproductno = case when '#non'=[5] then char(255) else [5] end
	set @t_showprice=[16]
----------------------------------------------------------------------------------------------------------------
declare @tmp table( 
	gno nvarchar(1),
	pno nvarchar(50),
	product nvarchar(50),
	unit nvarchar(10),
	bmount float, 
	bweight float, 
	bmoney float, 
	rcmount float, 
	rcweight float, 
	rcmoney float, 
	vcmount float, 
	vcweight float, 
	vcmoney float, 
	vccost float,
	profit float, 
	lmount float, 
	lweight float, 
	lprice float, 
	lmoney float
) 

--期初抓inas
insert into @tmp (gno,pno,product,unit,bmount,bweight,bmoney,rcmount,rcweight,rcmoney,vcmount,vcweight,vcmoney)
select '0'gon,noa,product,unit
,isnull((select mount from view_inas[1] i where charindex('0000',i.noa)>0 and i.productno=a.noa),0)--產品的期初
+isnull((select sum(rb.mount) from view_ina[1] ra left join view_inas[1] rb on ra.noa=rb.noa where ra.datea<@t_bdate and rb.productno=a.noa),0) 
-isnull((select sum(vb.mount) from view_get[1] va left join view_gets[1] vb on va.noa=vb.noa where va.datea<@t_bdate and vb.productno=a.noa),0) 
+isnull((select sum((case when ra.typea='1' then 1 else -1 end)*rb.mount) from view_rc2[1] ra left join view_rc2s[1] rb on ra.noa=rb.noa where ra.datea<@t_bdate and rb.productno=a.noa),0)
-isnull((select sum((case when va.typea='1' then 1 else -1 end)*vb.mount) from view_vcc[1] va left join view_vccs[1] vb on va.noa=vb.noa where va.datea<@t_bdate and vb.productno=a.noa),0)
bigenmount
,isnull((select weight from view_inas[1] i where charindex('0000',i.noa)>0 and i.productno=a.noa),0)--產品的期初
+isnull((select sum(rb.weight) from view_ina[1] ra left join view_inas[1] rb on ra.noa=rb.noa where ra.datea<@t_bdate and rb.productno=a.noa),0) 
-isnull((select sum(vb.weight) from view_get[1] va left join view_gets[1] vb on va.noa=vb.noa where va.datea<@t_bdate and vb.productno=a.noa),0) 
+isnull((select sum((case when ra.typea='1' then 1 else -1 end)*rb.weight) from view_rc2[1] ra left join view_rc2s[1] rb on ra.noa=rb.noa where ra.datea<@t_bdate and rb.productno=a.noa),0)
-isnull((select sum((case when va.typea='1' then 1 else -1 end)*vb.weight) from view_vcc[1] va left join view_vccs[1] vb on va.noa=vb.noa where va.datea<@t_bdate and vb.productno=a.noa),0)
bigeweight
,isnull((select total from view_inas[1] i where charindex('0000',i.noa)>0 and i.productno=a.noa),0)--產品的期初
+isnull((select sum(rb.total) from view_ina[1] ra left join view_inas[1] rb on ra.noa=rb.noa where ra.datea<@t_bdate and rb.productno=a.noa),0) 
+isnull((select sum((case when ra.typea='1' then 1 else -1 end)*rb.total) from view_rc2[1] ra left join view_rc2s[1] rb on ra.noa=rb.noa where ra.datea<@t_bdate and rb.productno=a.noa),0)
-isnull((select sum((case when va.typea='1' then 1 else -1 end)*vb.total) from view_vcc[1] va left join view_vccs[1] vb on va.noa=vb.noa where va.datea<@t_bdate and vb.productno=a.noa),0)
bigenmoney
,isnull((select sum((case when ra.typea='1' then 1 else -1 end)*rb.mount) from view_rc2[1] ra left join view_rc2s[1] rb on ra.noa=rb.noa where (ra.datea between @t_bdate and @t_edate) and rb.productno=a.noa),0)
+isnull((select sum(rb.mount) from view_ina[1] ra left join view_inas[1] rb on ra.noa=rb.noa where (ra.datea between @t_bdate and @t_edate) and rb.productno=a.noa),0) 
rcmount--進貨數量
,isnull((select sum((case when ra.typea='1' then 1 else -1 end)*rb.weight) from view_rc2[1] ra left join view_rc2s[1] rb on ra.noa=rb.noa where (ra.datea between @t_bdate and @t_edate) and rb.productno=a.noa),0)
+isnull((select sum(rb.weight) from view_ina[1] ra left join view_inas[1] rb on ra.noa=rb.noa where (ra.datea between @t_bdate and @t_edate) and rb.productno=a.noa),0) 
rcweight--進貨重量
,isnull((select sum((case when ra.typea='1' then 1 else -1 end)*rb.total) from view_rc2[1] ra left join view_rc2s[1] rb on ra.noa=rb.noa where (ra.datea between @t_bdate and @t_edate) and rb.productno=a.noa),0)
+isnull((select sum(rb.total) from view_ina[1] ra left join view_inas[1] rb on ra.noa=rb.noa where (ra.datea between @t_bdate and @t_edate) and rb.productno=a.noa),0) 
rcmoney--進貨金額

,isnull((select sum((case when va.typea='1' then 1 else -1 end)*vb.mount) from view_vcc[1] va left join view_vccs[1] vb on va.noa=vb.noa where (va.datea between @t_bdate and @t_edate) and vb.productno=a.noa),0)
+isnull((select sum(vb.mount) from view_get[1] va left join view_gets[1] vb on va.noa=vb.noa where (va.datea between @t_bdate and @t_edate) and vb.productno=a.noa),0) 
vcmount--銷貨數量
,isnull((select sum((case when va.typea='1' then 1 else -1 end)*vb.weight) from view_vcc[1] va left join view_vccs[1] vb on va.noa=vb.noa where (va.datea between @t_bdate and @t_edate) and vb.productno=a.noa),0)
+isnull((select sum(vb.weight) from view_get[1] va left join view_gets[1] vb on va.noa=vb.noa where (va.datea between @t_bdate and @t_edate) and vb.productno=a.noa),0) 
vcweight--銷貨重量
,isnull((select sum((case when va.typea='1' then 1 else -1 end)*vb.total) from view_vcc[1] va left join view_vccs[1] vb on va.noa=vb.noa where (va.datea between @t_bdate and @t_edate) and vb.productno=a.noa),0)
vcmoney--銷貨金額

from ucc a where (len(@t_typea)=0 or @t_typea=a.typea)
and (a.noa between @t_bproductno and @t_eproductno) 


--計算成本
update @tmp
set vccost=
case when bmount+rcmount=0 then 0 else ((bmoney+rcmoney)/(bmount+rcmount))*vcmount end

--毛利率
update @tmp
set profit=case when vcmoney=0 then 0 else ((vcmoney-vccost)/vcmoney)*100 end

--期末
update @tmp
set lmount=bmount+rcmount-vcmount,lweight=bweight+rcweight-vcweight
,lmoney=bmoney+rcmoney-vccost
update @tmp
set lprice=case when lmount=0 then 0 else lmoney/lmount end 

delete @tmp
where bmount=0 and bmoney=0 and rcmount=0 and rcmoney=0 and vcmount=0 and vcmoney=0 and vccost=0 --and bweight=0 and rcweight=0 and vcweight=0

insert into @tmp
select '1','','','',sum(bmount),sum(bweight),sum(bmoney)
,sum(rcmount),sum(rcweight),sum(rcmoney)
,sum(vcmount),sum(vcweight),sum(vcmoney),sum(vccost),case when sum(vcmoney)=0 then 0 else ((sum(vcmoney)-sum(vccost))/sum(vcmoney))*100 end
,sum(lmount),sum(lweight),0,sum(lmoney)
from @tmp

if (@t_showprice='0')
	begin
		update @tmp set bmoney=null,rcmoney=null,vcmoney=null,vccost=null,profit=null,lprice=null,lmoney=null
	end

select 
gno,pno,product,unit
,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,round(bmount,0)),1)),4,12)) bmount
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,round(bweight,2)),1)),0,30)) bweight
,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,round(bmoney,0)),1)),4,12)) bmoney

,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,round(rcmount,0)),1)),4,12)) rcmount
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,round(rcweight,2)),1)),0,30)) rcweight
,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,round(rcmoney,0)),1)),4,12)) rcmoney

,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,round(vcmount,0)),1)),4,12)) vcmount
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,round(vcweight,2)),1)),0,30)) vcweight
,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,round(vcmoney,0)),1)),4,12)) vcmoney
,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,round(vccost,0)),1)),4,12)) vccost
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,round(profit,2)),1)),0,30)) profit

,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,round(lmount,0)),1)),4,12)) lmount
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,round(lweight,2)),1)),0,30)) lweight
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,round(lprice,2)),1)),0,30)) lprice
,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,round(lmoney,0)),1)),4,12)) lmoney

from @tmp order by gno,pno
;