z_chgcash02:--z_chgcash02
	SET QUOTED_IDENTIFIER OFF
	declare @cmd nvarchar(max)
	declare @t_accy nvarchar(20)
	declare @t_noa nvarchar(20)
	
	set @t_accy = '[1]'
	set @t_noa = case when '#non' = [2] then '' else [2] end
	-------------------------------------------------------------------------------------------------------
	declare @tmp table(
		gno nvarchar(3),
		datea nvarchar(10),
		noa nvarchar(20),
		namea nvarchar(20),
		part nvarchar(20),
		[money] float,
		noq nvarchar(20),
		acc1 nvarchar(20),
		acc2 nvarchar(50),
		moneys float,
		memo nvarchar(max)
	)
	insert into @tmp
	select '0',b.datea,b.noa,b.namea,b.part,b.money,a.noq,a.acc1,a.acc2,a.money,a.memo
	from chgcashs a
	left join chgcash b on a.noa=b.noa
	where @t_noa=b.noa
	order by a.noa,a.noq
	
	insert into @tmp
	select top(1) '1',datea,noa,namea,part,money,'','','',0,'' from @tmp where gno='0'
	
	select * 
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,money),1)),4,12)) cm1
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,moneys),1)),4,12)) cm2
	from @tmp
	order by gno,noq;

z_chgcash01:--z_chgcash01
	SET QUOTED_IDENTIFIER OFF
	declare @cmd nvarchar(max)
	declare @t_accy nvarchar(20)
	declare @t_noa nvarchar(20)
	declare @t_bdate nvarchar(10)
	declare @t_edate nvarchar(10)
	declare @t_bmon nvarchar(10)
	declare @t_emon nvarchar(10)
	declare @t_baccno nvarchar(20)
	declare @t_eaccno nvarchar(20)
	declare @t_bsssno nvarchar(20)
	declare @t_esssno nvarchar(20)
	declare @t_bdriverno nvarchar(20)
	declare @t_edriverno nvarchar(20)
	declare @t_bcustno nvarchar(20)
	declare @t_ecustno nvarchar(20)
	declare @t_carno nvarchar(20)
	declare @t_po nvarchar(20)
	declare @t_carteam nvarchar(max)
	declare @t_part nvarchar(max)
	declare @t_chgpart nvarchar(max)
	declare @t_dc nvarchar(max)
	
	set @t_accy = '[1]'
	set @t_noa = case when '#non' = [2] then '' else [2] end
	set @t_bdate = case when '#non' = [3] then '' else [3] end
	set @t_edate = case when '#non' = [4] then char(255) else [4] end
	set @t_bmon = case when '#non' = [5] then '' else [5] end
	set @t_emon = case when '#non' = [6] then char(255) else [6] end
	set @t_baccno = case when '#non' = [7] then '' else [7] end
	set @t_eaccno = case when '#non' = [8] then char(255) else [8] end
	set @t_bsssno = case when '#non' = [9] then '' else [9] end
	set @t_esssno = case when '#non' = [10] then char(255) else [10] end
	set @t_bdriverno = case when '#non' = [11] then '' else [11] end
	set @t_edriverno = case when '#non' = [12] then char(255) else [12] end
	set @t_bcustno = case when '#non' = [13] then '' else [13] end
	set @t_ecustno = case when '#non' = [14] then char(255) else [14] end
	set @t_carno = case when '#non' = [15] then '' else [15] end
	set @t_po = case when '#non' = [16] then '' else [16] end
	set @t_carteam = case when '#non' = [17] then '' else [17] end
	set @t_part = case when '#non' = [18] then '' else [18] end
	set @t_chgpart = case when '#non' = [19] then '' else [19] end
	set @t_dc = case when '#non' = [20] then '' else [20] end
	------------------------------------------------------------------------------------------------------------------------------- 
	declare @string nvarchar(max)
	declare @n int
	IF OBJECT_ID('tempdb..#carteam')is not null
	BEGIN
		set @cmd = 'drop table #carteam'
		EXECUTE sp_executesql @cmd
	END
	create table #carteam(
		noa nvarchar(20)
	)
	set @string = @t_carteam
	while(1=1)
	begin
		set @n = PATINDEX('%,%',@string)
		if @n=0
		begin
			if LEN(@string)>0
				insert into #carteam select @string
			break
		end
		insert into #carteam select LEFT(@string,@n-1)	
		set @string = SUBSTRING(@string,@n+1,LEN(@string)-@n)
	end
	IF OBJECT_ID('tempdb..#part')is not null
	BEGIN
		set @cmd = 'drop table #part'
		EXECUTE sp_executesql @cmd
	END
	create table #part(
		noa nvarchar(20)
	)
	set @string = @t_part
	while(1=1)
	begin
		set @n = PATINDEX('%,%',@string)
		if @n=0
		begin
			if LEN(@string)>0
				insert into #part select @string
			break
		end
		insert into #part select LEFT(@string,@n-1)	
		set @string = SUBSTRING(@string,@n+1,LEN(@string)-@n)
	end
	IF OBJECT_ID('tempdb..#chgpart')is not null
	BEGIN
		set @cmd = 'drop table #chgpart'
		EXECUTE sp_executesql @cmd
	END
	create table #chgpart(
		noa nvarchar(20)
	)
	set @string = @t_chgpart
	while(1=1)
	begin
		set @n = PATINDEX('%,%',@string)
		if @n=0
		begin
			if LEN(@string)>0
				insert into #chgpart select @string
			break
		end
		insert into #chgpart select LEFT(@string,@n-1)	
		set @string = SUBSTRING(@string,@n+1,LEN(@string)-@n)
	end
	IF OBJECT_ID('tempdb..#dc')is not null
	BEGIN
		set @cmd = 'drop table #dc'
		EXECUTE sp_executesql @cmd
	END
	create table #dc(
		noa nvarchar(20)
	)
	set @string = @t_dc
	while(1=1)
	begin
		set @n = PATINDEX('%,%',@string)
		if @n=0
		begin
			if LEN(@string)>0
				insert into #dc select @string
			break
		end
		insert into #dc select LEFT(@string,@n-1)	
		set @string = SUBSTRING(@string,@n+1,LEN(@string)-@n)
	end
	-------------------------------------------------------------------------------------------------------------------------------
	declare @tmp table(
		gno nvarchar(3),
		datea nvarchar(10),
		noa nvarchar(20),
		noq nvarchar(20),
		acc1 nvarchar(20),
		acc2 nvarchar(50),
		[money] float,
		memo nvarchar(max)
	)
	
	insert into @tmp
	select '0',b.datea,a.noa,b.noa,a.acc1,a.acc2,a.[money],a.memo
	from chgcashs a
	left join chgcash b on a.noa=b.noa
	left join #carteam c on b.carteamno=c.noa
	left join #part d on b.partno=d.noa
	left join #chgpart e on b.chgpartno=e.noa
	left join #dc f on b.dc=f.noa
where 
 (d.noa is not null) and (e.noa is not null) and (f.noa is not null) 
and (b.datea between @t_bdate and @t_edate) 
and (b.sssno between @t_bsssno and @t_esssno) 
and (a.acc1 between @t_baccno and @t_eaccno) 
and (len(@t_po)=0 or b.po=@t_po) 
	
	insert into @tmp
	select '1','','','','','',SUM([money]),'' from @tmp
	
	drop table #carteam
	drop table #part
	drop table #chgpart
	drop table #dc
	
	select * 
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,money),1)),4,12)) cmoney
	from @tmp order by gno,datea,noa,noq;

z_chgcasha:--z_chgcasha
	declare @t_bmon nvarchar(10)
	declare @t_emon nvarchar(10)
	declare @t_bpartno nvarchar(20)
	declare @t_epartno nvarchar(20)
	declare @t_bsssno nvarchar(20)
	declare @t_esssno nvarchar(20)
	declare @t_baccno nvarchar(20)
	declare @t_eaccno nvarchar(20)
	set @t_bmon = case when '#non'=[3] then '' else [3] end
	set @t_emon = case when '#non'=[4] then char(255) else [4] end
	set @t_bpartno = case when '#non'=[5] then '' else [5] end
	set @t_epartno = case when '#non'=[6] then char(255) else [6] end
	set @t_bsssno = case when '#non'=[7] then '' else [7] end
	set @t_esssno = case when '#non'=[8] then char(255) else [8] end
	set @t_baccno = case when '#non'=[9] then '' else [9] end
	set @t_eaccno = case when '#non'=[10] then char(255) else [10] end
	--*****************************************************************************************	
	declare @t_result table(
		mon nvarchar(10),
		acc2 nvarchar(40),
		money decimal (11,3),
		memo nvarchar (200)
	)
	insert into @t_result
	select LEFT(datea,6) mon,acc2,money,memo
	from chgcash
	where (LEFT(datea,6) between @t_bmon and @t_emon) and	(partno between @t_bpartno and @t_epartno) and (sssno between @t_bsssno and @t_esssno) and (acc1 between @t_baccno and @t_eaccno)

	declare @result table(
		gno nvarchar(1),
		mon nvarchar(10),
		acc2 nvarchar(40),
		money decimal (11,3),
		memo nvarchar (200)
	)
	
	insert into @result
	select gno,mon,LEFT(acc2,len(acc2)-1),money,LEFT(memo,len(memo)-1) 
	from(
		select '0' gno,mon,(SELECT acc2 + '/' from @t_result T2 where T2.mon = T1.mon FOR XML PATH(''))as acc2,sum(money) money, (SELECT memo + ' ' from @t_result T3 where T3.mon = T1.mon FOR XML PATH(''))as memo
		from @t_result T1
		GROUP BY T1.mon
	)temp
	order by mon
	
	insert into @result
	select '1' gno,'','',sum(money) money,''
	from @result
	group by gno
	select gno,mon,acc2,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,money),1)),4,12)) money,
	memo
	from @result;
****************************
z_chgcashb:--z_chgcashb
	declare @t_bdate nvarchar(10)
	declare @t_edate nvarchar(10)
	declare @t_bpartno nvarchar(20)
	declare @t_epartno nvarchar(20)
	declare @t_bsssno nvarchar(20)
	declare @t_esssno nvarchar(20)
	declare @t_baccno nvarchar(20)
	declare @t_eaccno nvarchar(20)
	declare @t_bchgitem nvarchar(20)
	declare @t_echgitem nvarchar(20)
	set @t_bdate = case when '#non'=[1] then '' else [1] end
	set @t_edate = case when '#non'=[2] then char(255) else [2] end
	set @t_bpartno = case when '#non'=[5] then '' else [5] end
	set @t_epartno = case when '#non'=[6] then char(255) else [6] end
	set @t_bsssno = case when '#non'=[7] then '' else [7] end
	set @t_esssno = case when '#non'=[8] then char(255) else [8] end
	set @t_baccno = case when '#non'=[9] then '' else [9] end
	set @t_eaccno = case when '#non'=[10] then char(255) else [10] end
	set @t_bchgitem = case when '#non'=[14] then '' else [14] end
	set @t_echgitem = case when '#non'=[15] then char(255) else [15] end
	--*****************************************************************************************	
	declare @result table(
		gno nvarchar(1),
		datea nvarchar(10),
		acc2 nvarchar(40),
		money decimal (11,3),
		memo nvarchar (200)
	)
	
	insert into @result
	select gno,datea,LEFT(acc2,len(acc2)-1),money,LEFT(memo,len(memo)-1) 
	from (
		select '0' gno,
			datea,
			(SELECT acc2 + '/' from chgcash T2 where T2.datea = T1.datea and (partno between @t_bpartno and @t_epartno) and (sssno between @t_bsssno and @t_esssno) and (acc1 between @t_baccno and @t_eaccno)  FOR XML PATH(''))as acc2,
			sum(money) money, 
			(SELECT memo + ' ' from chgcash T3 where T3.datea = T1.datea and (partno between @t_bpartno and @t_epartno) and	(sssno between @t_bsssno and @t_esssno) and (acc1 between @t_baccno and @t_eaccno)  FOR XML PATH(''))as memo 
			from chgcash T1
		where (datea between @t_bdate and @t_edate) and (partno between @t_bpartno and @t_epartno) and	(sssno between @t_bsssno and @t_esssno) and (acc1 between @t_baccno and @t_eaccno) 
		GROUP BY T1.datea
	)temp
	order by datea

	insert into @result
	select '1' gno,'','',sum(money) money,''
	from @result
	group by gno
	
	select gno,datea,acc2,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,money),1)),4,12)) money,
	memo
	from @result;
	
****************************
z_chgcashc:--z_chgcashc
	declare @t_bmon nvarchar(10)
	declare @t_emon nvarchar(10)
	declare @t_bpartno nvarchar(20)
	declare @t_epartno nvarchar(20)
	declare @t_baccno nvarchar(20)
	declare @t_eaccno nvarchar(20)
	declare @t_bchgitem nvarchar(20)
	declare @t_echgitem nvarchar(20)
	set @t_bmon = case when '#non'=[3] then '' else [3] end
	set @t_emon = case when '#non'=[4] then char(255) else [4] end
	set @t_bpartno = case when '#non'=[5] then '' else [5] end
	set @t_epartno = case when '#non'=[6] then char(255) else [6] end
	set @t_baccno = case when '#non'=[9] then '' else [9] end
	set @t_eaccno = case when '#non'=[10] then char(255) else [10] end
	set @t_bchgitem = case when '#non'=[14] then '' else [14] end
	set @t_echgitem = case when '#non'=[15] then char(255) else [15] end
	--*****************************************************************************************	
		--20120912申請不計算在金額內 case 內加入 when dc='4' then 0*money
		
	declare @result table(
		gno nvarchar(1),
		pno nvarchar(20),
		part nvarchar(40),
		datea nvarchar(10),
		acc2 nvarchar(40),
		dc nvarchar(20),
		preorg decimal (18,3),
		money decimal (18,3),
		total decimal (18,3)
	)
	
	--插入零用金資料
	insert into @result
	select '0' gno,partno,part,datea,acc2,dc,null,money,null
	from chgcash
	where (datea between @t_bmon+'/01' and @t_emon+'/31') and (partno between @t_bpartno and @t_epartno) and (acc1 between @t_baccno and @t_eaccno) 
	order by partno,datea
	
	
	declare @org table(
		partno nvarchar(20),
		org decimal (18,3)
	)

	insert into @org
	select partno,SUM( case when dc='4' then 0*money when dc='1' then -1* money else money end) from chgcash where datea < @t_bmon+'/01' 
	group by partno
	
		
--*****************************************************************************************	
	declare @gno nvarchar(1)
	declare @partno nvarchar(20)
	declare @tt_partno nvarchar(20)
	declare @part nvarchar(40)
	declare	@datea nvarchar(10)
	declare	@acc2 nvarchar(40)
	declare	@dc nvarchar(20)
	declare @preorg decimal (18,3)
	declare	@money decimal (11,3)
	declare	@tt_money decimal (11,3)
	declare	@total decimal (18,3)
	declare @t_partno nvarchar(20)
	declare @t_partno2 nvarchar(20)
	declare @t_total0 decimal(18,3)
	declare @t_total1 decimal(18,3)
	declare @t_total2 decimal(18,3)
	set @t_partno = '#zzzz#zzzz'
	set @t_partno2 = '#xxxx#xxxx'
	set @t_total0 = 0	--期初
	set @t_total1 = 0	--剩餘
	set @t_total2 = 0	--期末
--***********************************************************************
	declare chgcash_table cursor for
	select gno,pno,part,datea,acc2,dc,preorg,money,total from @result
	open chgcash_table
	fetch next from chgcash_table
	into @gno,@partno,@part,@datea,@acc2,@dc,@preorg,@money,@total
	while(@@FETCH_STATUS <> -1)
	begin
	
		if @partno != @t_partno
			begin
				--期初
					declare chgcashorg_table cursor for
					select partno,org from @org
					open chgcashorg_table
					fetch next from chgcashorg_table
					into @tt_partno,@tt_money
					while(@@FETCH_STATUS <> -1)
						begin
							if(@tt_partno =@partno)
								begin
									set @t_total0=@tt_money
								end
							fetch next from chgcashorg_table
							into @tt_partno,@tt_money
						end
					close chgcashorg_table
					deallocate chgcashorg_table

				set @t_total1=@t_total0
			end
	
		--更新剩餘與期初
			if @datea != ''
			begin
				update @result set total=@t_total1+( case when dc='4' then 0*money when dc='1' then -1* money else money end),preorg=@t_total0
				where current of chgcash_table
				--紀錄上次剩餘零用金
				set @t_total1 = @t_total1 +( case when @dc='4' then 0*@money when @dc='1' then -1* @money else @money end)
			end

		if @partno != @t_partno and @t_partno != '#zzzz#zzzz'--部門不同且不是第一筆，計算總計與期末
			begin
				insert into @result
				select '1' gno,'#xxxx#xxxx',@t_partno,'','','',null,SUM( case when dc='4' then 0*money when dc='1' then -1* money else money end),@t_total2
				from @result
				where pno=@t_partno
			end
			
		if(@partno='#xxxx#xxxx')
			begin
				update @result set pno=@part,part='',preorg=null
				where current of chgcash_table
			end
			
		set @t_partno = @partno
		set @t_total2 = @t_total1
		
		fetch next from chgcash_table
		into @gno,@partno,@part,@datea,@acc2,@dc,@preorg,@money,@total
	end
	close chgcash_table
	deallocate chgcash_table

		if @t_partno != '#zzzz#zzzz' and @datea != ''
			begin
				insert into @result
				select '1' gno,@t_partno,'','','','',null,SUM( case when dc='4' then 0*money when dc='1' then -1* money else money end),@t_total2
				from @result
				where pno=@t_partno
			end
		--將類型變成文字	
		update @result set dc='耗用'
		where dc='1'
		update @result set dc='繳回'
		where dc='2'
		update @result set dc='存款增補'
		where dc='3'
		update @result set dc='申請'
		where dc='4'

	select gno,pno,part,datea,acc2,dc,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,preorg),1)),4,12))	 preorg,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,money),1)),4,12)) money,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,total),1)),4,12)) total
	from @result order by pno,gno;
--**********************************************************************************************************************************
z_chgcashd:--z_chgcashd
	
	declare @t_bdate nvarchar(20)
	declare @t_edate nvarchar(20)
	declare @t_bmon nvarchar(10)
	declare @t_emon nvarchar(10)
	declare @t_bpartno nvarchar(20)
	declare @t_epartno nvarchar(20)
	declare @t_baccno nvarchar(20)
	declare @t_eaccno nvarchar(20)
	declare @t_po nvarchar(20)
	declare @t_bcustno nvarchar(20)
	declare @t_ecustno nvarchar(20)
	set @t_bdate = case when '#non'=[1] then '' else [1] end
	set @t_edate = case when '#non'=[2] then char(255) else [2] end
	set @t_bmon = case when '#non'=[3] then '' else [3] end
	set @t_emon = case when '#non'=[4] then char(255) else [4] end
	set @t_bpartno = case when '#non'=[5] then '' else [5] end
	set @t_epartno = case when '#non'=[6] then char(255) else [6] end
	set @t_baccno = case when '#non'=[9] then '' else [9] end
	set @t_eaccno = case when '#non'=[10]then char(255) else [10] end
	set @t_po = case when '#non'=[11] then '' else [11] end
	set @t_bcustno = case when '#non'=[12] then '' else [12] end
	set @t_ecustno = case when '#non'=[13] then char(255) else [13] end
	--*****************************************************************************************	
	--20120912申請不計算在金額內 case 內加入 when dc='4' then 0*money
	declare @result table(
		gno nvarchar(1),
		custno nvarchar(20),
		comp nvarchar(40),
		po nvarchar(20),
		datea nvarchar(10),
		acc2 nvarchar(40),
		dc nvarchar(20),
		preorg decimal (18,3),
		money decimal (18,3),
		total decimal (18,3)
	)
	
	--插入零用金資料
	insert into @result
	select '0' gno,custno,comp,po,datea,acc2,dc,null,money,null
	from chgcash
	where (LEN(@t_po)=0 or @t_po = po)and(datea between @t_bdate and @t_edate) and
	(custno between @t_bcustno  and @t_ecustno)and (len(comp)>0)
	order by custno,datea
	
	
	declare @org table(
		custno nvarchar(20),
		org decimal (18,3)
	)

	insert into @org
	select custno,SUM( case when dc='4' then 0*money when dc='1' then -1* money else money end) from chgcash where datea < @t_bdate 
	group by custno
	
		
--*****************************************************************************************	
	declare @gno nvarchar(1)
	declare @custno nvarchar(20)
	declare @tt_custno nvarchar(20)
	declare @comp nvarchar(40)
	declare	@datea nvarchar(10)
	declare	@acc2 nvarchar(40)
	declare	@dc nvarchar(20)
	declare @preorg decimal (18,3)
	declare	@money decimal (11,3)
	declare	@tt_money decimal (11,3)
	declare	@total decimal (18,3)
	declare @t_custno nvarchar(20)
	declare @t_custno2 nvarchar(20)
	declare @t_total0 decimal(18,3)
	declare @t_total1 decimal(18,3)
	declare @t_total2 decimal(18,3)
	set @t_custno = '#zzzz#zzzz'
	set @t_custno2 = '#xxxx#xxxx'
	set @t_total0 = 0	--期初
	set @t_total1 = 0	--剩餘
	set @t_total2 = 0	--期末
--***********************************************************************
	declare chgcash_table cursor for
	select gno,custno,comp,datea,acc2,dc,preorg,money,total from @result
	open chgcash_table
	fetch next from chgcash_table
	into @gno,@custno,@comp,@datea,@acc2,@dc,@preorg,@money,@total
	while(@@FETCH_STATUS <> -1)
	begin
	
		if @custno != @t_custno
			begin
				--期初
					declare chgcashorg_table cursor for
					select custno,org from @org
					open chgcashorg_table
					fetch next from chgcashorg_table
					into @tt_custno,@tt_money
					while(@@FETCH_STATUS <> -1)
						begin
							if(@tt_custno =@custno)
								begin
									set @t_total0=@tt_money
								end
							fetch next from chgcashorg_table
							into @tt_custno,@tt_money
						end
					close chgcashorg_table
					deallocate chgcashorg_table

				set @t_total1=@t_total0
			end
	
		--更新剩餘與期初
			if @datea != ''
			begin
				update @result set total=@t_total1+( case when dc='4' then 0*money when dc='1' then -1* money else money end),preorg=@t_total0
				where current of chgcash_table
				--紀錄上次剩餘零用金
				set @t_total1 = @t_total1 +( case when @dc='4' then 0*@money when @dc='1' then -1* @money else @money end)
			end

		if @custno != @t_custno and @t_custno != '#zzzz#zzzz'--公司不同且不是第一筆，計算總計與期末
			begin
				insert into @result
				select '1' gno,'#xxxx#xxxx',@t_custno,'','','','',null,SUM( case when dc='4' then 0*money when dc='1' then -1* money else money end),@t_total2
				from @result
				where custno=@t_custno
			end
			
		if(@custno='#xxxx#xxxx')
			begin
				update @result set custno=@comp,comp='',preorg=null
				where current of chgcash_table
			end
			
		set @t_custno = @custno
		set @t_total2 = @t_total1
		
		fetch next from chgcash_table
		into @gno,@custno,@comp,@datea,@acc2,@dc,@preorg,@money,@total
	end
	close chgcash_table
	deallocate chgcash_table

		if @t_custno != '#zzzz#zzzz' and @datea != ''
			begin
				insert into @result
				select '1' gno,@t_custno,'','','','','',null,SUM( case when dc='4' then 0*money when dc='1' then -1* money else money end),@t_total2
				from @result
				where custno=@t_custno
			end
			
		--將類型變成文字	
		update @result set dc='耗用'
		where dc='1'
		update @result set dc='繳回'
		where dc='2'
		update @result set dc='存款增補'
		where dc='3'
		update @result set dc='申請'
		where dc='4'

	select gno,custno,comp,po,datea,acc2,dc,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,preorg),1)),4,12))	 preorg,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,money),1)),4,12)) money,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,total),1)),4,12))total
	from @result order by custno,gno;
--*****************************************************************************
z_chgcashe:--z_chgcashe
	declare @t_bdate nvarchar(20)
	declare @t_edate nvarchar(20)
	declare @t_bmon nvarchar(10)
	declare @t_emon nvarchar(10)
	declare @t_bpartno nvarchar(20)
	declare @t_epartno nvarchar(20)
	declare @t_baccno nvarchar(20)
	declare @t_eaccno nvarchar(20)
	declare @t_po nvarchar(20)
	declare @t_bcustno nvarchar(20)
	declare @t_ecustno nvarchar(20)
	set @t_bdate = case when '#non'=[1] then '' else [1] end
	set @t_edate = case when '#non'=[2] then char(255) else [2] end
	set @t_bmon = case when '#non'=[3] then '' else [3] end
	set @t_emon = case when '#non'=[4] then char(255) else [4] end
	set @t_bpartno = case when '#non'=[5] then '' else [5] end
	set @t_epartno = case when '#non'=[6] then char(255) else [6] end
	set @t_baccno = case when '#non'=[9] then '' else [9] end
	set @t_eaccno = case when '#non'=[10]then char(255) else [10] end
	set @t_po = case when '#non'=[11] then '' else [11] end
	set @t_bcustno = case when '#non'=[12] then '' else [12] end
	set @t_ecustno = case when '#non'=[13] then char(255) else [13] end
	--*****************************************************************************************	
			--20120912申請不計算在金額內 case 內加入 when dc='4' then 0*money
	declare @cmb table(
		gno nvarchar(1),
		custno nvarchar(20),
		comp nvarchar(40),
		po nvarchar(20),
		acc1 nvarchar(20),
		acc2 nvarchar(40),
		dc nvarchar(20),
		preorg decimal (18,3),
		money decimal (18,3),
		total decimal (18,3)
	)
	
	--插入零用金資料
	insert into @cmb
	select '0' gno,custno,comp,po,acc1,acc2,dc,null,money,null
	from chgcash
	where (LEN(@t_po)=0 or @t_po = po)and(datea between @t_bdate and @t_edate) and
	(custno between @t_bcustno  and @t_ecustno)and (len(comp)>0)
	order by custno,datea
	
		
	declare @tmp table(
		gno nvarchar(1),
		custno nvarchar(20),
		comp nvarchar(50),
		acc1 nvarchar(20),
		dc nvarchar(10),
		acc2 nvarchar(40),
		preorg decimal (18,3),
		[money] decimal (18,3),
		total decimal (18,3)
		primary key(custno,acc1,dc,gno)
)
insert into @tmp
select '0' gno,custno,MAX(comp),acc1,dc,MAX(acc2),SUM(preorg),SUM(money),SUM(total)
from @cmb
group by custno,acc1,dc

	
	declare @org table(
		custno nvarchar(20),
		acc1 nvarchar(20),
		org decimal (18,3)
	)

	insert into @org
	select custno,acc1,SUM( case when dc='4' then 0*money when dc='1' then -1* money else money end) from chgcash 
	where datea < @t_bmon+'/01' 
	group by custno,acc1

----*****************************************************************************************	
	declare @gno nvarchar(1)
	declare @custno nvarchar(20)
	declare @tt_custno nvarchar(20)
	declare @comp nvarchar(40)
	declare @t_comp nvarchar(40)
	declare	@acc2 nvarchar(40)
	declare	@acc1 nvarchar(20)
	declare	@dc nvarchar(20)
	declare @preorg decimal (18,3)
	declare	@money decimal (11,3)
	declare	@tt_money decimal (11,3)
	declare	@total decimal (18,3)
	declare @t_custno nvarchar(20)
	declare @t_custno2 nvarchar(20)
	declare @t_total0 decimal(18,3)
	declare @t_total1 decimal(18,3)
	declare @t_total2 decimal(18,3)
	set @t_custno = '#zzzz#zzzz'
	set @t_comp = '#zzzz#zzzz'
	set @t_custno2 = '#xxxx#xxxx'
	set @t_total0 = 0	--期初
	set @t_total1 = 0	--剩餘
	set @t_total2 = 0	--期末
--***********************************************************************
	declare chgcash_table cursor for
	select gno,custno,comp,acc1,acc2,dc,preorg,money,total from @tmp
	open chgcash_table
	fetch next from chgcash_table
	into @gno,@custno,@comp,@acc1,@acc2,@dc,@preorg,@money,@total
	while(@@FETCH_STATUS <> -1)
	begin
		if @custno != @t_custno
			begin
			--	期初
					declare chgcashorg_table cursor for
					select custno,org from @org
					open chgcashorg_table
					fetch next from chgcashorg_table
					into @tt_custno,@tt_money
					while(@@FETCH_STATUS <> -1)
						begin
							if(@tt_custno =@custno)
								begin
									set @t_total0=@tt_money
								end
							fetch next from chgcashorg_table
							into @tt_custno,@tt_money
						end
					close chgcashorg_table
					deallocate chgcashorg_table

				set @t_total1=@t_total0
			end
	
	--	更新剩餘與期初
			if @acc1 != ''
			begin
				update @tmp set total=@t_total1+( case when dc='4' then 0*money when dc='1' then -1* money else money end),preorg=@t_total0
				where current of chgcash_table
			--	紀錄上次剩餘零用金
				set @t_total1 = @t_total1 +( case when @dc='4' then 0*@money when @dc='1' then -1* @money else @money end)
			end
			if @custno != @t_custno and @t_custno != '#zzzz#zzzz'--部門不同且不是第一筆，計算總計與期末
			begin
				insert into @tmp
				select '1' gno,@t_custno,@t_comp,'',@dc,(SELECT acc2 + '/' from @tmp T2 where T2.custno = @t_custno FOR XML PATH('')),@t_total0,SUM( case when dc='4' then 0*money when dc='1' then -1* money else money end),@t_total2
				from @cmb 
				where custno=@t_custno
			end
			
		if(@custno='#xxxx#xxxx')
			begin
				update @cmb set custno=@comp,comp='',preorg=null
				where current of chgcash_table
			end
			
		set	@t_comp= @comp
		set @t_custno = @custno
		set @t_total2 = @t_total1
		
		fetch next from chgcash_table
		into @gno,@custno,@comp,@acc1,@acc2,@dc,@preorg,@money,@total
	end
	close chgcash_table
	deallocate chgcash_table

		if @t_custno != '#zzzz#zzzz' and @acc1 != ''
			begin
				insert into @tmp
				select '1' gno,@t_custno,@t_comp,'',@dc,(SELECT acc2 + '/' from @tmp T2 where T2.custno = @t_custno FOR XML PATH('')),@t_total0,SUM( case when dc='4' then 0*money when dc='1' then -1* money else money end),@t_total2
				from @cmb
				where custno=@t_custno
			end
			
			
			
			
	declare @result table(
			gno nvarchar(1),
			custno nvarchar(20),
			comp nvarchar(50),
			dc nvarchar(2),
			acc2 nvarchar(200),
			preorg float,
			[money] float,
			total float
	)	
	insert into @result
	select '0' gno,custno,comp,dc,acc2,preorg,money,total
	from @tmp
	where gno = 1

select gno,custno,comp,dc,acc2,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,preorg),1)),4,12)) preorg,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,money),1)),4,12)) money,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,total),1)),4,12)) total
from @result;
--**********************************************************************************************************************************************************
z_chgcashf:--z_chgcashf
declare @t_bdate nvarchar(10)
	declare @t_edate nvarchar(10)
	declare @t_bpartno nvarchar(20)
	declare @t_epartno nvarchar(20)
	declare @t_bsssno nvarchar(20)
	declare @t_esssno nvarchar(20)
	declare @t_baccno nvarchar(20)
	declare @t_eaccno nvarchar(20)
	declare @t_bchgitem nvarchar(20)
	declare @t_echgitem nvarchar(20)
	set @t_bdate = case when '#non'=[1] then '' else [1] end
	set @t_edate = case when '#non'=[2] then char(255) else [2] end
	set @t_bpartno = case when '#non'=[5] then '' else [5] end
	set @t_epartno = case when '#non'=[6] then char(255) else [6] end
	set @t_bsssno = case when '#non'=[7] then '' else [7] end
	set @t_esssno = case when '#non'=[8] then char(255) else [8] end
	set @t_baccno = case when '#non'=[9] then '' else [9] end
	set @t_eaccno = case when '#non'=[10] then char(255) else [10] end
	set @t_bchgitem = case when '#non'=[14] then '' else [14] end
	set @t_echgitem = case when '#non'=[15] then char(255) else [15] end
declare @result table(
		gno nvarchar(1),
		datea nvarchar(10),
		chgitem nvarchar(40),
		money decimal (11,3),
		memo nvarchar (200)
	)
	
	insert into @result
	select '0' gno,datea,chgitem,money,memo
	from chgcash
	where (partno between @t_bpartno and @t_epartno) and
	 (sssno between @t_bsssno and @t_esssno) and 
	(acc1 between @t_baccno and @t_eaccno) and 
	(chgitem between @t_bchgitem and @t_echgitem)
		

	insert into @result
	select '1' gno,'',chgitem,sum(money) money,''
	from @result
	group by chgitem
	
	select 	gno,datea,chgitem,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,money),1)),4,12)) money,
	memo
	from @result
	order by chgitem,gno;
	-------------------------------------------------------------------------------------------------
	z_chgcashg:--z_chgcashg
declare @t_bdate nvarchar(10)
	declare @t_edate nvarchar(10)
	declare @t_bpartno nvarchar(20)
	declare @t_epartno nvarchar(20)
	declare @t_bsssno nvarchar(20)
	declare @t_esssno nvarchar(20)
	declare @t_baccno nvarchar(20)
	declare @t_eaccno nvarchar(20)
	declare @t_bchgitem nvarchar(20)
	declare @t_echgitem nvarchar(20)
	set @t_bdate = case when '#non'=[1] then '' else [1] end
	set @t_edate = case when '#non'=[2] then char(255) else [2] end
	set @t_bpartno = case when '#non'=[5] then '' else [5] end
	set @t_epartno = case when '#non'=[6] then char(255) else [6] end
	set @t_bsssno = case when '#non'=[7] then '' else [7] end
	set @t_esssno = case when '#non'=[8] then char(255) else [8] end
	set @t_baccno = case when '#non'=[9] then '' else [9] end
	set @t_eaccno = case when '#non'=[10] then char(255) else [10] end
	set @t_bchgitem = case when '#non'=[14] then '' else [14] end
	set @t_echgitem = case when '#non'=[15] then char(255) else [15] end
	--*****************************************************************************************	
	declare @result table(
		gno nvarchar(1),
		datea nvarchar(10),
		acc1 nvarchar(20),
		acc2 nvarchar(40),
		money decimal (11,3),
		memo nvarchar (200)
	)
	
	insert into @result
	select '0' gno,datea,acc1,acc2,money,memo
	from chgcash
	where (partno between @t_bpartno and @t_epartno) and
	 (sssno between @t_bsssno and @t_esssno) and 
	(acc1 between @t_baccno and @t_eaccno) and
	(datea between @t_bdate and @t_edate)
		

	insert into @result
	select '1' gno,'','',acc2,sum(money) money,''
	from @result
	group by acc2
	
	select 	gno,datea,acc1,acc2,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,money),1)),4,12)) money,
	memo
	from @result
	order by acc2,gno;