z_credit1:--z_credit1
declare @t_bcno nvarchar(20)
declare @t_ecno nvarchar(20)
set @t_bcno = case when '#non' = [2] then '' else  [2] end
set @t_ecno = case when '#non' =  [3] then CHAR(255) else  [3] end


declare @tmp table( 
	gno nvarchar(1), 
	noa nvarchar(20),
	nick nvarchar(30), 
	credit float, 
	crd float, 
	gqb float, 
	umm float, 
	orde float, 
	opay float,
	total float 
) 
insert into @tmp 
select '0'gno,a.noa,a.nick,a.credit,isnull(b.credit,0) crd
,isnull((select SUM(money) from gqb where cno=a.noa and (len(enda)=0 or enda is null or enda ='N' or enda='n') and typea!='3'),0)gqb
,isnull((select sum(unpay) from umm where custno=a.noa),0) umm
,isnull((select sum(ov.money) from orde[1] o left join (select o.noa,SUM(isnull(o.total,0)-isnull(v.total,0))money from ordes[1] o left join vccs[1] v on o.noa=v.ordeno and o.noa=v.no2 group by o.noa)ov on o.noa=ov.noa where o.enda=0 and o.custno=a.noa group by o.custno) ,0) orde
,isnull((select SUM( opay - unopay) from umm where custno=a.noa),0) opay,0
from cust a left join crdset b on a.noa=b.noa
where a.noa between @t_bcno and @t_ecno

update @tmp
set total=credit+crd-gqb-umm-orde+opay

insert into @tmp 
select '1' gno,'','',sum(credit),sum(crd),sum(gqb),sum(umm),sum(orde),sum(opay),sum(total)
from @tmp


select gno,noa,nick,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,credit),1)),4,12)) credit,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,crd),1)),4,12)) crd,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,gqb),1)),4,12)) gqb,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,umm),1)),4,12)) umm,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,orde),1)),4,12)) orde,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,opay),1)),4,12)) opay,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,total),1)),4,12)) total
from @tmp 
order by  gno,noa;
--------------------------------------------------------------------------------------------------
z_credit2:--z_credit2
declare @t_bgrpno nvarchar(20)
declare @t_egrpno nvarchar(20)
set @t_bgrpno = case when '#non' = [4] then '' else [4] end
set @t_egrpno = case when '#non' = [5] then CHAR(255) else [5] end

declare @tmp table( 
	gno nvarchar(1),
	grpno nvarchar(20),
	team nvarchar(20),
	noa nvarchar(30),
	nick nvarchar(50), 
	discredit float, 
	credit float, 
	gqb float, 
	umm float, 
	orde float, 
	opay float,
	money float,
	total float 
) 
insert into @tmp 
select '0'gno,grpno,team,a.noa,a.nick,a.credit discredit,isnull(a.credit,0)+isnull(b.credit,0) credit
,isnull((select SUM(money) from gqb where cno=a.noa and (len(enda)=0 or enda is null or enda ='N' or enda='n') and typea!='3'),0)gqb
,isnull((select sum(unpay) from umm where custno=a.noa),0) umm
,isnull((select sum(ov.money) from orde[1] o left join (select o.noa,SUM(isnull(o.total,0)-isnull(v.total,0))money from ordes[1] o left join vccs[1] v on o.noa=v.ordeno and o.noa=v.no2 group by o.noa)ov on o.noa=ov.noa where o.enda=0 and o.custno=a.noa group by o.custno) ,0) orde
,isnull((select SUM( opay - unopay) from umm where custno=a.noa),0) opay,0,0
from cust a left join crdset b on a.noa=b.noa
where a.grpno!='' and a.grpno between @t_bgrpno and @t_egrpno

update @tmp
set money=credit-gqb-umm-orde+opay

insert into @tmp 
select '1' gno,grpno,'','','',sum(discredit),sum(credit),sum(gqb),sum(umm),sum(orde),sum(opay),sum(money),0
from @tmp
group by grpno

declare @t_grpno nvarchar(20)
declare @t_discredit float

declare cursor_table cursor for 
select grpno,discredit from @tmp where gno='1'
open cursor_table 
fetch next from cursor_table 
into @t_grpno,@t_discredit
while(@@FETCH_STATUS <> -1) 
begin
	update @tmp
	set total=@t_discredit
	where grpno=@t_grpno
	
	fetch next from cursor_table 
	into @t_grpno,@t_discredit
end 
close cursor_table 
deallocate cursor_table 


select gno,noa,nick,grpno,team,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,discredit),1)),4,12)) discredit,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,credit),1)),4,12)) credit,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,gqb),1)),4,12)) gqb,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,umm),1)),4,12)) umm,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,orde),1)),4,12)) orde,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,opay),1)),4,12)) opay,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,money),1)),4,12)) money,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,total),1)),4,12)) total
from @tmp 
order by  grpno,gno,team,noa;
--------------------------------------------------------------------------------------------------
z_credit3:--z_credit3
SET QUOTED_IDENTIFIER OFF
	declare @cmd nvarchar(max)
	declare @t_accy nvarchar(10)
	declare @c_typea nvarchar(max)
	declare @t_typea nvarchar(20)
	declare @t_status nvarchar(20)
	declare @t_bdate nvarchar(10)
	declare @t_edate nvarchar(10)
	declare @t_bindate nvarchar(10)
	declare @t_eindate nvarchar(10)
	declare @t_bbankno nvarchar(15)
	declare @t_ebankno nvarchar(15)
	declare @t_sort01 nvarchar(max)
	set @t_accy = '[1]'
	set @c_typea = '[15]'
	set @t_typea = case when '#non'=[6] then '' when '全部'=[6] then '' else [6] end
	set @t_status = case when '#non'=[7] then '' when '全部'=[7] then '' else [7] end
	set @t_bdate = case when '#non'=[8] then '' else [8] end
	set @t_edate = case when '#non'=[9] then char(255) else [9] end
	set @t_bindate = case when '#non'=[10] then '' else [10] end
	set @t_eindate = case when '#non'=[11] then char(255) else [11] end
	set @t_bbankno = case when '#non'=[12] then '' else [12] end
	set @t_ebankno = case when '#non'=[13] then char(255) else [13] end
	set @t_sort01 = case when '#non'=[14] then '' else [14] end
	-------------------------------------------------------------------------------
	declare @string nvarchar(max) 
	declare @n int 
	declare @string2 nvarchar(max) 
	declare @n2 int 

	declare @stype table( 
		noa nvarchar(20), 
		typea nvarchar(20) 
		) 
	set @string = @c_typea 
	while(1=1) 
	begin 
		set @n = PATINDEX('%,%',@string) 
		if @n=0 
		begin 
			if LEN(@string)>0 
			begin 
				set @n2 = PATINDEX('%@%',@string) 
				insert into @stype select LEFT(@string,@n2-1),SUBSTRING(@string,@n2+1,len(@string)-@n2) 
			end 
			break 
		end 
		set @n2 = PATINDEX('%@%',@string) 
		set @string2 = LEFT(@string,@n-1) 
		insert into @stype select LEFT(@string2,@n2-1),SUBSTRING(@string2,@n2+1,len(@string2)-@n2) 
		set @string = SUBSTRING(@string,@n+1,LEN(@string)-@n) 
	end 

	declare @tmp table( 
		gno nvarchar(1), 
		zz nvarchar(max), 
		noa nvarchar(20), 
		gqbno nvarchar(20), 
		datea nvarchar(10), 
		udate nvarchar(10), 
		indate nvarchar(10), 
		typea nvarchar(8), 
		tbk nvarchar(30), 
		bankno nvarchar(15), 
		bank nvarchar(30), 
		compno nvarchar(10), 
		comp nvarchar(40), 
		money decimal(14,2), 
		money1 decimal(14,2), 
		money2 decimal(14,2), 
		pcount1 int, 
		pcount2 int,
		memo nvarchar(max) 
	) 

	set @cmd = 
	" select '0' gno,"+@t_sort01+",noa,gqbno,datea,udate,indate,typea,tbank,bankno,bank,'',isnull(tcomp,'')+isnull(comp,''),[money]"+ 
	" , case when typea='1' then [money] else 0 end money1"+ 
	" , case when typea='2' then [money] else 0 end money2"+ 
	" , case when typea='1' then 1 else 0 end pcount1"+ 
	" , case when typea='2' then 1 else 0 end pcount2,memo"+ 
	" from gqb a"+ 
	" where (len(@t_typea)=0 or @t_typea= typea) and (len(@t_status)=0 or @t_status=case when enda='Y' then enda else 'N' end) "+ 
	" and (isnull(datea,'') between @t_bdate and @t_edate) "+ 
	" and (isnull(indate,'') between @t_bindate and @t_eindate)"+ 
	" and (isnull(bankno,'') between @t_bbankno and @t_ebankno)"+ 
	" order by "+@t_sort01+",gqbno" 

	insert into @tmp 
	execute sp_executesql @cmd,N'@t_typea nvarchar(10),@t_status nvarchar(10),@t_bdate nvarchar(10),@t_edate nvarchar(10),@t_bindate nvarchar(10),@t_eindate nvarchar(10),@t_bbankno nvarchar(20),@t_ebankno nvarchar(20)' 
	,@t_typea=@t_typea,@t_status=@t_status,@t_bdate=@t_bdate,@t_edate=@t_edate,@t_bindate=@t_bindate,@t_eindate=@t_eindate,@t_bbankno=@t_bbankno,@t_ebankno=@t_ebankno 
-------------------------------------------------------------------------------------------------- 
	declare @zz nvarchar(max) 
	declare @money1 float 
	declare @money2 float 
	declare @pcount1 int 
	declare @pcount2 int 

	declare cursor_table cursor for 
	select zz,sum(isnull(money1,0)),sum(isnull(money2,0)),sum(isnull(pcount1,0)),sum(isnull(pcount2,0)) from @tmp group by zz 
	open cursor_table 
	fetch next from cursor_table 
into @zz,@money1,@money2,@pcount1,@pcount2 
while(@@FETCH_STATUS <> -1) 
begin 
insert into @tmp(gno,zz,gqbno,money1,money2,pcount1,pcount2)values('1',@zz,CHAR(255),@money1,@money2,@pcount1,@pcount2) 

fetch next from cursor_table 
into @zz,@money1,@money2,@pcount1,@pcount2 
end 
close cursor_table 
deallocate cursor_table 

select @money1=0,@money2=0,@pcount1=0,@pcount2=0 
select @money1 = sum(isnull(money1,0)), @money2 = sum(isnull(money2,0)) 
, @pcount1 = sum(isnull(pcount1,0)), @pcount2 = sum(isnull(pcount2,0)) from @tmp where gno='0' 

insert into @tmp(gno,zz,money1,money2,pcount1,pcount2)values('2',CHAR(255),@money1,@money2,@pcount1,@pcount2) 

select a.* 
,b.typea cty 
,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,[money]),1)),4,12)) mm 
,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,money1),1)),4,12)) m1 
,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,money2),1)),4,12)) m2 
,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,pcount1),1)),4,12)) p1 
,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,pcount2),1)),4,12)) p2,memo 
from @tmp a 
left join @stype b on a.typea=b.noa 
order by zz,gno,gqbno;
	