z_credit1:--z_credit1
declare @t_bcno nvarchar(20)
declare @t_ecno nvarchar(20)
set @t_bcno = case when '#non' = [2] then '' else  [2] end
set @t_ecno = case when '#non' =  [3] then CHAR(255) else  [3] end


declare @tmp table( 
	gno nvarchar(1), 
	noa nvarchar(20),
	nick nvarchar(30), 
	credit float, 
	crd float, 
	gqb float, 
	umm float, 
	orde float, 
	opay float,
	total float 
) 
insert into @tmp 
select '0'gno,a.noa,a.nick,a.credit,isnull(b.credit,0) crd
,isnull((select SUM(money) from gqb where cno=a.noa and (len(enda)=0 or enda is null or enda ='N' or enda='n') and typea!='3'),0)gqb
,isnull((select sum(unpay) from umm where custno=a.noa),0) umm
,isnull((select sum(ov.money) from orde[1] o left join (select o.noa,SUM(isnull(o.total,0)-isnull(v.total,0))money from ordes[1] o left join vccs[1] v on o.noa=v.ordeno and o.noa=v.no2 group by o.noa)ov on o.noa=ov.noa where o.enda=0 and o.custno=a.noa group by o.custno) ,0) orde
,isnull((select SUM( opay - unopay) from umm where custno=a.noa),0) opay,0
from cust a left join crdset b on a.noa=b.noa
where a.noa between @t_bcno and @t_ecno

update @tmp
set total=credit+crd-gqb-umm-orde+opay

insert into @tmp 
select '1' gno,'','',sum(credit),sum(crd),sum(gqb),sum(umm),sum(orde),sum(opay),sum(total)
from @tmp


select gno,noa,nick,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,credit),1)),4,12)) credit,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,crd),1)),4,12)) crd,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,gqb),1)),4,12)) gqb,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,umm),1)),4,12)) umm,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,orde),1)),4,12)) orde,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,opay),1)),4,12)) opay,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,total),1)),4,12)) total
from @tmp 
order by  gno,noa;
--------------------------------------------------------------------------------------------------