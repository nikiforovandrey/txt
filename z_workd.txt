z_workd1:--z_workd1
declare @t_bdate nvarchar(10)
declare @t_edate nvarchar(10)
declare @t_btggno nvarchar(30)
declare @t_etggno nvarchar(30)
set @t_bdate = case when '#non'=[3] then '' else [3] end
set @t_edate = case when '#non'=[4] then char(255) else [4] end
set @t_btggno = case when '#non'=[5] then '' else [5] end
set @t_etggno = case when '#non'=[6] then char(255) else [6] end
declare @tmp table(
	gno nvarchar(1),
	adatea nvarchar(10),
	aproductno nvarchar(30),
	aproducts nvarchar(90),
	atggno nvarchar(30),
	atggs nvarchar(90),
	bmount float,
	bprice float,
	btotal float,
	berrmount float
)
insert into @tmp
	select
		'0',b.datea,a.productno,a.product,b.tggno,c.nick,sum(a.mount),sum(a.price),sum(a.total),sum(a.errmount)
	from workds[1] a
	left join workd[1] b on a.noa = b.noa
	left join tgg c on b.tggno = c.noa
	where (b.tggno between @t_btggno and @t_etggno) and
		  (b.datea between @t_bdate and @t_edate)
	group by b.datea,a.productno,a.product,b.tggno,c.nick
insert into @tmp(gno,atggno,atggs,bmount,bprice,btotal,berrmount)
	select '1',atggno,atggs,sum(bmount),sum(bprice),sum(btotal),sum(berrmount)
	from @tmp
	group by atggno,atggs
select * from @tmp order by atggno,gno,adatea;
--------------------------------------------------------------------------------------------------------
z_workd2:--z_workd2
declare @t_bdate nvarchar(10)
declare @t_edate nvarchar(10)
declare @t_btggno nvarchar(30)
declare @t_etggno nvarchar(30)
set @t_bdate = case when '#non'=[3] then '' else [3] end
set @t_edate = case when '#non'=[4] then char(255) else [4] end
set @t_btggno = case when '#non'=[5] then '' else [5] end
set @t_etggno = case when '#non'=[6] then char(255) else [6] end
declare @tmp table(
	gno nvarchar(1),
	t_workcno nvarchar(30),
	t_tgg nvarchar(30),
	t_productno nvarchar(30),
	t_products nvarchar(90),
	t_unit nvarchar(10),
	t_amount float,
	t_bmount float,
	t_cmount float
)
insert into @tmp
	select '0',b.noa,c.nick,a.productno,a.product,a.unit,0,0,a.mount from workcs[1] a
	left join workc[1] b on a.noa = b.noa
	left join tgg c on b.tggno = c.noa
	where b.datea between @t_bdate and @t_edate and 
			 b.tggno between @t_btggno and @t_etggno
	EXCEPT 
	select '0',b.workcno,c.nick,a.productno,a.product,a.unit,0,0,a.born from workds[1] a
	left join workd[1] b on a.noa = b.noa
	left join tgg c on b.tggno = c.noa
	where b.datea between @t_bdate and @t_edate and 
			 b.tggno between @t_btggno and @t_etggno
update @tmp set t_amount = isnull((select a.mount from work[1] a 
											left join workc[1] b on a.noa = b.workno
											where b.noa = t_workcno),0)
update @tmp set t_bmount = isnull((select sum(a.born) from workds[1] a 
									 left join workd[1] b on a.noa = b.noa
									 where b.workcno = t_workcno and a.productno = t_productno),0)
update @tmp set t_cmount = (select sum(mount) from workcs[1] where noa = t_workcno and productno = t_productno)-
									isnull((select sum(a.born) from workds[1] a 
									 left join workd[1] b on a.noa = b.noa
									 where b.workcno = t_workcno and a.productno = t_productno),0)
insert into @tmp(gno,t_tgg,t_amount,t_bmount,t_cmount)
	select '1',t_tgg,sum(t_amount),sum(t_bmount),sum(t_cmount) from @tmp
	group by t_tgg
select * from @tmp order by t_tgg,gno,t_workcno;
--------------------------------------------------------------------------------------------------------
z_workd3:--z_workd3
declare @tmp table(
	gno nvarchar(1),
	storeno nvarchar(30),
	stores nvarchar(50),
	productno nvarchar(30),
	products nvarchar(90),
	unit nvarchar(12),
	amount float,
	errmount float,
	totmount float,
	coin nvarchar(15),
	taxtype nvarchar(12),
	totprice float,
	taxprice float,
	total float,
	other float,
	totmoney float
)
insert into @tmp
	select
		'0',b.storeno,b.store,c.productno,c.product,d.unit,sum(a.mount),sum(a.errmount),0,d.coin,d.taxtype,d.money,d.tax,0,0,0
	from workds[1] a
	left join workd[1] b on a.noa = b.noa
	left join workc[1] c on b.workcno = c.noa
	left join (
		select b.*,a.no2,a.unit from ordes[1] a
		left join orde[1] b on a.noa = b.noa
	) d on (c.ordeno = d.noa) and (c.no2 = d.no2)
	group by b.storeno,b.store,c.productno,c.product,d.unit,d.coin,d.taxtype,d.money,d.tax
update @tmp set totmount = amount + errmount
update @tmp set total = totprice + taxprice
update @tmp set totmoney = total + other
update @tmp set taxtype = (
	case taxtype when '1' then '應稅'
		when '2' then '零稅率'
		when '3' then '內含'
		when '4' then '免稅'
		when '5' then '零稅率'
		when '6' then '自訂'
	end
)
select
	gno,storeno,stores,productno,products,unit,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,amount),1)),4,12)) amount,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,errmount),1)),4,12)) errmount,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,totmount),1)),4,12)) totmount,
	coin,taxtype,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,totprice),1)),4,12)) totprice,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,taxprice),1)),4,12)) taxprice,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,total),1)),4,12)) total,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,other),1)),4,12)) other,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,totmoney),1)),4,12)) totmoney
from @tmp;
