z_work16:--z_work16
	declare @t_bdate nvarchar(20) = case when '#non' = [22] then '' else [22] end
	declare @t_edate nvarchar(20) = case when '#non' = [23] then CHAR(255) else [23] end
	declare @t_bstationno nvarchar(20)=case when '#non' = [24] then '' else [24] end
	declare @t_estationno nvarchar(20)=case when '#non' = [25] then CHAR(255) else [25] end
	declare @t_diff nvarchar(20)=case when '#non' = [20] then '' else [20] end
	declare @t_detail nvarchar(20)=case when '#non' = [26] then '' else [26] end
	--------------------------------------------------------------------------------------
	declare @tmp table(
		noa nvarchar(20),
		cuadate nvarchar(20),
		uindate nvarchar(20),
		wtime1 float,
		wtime2 float,
		stationno nvarchar(20),
		productno nvarchar(20),
		processno nvarchar(20)
	)
	insert into @tmp(noa,cuadate,uindate,wtime1,wtime2,stationno,productno,processno)
	select noa,cuadate,uindate,wtime1,wtime2,stationno,productno,processno from view_work
		where not(wtime1=0 and wtime2=0)
	and (cuadate between @t_bdate and @t_edate or uindate between @t_bdate and @t_edate)
	order by stationno
	-------------------------------------------------------------------------------------
	declare @n int = 0
	begin try
		declare @bdate date = cast(cast(cast(left(@t_bdate,3) as int)+1911 as nvarchar)+right(@t_bdate,6) as date)
		declare @edate date = cast(cast(cast(left(@t_edate,3) as int)+1911 as nvarchar)+right(@t_edate,6) as date)
		set @n  = datediff(dd,@bdate,@edate)+1
	end try
	begin catch
	end catch
	-------------------------------------------------------------------------------------
	declare @tmpa table(
		gno nvarchar(20),
		recno int,
		pno int,
		stationno nvarchar(20),
		station nvarchar(50),
		bdate nvarchar(20),
		edate nvarchar(20),
		hrs float,
		gen float,
		diff float		,
		
		productno nvarchar(20),
		processno nvarchar(20),
		process nvarchar(50)
	)
	--工作中心  get區間日期  需工時小計  產能160hr  負荷差異
	insert into @tmpa(gno,pno,recno,stationno,hrs)
	select '1',1,ROW_NUMBER()over(order by stationno),stationno
	,sum(case when cuadate>=@t_bdate then wtime1 else 0 end+case when uindate<=@t_edate then wtime2 else 0 end)
	from @tmp group by stationno
	
	update @tmpa set station=b.station,bdate=@t_bdate,edate=@t_edate,gen=b.gen*@n,diff=b.gen*@n-a.hrs
	from @tmpa a
	left join station b on a.stationno=b.noa
	
	if len(@t_detail)>0
	begin
		update @tmpa set gno='3'
		insert into @tmpa(gno,pno,recno,bdate,edate,productno,processno,process,hrs)
		select '2',ROW_NUMBER()over(partition by a.stationno order by a.cuadate)+1
		,b.recno,a.cuadate,a.uindate,a.productno,a.processno,c.process
		,case when cuadate>=@t_bdate then wtime1 else 0 end+case when uindate<=@t_edate then wtime2 else 0 end
		from @tmp a
		left join @tmpa b on a.stationno=b.stationno 
		left join process c on a.processno=c.noa
	end
	
	if len(@t_diff)>0
		delete @tmpa where abs(diff)<0.5
	select * 
	,stationno a1
	,station a2
	,bdate a3
	,edate a4
	,hrs a5
	,gen a6
	,diff a7
	
	,productno b1
	,processno b2
	,process b3
	from @tmpa order by recno,pno;


z_work1:--z_work1
declare @t_bdate nvarchar(20)
declare @t_edate nvarchar(20)
declare @t_bstationno nvarchar(20)
declare @t_estationno nvarchar(20)
declare @t_xgroupano nvarchar(90)
declare @t_showdiff nvarchar(20)
set @t_bdate = case when '#non' = [3] then '' else [3] end
set @t_edate = case when '#non' = [4] then CHAR(255) else [4] end
set @t_bstationno = case when '#non' = [7] then '' else [7] end
set @t_estationno = case when '#non' = [8] then CHAR(255) else [8] end
set @t_xgroupano = case when '#non' = [19] then '' else [19] end
set @t_showdiff = case when '#non' = [20] then '' else [20] end
declare @tmp table(
	gno nvarchar(1),
	stationno nvarchar(10),
	stations nvarchar(90),
	datea nvarchar(10),
	udate nvarchar(10),
	noa nvarchar(30),
	productno nvarchar(30),
	products nvarchar(90),
	mount float,
	unit nvarchar(10),
	hours float,
	diffdate int, ---實際開工日與應完工日的差
	dayhtotal float, ---日小計
	dayhs float, ---標準日工時
	difftime float --負荷差異
)
insert into @tmp
select
	'0',a.stationno,a.station,a.cuadate,a.uindate,a.noa,a.productno,a.product,a.mount,a.unit,a.hours,
		DATEDIFF(day,CONVERT(datetime,(cast((left(a.cuadate,3)+1911) as nvarchar)+right(a.cuadate,6))),
				case when a.uindate!='' or a.cuadate>a.uindate  then
					CONVERT(datetime,(cast((left(a.uindate,3)+1911) as nvarchar)+right(a.uindate,6)))
				else
					CONVERT(datetime,(cast((left(a.cuadate,3)+1911) as nvarchar)+right(a.cuadate,6)))
				end
	) diffdate,
	0,b.hours,0
from view_work a
left join station b on a.stationno = b.noa
left join uca c on a.productno=c.noa
where (a.cuadate between @t_bdate and @t_edate) and 
	 (a.stationno between @t_bstationno and @t_estationno) and
	 (a.stationno!='') and
	 (len(@t_xgroupano)=0 or isnull(c.groupano,'')=@t_xgroupano)
order by a.cuadate,a.stationno,a.station
update @tmp set dayhtotal = ceiling((hours/diffdate)*100)/100 where diffdate != 0
insert into @tmp(gno,stationno,stations,datea,mount,hours,diffdate,dayhtotal,dayhs,difftime)
	select '1',stationno,stations,datea,sum(mount),sum(hours),sum(diffdate),sum(dayhtotal),max(dayhs),0 from @tmp
	group by stationno,stations,datea
update @tmp set difftime = dayhs-dayhtotal
if(@t_showdiff='1')
begin
	declare @datea nvarchar(10)
	declare @stationno nvarchar(50)
	declare @stations nvarchar(90)
	declare cursor_table cursor for 
		select datea,stationno,stations from @tmp where (difftime not between -5 and 5) and (gno='1')
	open cursor_table 
	fetch next from cursor_table 
	into @datea,@stationno,@stations
	while(@@FETCH_STATUS <> -1) 
	begin
		delete @tmp where (datea=@datea) and (stationno=@stationno) and (stations=@stations)
		fetch next from cursor_table 
		into @datea,@stationno,@stations
	end 
	close cursor_table 
	deallocate cursor_table 
end
select * from @tmp order by datea,stationno,stations,gno;
------------------------------------------------------------------------------------------------------------
z_work2:--z_work2
declare @t_bdate nvarchar(20) 
declare @t_edate nvarchar(20) 
declare @t_bstationno nvarchar(20) 
declare @t_estationno nvarchar(20) 
declare @t_xgroupano nvarchar(90) 
set @t_bdate = case when '#non' = [3] then '' else [3] end
set @t_edate = case when '#non' = [4] then CHAR(255) else [4] end
set @t_bstationno = case when '#non' = [7] then '' else [7] end
set @t_estationno = case when '#non' = [8] then CHAR(255) else [8] end
set @t_xgroupano = case when '#non' = [19] then '' else [19] end
declare @tmp table(
	gno nvarchar(1),
	stationno nvarchar(10),
	stations nvarchar(90),
	datea nvarchar(10),
	udate nvarchar(10),
	noa nvarchar(30),
	productno nvarchar(30),
	products nvarchar(90),
	mount float,
	unit nvarchar(10),
	hours float,
	diffdate int, ---實際開工日與應完工日的差
	dayhtotal float, ---日小計
	dayhs float, ---標準日工時
	difftime float --負荷差異
)
insert into @tmp
select
	'0',a.stationno,a.station,a.cuadate,a.uindate,a.noa,a.productno,a.product,a.mount,a.unit,a.hours,
		DATEDIFF(day,CONVERT(datetime,(cast((left(a.cuadate,3)+1911) as nvarchar)+right(a.cuadate,6))),
				case when a.uindate!='' or a.cuadate>a.uindate  then
					CONVERT(datetime,(cast((left(a.uindate,3)+1911) as nvarchar)+right(a.uindate,6)))
				else
					CONVERT(datetime,(cast((left(a.cuadate,3)+1911) as nvarchar)+right(a.cuadate,6)))
				end
	) diffdate,
	0,b.hours,0
from view_work a
left join station b on a.stationno = b.noa
left join uca c on a.productno=c.noa
where (a.cuadate between @t_bdate and @t_edate) and 
	 (a.stationno between @t_bstationno and @t_estationno) and
	 (a.stationno!='') and
	 (len(@t_xgroupano)=0 or isnull(c.groupano,'')=@t_xgroupano)
order by a.cuadate,a.stationno,a.station
update @tmp set dayhtotal = ceiling((hours/diffdate)*100)/100 where diffdate != 0
insert into @tmp(gno,stationno,stations,datea,mount,hours,diffdate,dayhtotal,dayhs,difftime)
	select '1',char(255),char(255),datea,sum(mount),sum(hours),sum(diffdate),sum(dayhtotal),max(dayhs),0 from @tmp
	group by datea
update @tmp set difftime = dayhs-dayhtotal
select * from @tmp order by datea,stationno,stations,gno;
--------------------------------------------------------------------------------------------------------
z_work3:--z_work3
declare @t_noa nvarchar(30)
declare @t_bdate nvarchar(20)
declare @t_edate nvarchar(20)
declare @t_xgroupano nvarchar(90)
declare @t_isenda nvarchar(10)
set @t_xgroupano = case when '#non' = [19] then '' else [19] end
set @t_noa = case when '#non' = [2] then '' else [2] end
set @t_bdate = case when '#non' = [3] then '' else [3] end
set @t_edate = case when '#non' = [4] then CHAR(255) else [4] end
set @t_isenda = case when '#non' = [21] then '' else [21] end
declare @tmp table(
	gno nvarchar(1),
	noa nvarchar(30),
	datea nvarchar(10),
	station nvarchar(90),
	productno nvarchar(30),
	products nvarchar(90),
	unit nvarchar(12),
	amount float,
	ainmount float,
	p_inmount float,
	armount float,
	p_rmount float,
	aoutmount float,
	p_outmount float,
	cuadate nvarchar(10),
	workdate nvarchar(10),
	uindate nvarchar(10),
	enddate nvarchar(10),
	ordeno nvarchar(30)
)
insert into @tmp
	select
		'0',a.noa,a.kdate,a.station,a.productno,a.product,a.unit,a.mount,
		a.inmount,case when a.mount >0 then round((a.inmount/a.mount)*100,2) else 0 end,
		a.rmount,case when a.mount >0 then round((a.rmount/a.mount)*100,2) else 0 end,
		isnull(a.rmount,0)+isnull(a.wmount,0),case when a.mount >0 then round((isnull(a.rmount,0)+isnull(a.wmount,0)/a.mount)*100,2) else 0 end,
		a.cuadate,a.workdate,a.uindate,a.enddate,
		case when len(a.no2)>0 then a.ordeno + '-' + a.no2 else a.ordeno end
	from view_work a
	left join uca b on a.productno=b.noa
	where (len(@t_noa) = 0 or a.noa = @t_noa) and
		  (a.cuadate between @t_bdate and @t_edate) and
		  (len(@t_xgroupano)=0 or isnull(b.groupano,'')=@t_xgroupano) and
		  (isnull(a.enda,'0')=@t_isenda)
select * from @tmp;
--------------------------------------------------------------------------------------------------------
z_work4:--z_work4
declare @t_noa nvarchar(30)
declare @t_bdate nvarchar(20)
declare @t_edate nvarchar(20)
declare @t_xgroupano nvarchar(90)
set @t_xgroupano = case when '#non' = [19] then '' else [19] end
set @t_noa = case when '#non' = [2] then '' else [2] end
set @t_bdate = case when '#non' = [3] then '' else [3] end
set @t_edate = case when '#non' = [4] then CHAR(255) else [4] end
declare @tmp table(
	gno nvarchar(1),
	bnoa nvarchar(30),
	bdatea nvarchar(10),
	bproductno nvarchar(30),
	bproducts nvarchar(90),
	bprocess nvarchar(50),
	bmount float,
	bunit nvarchar(12),
	anoq nvarchar(10),
	aproduct nvarchar(90),
	amount float,
	agmount float,
	acuadate nvarchar(10),
	aworkdate nvarchar(10),
	auindate nvarchar(10),
	aenddate nvarchar(10)
)
insert into @tmp
select 
	'0',b.noa,b.kdate,b.productno,b.product,b.process,b.mount,b.unit,
	a.noq,a.product,a.mount,a.gmount,b.cuadate,b.workdate,b.uindate,b.enddate
from view_works a
left join view_work b on a.noa = b.noa
left join uca c on b.productno=c.noa
where (len(@t_noa) = 0 or b.noa = @t_noa) and (b.cuadate between @t_bdate and @t_edate) and
	  (len(@t_xgroupano)=0 or isnull(c.groupano,'')=@t_xgroupano)
order by b.process,a.noq,b.cuadate,b.product
select * from @tmp;
------------------------------------------------------------------------------------------------------
z_work5:--z_work5
declare @t_bdate nvarchar(20)
declare @t_edate nvarchar(20)
declare @t_bstoreno nvarchar(20)
declare @t_estoreno nvarchar(20)
declare @t_bproductno nvarchar(20)
declare @t_eproductno nvarchar(20)
declare @t_xgroupano nvarchar(90)
declare @t_bstationno nvarchar(20) 
declare @t_estationno nvarchar(20) 
set @t_bstationno = case when '#non' = [7] then '' else [7] end
set @t_estationno = case when '#non' = [8] then CHAR(255) else [8] end
set @t_xgroupano = case when '#non' = [19] then '' else [19] end
set @t_bdate = case when '#non' = [3] then '' else [3] end
set @t_edate = case when '#non' = [4] then CHAR(255) else [4] end
set @t_bstoreno = case when '#non' = [9] then '' else [9] end
set @t_estoreno = case when '#non' = [10] then CHAR(255) else [10] end
set @t_bproductno = case when '#non' = [11] then '' else [11] end
set @t_eproductno = case when '#non' = [12] then CHAR(255) else [12] end
declare @tmp table(
		gno nvarchar(1),
		n nvarchar(10),
		noa nvarchar(20),
		noq nvarchar(30),
		datea nvarchar(20),
		storeno nvarchar(30),
		store nvarchar(40),
		stationno nvarchar(50),
		stations nvarchar(90),
		workno nvarchar(60),
		productno nvarchar(20),
		product nvarchar(50),
		unit nvarchar(20),
		mount float,
		weightb float,
		wmount float,
		bweight float
)
insert into @tmp
	select
		'0' gno,'0',a.noa,b.noq,a.datea,a.storeno,a.store,a.stationno,a.station,b.workno,b.productno,b.product,
		b.unit,b.mount,b.theory,b.wmount,b.bweight
	from view_workb a
	left join view_workbs b on a.noa = b.noa
	left join uca c on b.productno=c.noa
	where (a.datea between @t_bdate and @t_edate) and
		  (a.storeno between @t_bstoreno and @t_estoreno) and
		  (b.productno between @t_bproductno and @t_eproductno) and
		  (len(@t_xgroupano)=0 or isnull(c.groupano,'')=@t_xgroupano) and
		  (a.stationno between @t_bstationno and @t_estationno)			 
insert into @tmp(gno,n,datea,stationno,stations,productno,product,mount,weightb,wmount,bweight)
	select
		'1' gno,'1',datea,stationno,stations,productno,product,SUM(mount),SUM(weightb),SUM(wmount),SUM(bweight)
	from @tmp
	group by stationno,stations,datea,productno,product
insert into @tmp(gno,n,datea,stationno,stations,productno,product,mount,weightb,wmount,bweight)
	select
		'2' gno,'2',CHAR(255),stationno,stations,productno,product,SUM(mount),SUM(weightb),SUM(wmount),SUM(bweight)
	from @tmp
	where gno = '1'
	group by stationno,stations,productno,product
insert into @tmp(gno,n,stationno,stations,datea)
	select
		'3' gno,'3',stationno,stations,char(255)
	from @tmp
	group by stationno,stations
select
	gno,n,noa,noq,datea,stationno,stations,storeno,store,productno,product,unit,workno,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,mount),1)),4,12)) mount,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,weightb),1)),4,12)) weightb,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,wmount),1)),4,12)) wmount,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,bweight),1)),4,12)) bweight
from @tmp
order by stationno,stations,n,datea,productno,product;
--------------------------------------------------------------------------------------------------------
z_work6:--z_work6
declare @t_bdate nvarchar(20)
declare @t_edate nvarchar(20)
declare @t_bproductno nvarchar(20)
declare @t_eproductno nvarchar(20)
declare @t_xgroupano nvarchar(90)
declare @t_bstationno nvarchar(20) 
declare @t_estationno nvarchar(20) 
set @t_bstationno = case when '#non' = [7] then '' else [7] end
set @t_estationno = case when '#non' = [8] then CHAR(255) else [8] end
set @t_xgroupano = case when '#non' = [19] then '' else [19] end
set @t_bdate = case when '#non' = [3] then '' else [3] end
set @t_edate = case when '#non' = [4] then char(255) else [4] end
set @t_bproductno = case when '#non' = [11] then '' else [11] end
set @t_eproductno = case when '#non' = [12] then char(255) else [12] end
declare @tmp table(
	gno nvarchar(1),
	stationno nvarchar(50),
	stations nvarchar(90),
	productno nvarchar(20),
	product nvarchar(50),
	amount float,
	unit nvarchar(20),
	inmount float,
	rmount float,
	wmount float,
	p_mount float,
	p_outmount float
)
insert into @tmp
	select
		'0' gno,a.stationno,a.station,a.productno,a.product,SUM(a.mount),MAX(a.unit),SUM(a.inmount),
		SUM(a.rmount),SUM(a.wmount),0,0
	from view_work a
	left join uca b on a.productno=b.noa
	where (a.cuadate between @t_bdate and @t_edate) and 
		  (a.productno between @t_bproductno and @t_eproductno) and
		  (len(@t_xgroupano)=0 or isnull(b.groupano,'')=@t_xgroupano) and
		  (a.stationno between @t_bstationno and @t_estationno)
	group by a.stationno,a.station,a.productno,a.product
update @tmp set p_mount = case when amount >0 then round((inmount/amount)*100,2) else 0 end,
				p_outmount = case when amount >0 then round(((isnull(rmount,0)+isnull(wmount,0))/amount)*100,2) else 0 end
select
	gno,stationno,stations,productno,product,p_mount,p_outmount,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,amount),1)),4,12)) amount,unit,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,inmount),1)),4,12)) inmount,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,rmount),1)),4,12)) rmount,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,wmount),1)),4,12)) wmount
from @tmp order by stationno,stations,productno,product;
--------------------------------------------------------------------------------------------------------
z_work7:--z_work7
declare @t_bdate nvarchar(20)
declare @t_edate nvarchar(20)
declare @t_bproductno nvarchar(20)
declare @t_eproductno nvarchar(20)
declare @t_xgroupano nvarchar(90)
declare @t_bstationno nvarchar(20) 
declare @t_estationno nvarchar(20) 
set @t_bstationno = case when '#non' = [7] then '' else [7] end
set @t_estationno = case when '#non' = [8] then CHAR(255) else [8] end
set @t_xgroupano = case when '#non' = [19] then '' else [19] end
set @t_bdate = case when '#non' = [3] then '' else [3] end
set @t_edate = case when '#non' = [4] then char(255) else [4] end
set @t_bproductno = case when '#non' = [11] then '' else [11] end
set @t_eproductno = case when '#non' = [12] then char(255) else [12] end
declare @tmp table(
	gno nvarchar(1),
	noa nvarchar(35),
	datea nvarchar(10),
	stationno nvarchar(30),
	stations nvarchar(50),
	productno nvarchar(30),
	products nvarchar(90),
	mount float,
	unit nvarchar(12),
	cuadate nvarchar(10),
	uindate nvarchar(10),
	ordeno nvarchar(30),
	nick nvarchar(50)
)
insert into @tmp
	select
		'0',a.noa,a.kdate,a.stationno,a.station,a.productno,a.product,a.mount,a.unit,a.cuadate,a.uindate,a.ordeno,c.nick
	from view_work a
	left join view_orde b on a.ordeno = b.noa
	left join cust c on b.custno = c.noa
	left join uca d on a.productno=d.noa
	where (a.cuadate between @t_bdate and @t_edate) and
		  (a.productno between @t_bproductno and @t_eproductno) and
		  (len(@t_xgroupano)=0 or isnull(d.groupano,'')=@t_xgroupano) and
		  (a.stationno between @t_bstationno and @t_estationno)
select
	gno,noa,datea,stationno,stations,productno,products,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,mount),1)),4,12)) mount,
	unit,cuadate,uindate,ordeno,nick
from @tmp order by cuadate;

--------------------------------------------------------------------------------------------------------
z_work8:--z_work8
declare @t_bdate nvarchar(20)
declare @t_edate nvarchar(20)
declare @t_bproductno nvarchar(20)
declare @t_eproductno nvarchar(20)
declare @t_aberrant nvarchar(20)
declare @t_xgroupano nvarchar(90)
set @t_xgroupano = case when '#non' = [19] then '' else [19] end
set @t_bdate = case when '#non' = [3] then '' else [3] end
set @t_edate = case when '#non' = [4] then char(255) else [4] end
set @t_bproductno = case when '#non' = [11] then '' else [11] end
set @t_eproductno = case when '#non' = [12] then char(255) else [12] end
set @t_aberrant = case when '#non' = [13] then '' else [13] end

declare @tmp table(
	gno nvarchar(1),
	noa nvarchar(30),
	noq nvarchar(10),
	aproductno nvarchar(30),
	aproducts nvarchar(90),
	amount float,
	ainmount float,
	aunit nvarchar(12),
	uindate nvarchar(10),
	enddate nvarchar(10),
	bproductno nvarchar(30),
	bproducts nvarchar(90),
	bunit nvarchar(12),
	bmount float,
	binmount float,
	s_total float,
	price float,
	wmount float
)
insert into @tmp
	select
		'0',b.noa,a.noq,b.productno,b.product,b.mount,b.inmount,b.unit,b.uindate,
		b.enddate,a.productno,a.product,a.unit,isnull(a.mount,0),isnull(c.mount,0),0,isnull(c.price,0),isnull(b.wmount,0)
	from view_works a
	left join view_work b on a.noa = b.noa
	left join (
		select
			a.workno,a.productno,a.product,a.unit,a.mount,
			(c.costa + c.costb + c.costc + c.costd) price
		from view_workas a
		left join view_wcost c on (a.workno = c.workno) and (a.productno = c.productno) and (a.noa = c.noa)
		union all
		select
			a.workno,a.productno,a.product,a.unit,a.mount,
			(c.costa + c.costb + c.costc + c.costd) price
		from view_workcs a
		left join view_wcost c on (a.workno = c.workno) and (a.productno = c.productno) and (a.noa = c.noa)
	) c on b.noa = c.workno and (a.productno = c.productno)
	left join uca d on b.productno = d.noa
	where isnull(b.noa ,'') != '' and
	(b.cuadate between @t_bdate and @t_edate) and
	(b.productno between @t_bproductno and @t_eproductno) and
	(len(@t_xgroupano)=0 or isnull(d.groupano,'')=@t_xgroupano)
	order by b.noa,a.noq,b.productno,a.productno
update @tmp set s_total = (binmount-bmount) where (binmount-bmount) > 0


if(len(@t_aberrant)>0)
begin
	declare @ucanoa nvarchar(90)
	declare @ucabadperc float
	declare cursor_table cursor for
		select noa,isnull(badperc,0) from uca a
		union 
		select productno,loss from ucas b
		union
		select b.productno,a.badperc from ucat b
		left join uca a on a.noa = b.noa
	open cursor_table
	fetch next from cursor_table
	into @ucanoa,@ucabadperc
	while(@@FETCH_STATUS <> -1)
	begin
		--delete @tmp where (aproductno = @ucanoa) and (s_total <= @ucabadperc)
		
		delete @tmp where (aproductno = @ucanoa) and (case when binmount=0 then 0 else (1-(bmount/binmount))*100 end <= @ucabadperc)
		
		fetch next from cursor_table
		into @ucanoa,@ucabadperc
	end
	close cursor_table
	deallocate cursor_table
end


select * from @tmp order by noa,noq,aproductno,bproductno;
---------------------------------------------------------------------------------------------
z_work9:--z_work9
declare @t_bdate nvarchar(20)
declare @t_edate nvarchar(20)
declare @t_xgroupano nvarchar(90)
set @t_xgroupano = case when '#non' = [19] then '' else [19] end
set @t_bdate = case when '#non' = [3] then '' else [3] end
set @t_edate = case when '#non' = [4] then CHAR(255) else [4] end
declare @tmp table(
		gno nvarchar(1),
		noa nvarchar(30),
		noq nvarchar(20),
		datea nvarchar(10),
		aproductno nvarchar(20),
		axproduct nvarchar(50),
		bproductno nvarchar(30),
		bxproduct nvarchar(50),
		typea nvarchar(20),
		tproductno nvarchar(20),
		txproduct nvarchar(20)
)
insert into @tmp
select '0' gno,a.noa,b.noq,a.datea,a.productno,a.product,b.productno,b.product,
'替換',b.tproductno,b.tproduct
from view_work a
left join view_works b on a.noa = b.noa
left join uca c on a.productno=c.noa
where (b.istd = '1')
and (a.datea between @t_bdate and @t_edate)
and (len(@t_xgroupano)=0 or isnull(c.groupano,'')=@t_xgroupano)
select gno,noa,noq,datea,aproductno,axproduct,
bproductno,bxproduct,typea,tproductno,txproduct 
from @tmp;
---------------------------------------------------------------------------------------------
z_work10:--z_work10
declare @t_bdate nvarchar(20)
declare @t_edate nvarchar(20)
declare @t_xgroupano nvarchar(90)
set @t_xgroupano = case when '#non' = [19] then '' else [19] end
set @t_bdate = case when '#non' = [3] then '' else [3] end
set @t_edate = case when '#non' = [4] then CHAR(255) else [4] end
declare @tmp table(
	gno nvarchar(1),
	uindate nvarchar(10),
	anoa nvarchar(30),
	anoq nvarchar(10),
	aproductno nvarchar(30),
	aproducts nvarchar(90),
	amount float,
	ainmount float,
	aunit nvarchar(12),
	bproductno nvarchar(30),
	bproducts nvarchar(90),
	bmount float,
	bgmount float,
	bunit nvarchar(12),
	bemount float,
	bstkmount float,
	buinmount float,
	buoutmount float,
	y_mount float,
	n_mount float
)
declare @pev_date nvarchar(10)--取前一天庫存量
set @pev_date=CONVERT (VARCHAR(7), dateadd (day,-1,cast( cast(cast(left(@t_bdate,3) as int)+1911 as nvarchar(10))+right(@t_bdate,6) as datetime)),12 )+0890000
set @pev_date=left(@pev_date,3)+'/'+substring(@pev_date,4,2)+'/'+right(@pev_date,2)

insert into @tmp
	select
		'0',b.uindate,b.noa,a.noq,b.productno,b.product,b.mount,b.inmount,b.unit,
		a.productno,a.product,a.mount,a.gmount,a.unit,a.emount,isnull(
		(select sum(mount) from stkucc(@pev_date,'','') where productno=a.productno)
		,0),
		sum(isnull(d.mount,0)),sum(isnull(e.mount,0)),0,0
	from view_works a
	left join view_work b on a.noa = b.noa
	left join (
		select b.odate,a.productno,a.mount mount from view_ordcs a
		left join view_ordc b on a.noa = b.noa
		union
		select datea,productno,mount from view_workbs
		union
		select datea,productno,mount from view_workds
		
	) d on (d.productno = a.productno) and a.cuadate <= d.odate 
	left join (
		select b.odate,a.productno,a.mount mount from view_ordes a 
		left join view_orde b on a.noa = b.noa
		union
		select datea,productno,mount from view_workas
		union
		select datea,productno,mount from view_workcs
	) e on (e.productno = a.productno) and a.cuadate <= e.odate
	left join uca f on b.productno=f.noa
	where b.noa is not null and
		(b.cuadate between @t_bdate and @t_edate) and
		(len(@t_xgroupano)=0 or isnull(f.groupano,'')=@t_xgroupano)
	group by b.uindate,b.noa,a.noq,b.productno,b.product,b.mount,b.inmount,b.unit,
				a.productno,a.product,a.mount,a.gmount,a.unit,a.emount
update @tmp set y_mount = (bstkmount+buinmount-buoutmount)
update @tmp set n_mount = case when (bmount-y_mount) > 0 then (bmount-y_mount) else 0 end

select gno,uindate,anoa,anoq,aproductno,aproducts
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,amount),1)),0,30)) amount
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,ainmount),1)),0,30)) ainmount
,aunit,bproductno,bproducts
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,bmount),1)),0,30)) bmount
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,bgmount),1)),0,30)) bgmount
,bunit
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,bemount),1)),0,30)) bemount
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,bstkmount),1)),0,30)) bstkmount
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,buinmount),1)),0,30)) buinmount
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,buoutmount),1)),0,30)) buoutmount
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,y_mount),1)),0,30)) y_mount
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,n_mount),1)),0,30)) n_mount
from @tmp;
--------------------------------------------------------------------------------------------------------
z_work11:--z_work11
declare @t_bdate nvarchar(20)
declare @t_edate nvarchar(20)
declare @t_bprocessno nvarchar(20)
declare @t_eprocessno nvarchar(20)
declare @t_xgroupano nvarchar(90)
set @t_xgroupano = case when '#non' = [19] then '' else [19] end
set @t_bdate = case when '#non' = [3] then '' else [3] end
set @t_edate = case when '#non' = [4] then CHAR(255) else [4] end
set @t_bprocessno = case when '#non' = [14] then '' else [14] end
set @t_eprocessno = case when '#non' = [15] then CHAR(255) else [15] end
----------------------------------------------------------------------------------------------------------
declare @tmp table(
	gno nvarchar(1),
	processno nvarchar(10),
	processs nvarchar(90),
	datea nvarchar(10),
	udate nvarchar(10),
	noa nvarchar(30),
	productno nvarchar(30),
	products nvarchar(90),
	mount float,
	unit nvarchar(10),
	hours float,
	diffdate int, ---實際開工日與應完工日的差
	dayhtotal float, ---日小計
	dayhs float, ---標準日工時
	difftime float --負荷差異
)
insert into @tmp
select
	'0',a.processno,a.process,a.cuadate,a.uindate,a.noa,a.productno,a.product,a.mount,a.unit,a.hours,
	DATEDIFF(day,CONVERT(datetime,(cast((left(a.cuadate,3)+1911) as nvarchar)+right(a.cuadate,6))),
				case when a.uindate!='' or a.cuadate>a.uindate then
					CONVERT(datetime,(cast((left(a.uindate,3)+1911) as nvarchar)+right(a.uindate,6)))
				else
					CONVERT(datetime,(cast((left(a.cuadate,3)+1911) as nvarchar)+right(a.cuadate,6)))
				end
	) diffdate,
	0,b.hours,0
from view_work a
left join process b on a.processno = b.noa
left join uca c on a.productno=c.noa
where (a.cuadate between @t_bdate and @t_edate) and
	  (a.processno between @t_bprocessno and @t_eprocessno) and
	  (a.processno!='') and
	  (len(@t_xgroupano)=0 or isnull(c.groupano,'')=@t_xgroupano)

update @tmp set dayhtotal = ceiling((hours/diffdate)*100)/100 where diffdate != 0

insert into @tmp(gno,processno,processs,mount,hours,diffdate,dayhtotal,dayhs,difftime)
select '1',processno,MAX(processs),sum(mount),sum(hours),sum(diffdate),sum(dayhtotal),max(dayhs),0 from @tmp
group by processno
	
update @tmp set difftime = dayhs-dayhtotal

select * from @tmp order by processno,gno,processs,datea,noa;
--------------------------------------------------------------------------------------------------------
z_work12:--z_work12
declare @t_bdate nvarchar(20)
declare @t_edate nvarchar(20)
declare @t_bproductno nvarchar(20)
declare @t_eproductno nvarchar(20)
declare @t_bprocessno nvarchar(20)
declare @t_eprocessno nvarchar(20)
declare @t_xgroupano nvarchar(90)
set @t_xgroupano = case when '#non' = [19] then '' else [19] end
set @t_bdate = case when '#non' = [3] then '' else [3] end
set @t_edate = case when '#non' = [4] then CHAR(255) else [4] end
set @t_bproductno = case when '#non' = [11] then '' else [11] end
set @t_eproductno = case when '#non' = [12] then CHAR(255) else [12] end
set @t_bprocessno = case when '#non' = [14] then '' else [14] end
set @t_eprocessno = case when '#non' = [15] then CHAR(255) else [15] end
----------------------------------------------------------------------------------------------------------
declare @tmp table(
	gno nvarchar(1),
	datea nvarchar(10),
	noa  nvarchar(20),
	workno  nvarchar(50),
	productno nvarchar(50),
	products nvarchar(90),
	unit nvarchar(10),
	cmount float,
	dmount float,
	memo nvarchar(MAX)
)

insert into @tmp
select
	'0'gno,a.trandatea,a.noa,a.workno,a.productno,a.product,a.unit,a.checkmount,a.discardmount,a.memo
from view_workx a
left join uca b on a.productno=b.noa
where (a.trandatea between @t_bdate and @t_edate) and
	  (a.productno between @t_bproductno and @t_eproductno) and
	  (len(@t_xgroupano)=0 or isnull(b.groupano,'')=@t_xgroupano)

insert into @tmp
select '1'gno,'999/99/99','','', productno,max(products),MAX(unit),sum(cmount),sum(dmount),''
from @tmp group by productno

select gno,datea,noa,workno,productno,products,unit,memo
,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,isnull(cmount,0)),1)),0,15)) cmount 
,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,isnull(dmount,0)),1)),0,15)) dmount 
,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,isnull(round((dmount/cmount)*100,2),0)),1)),0,15)) rate
,@t_bdate bdxate,@t_edate edxate from @tmp order by productno,datea,gno;
--------------------------------------------------------------------------------------------------------
z_work13:--z_work13
declare @t_bdate nvarchar(20)
declare @t_edate nvarchar(20)
declare @t_bproductno nvarchar(20)
declare @t_eproductno nvarchar(20)
declare @t_bprocessno nvarchar(20)
declare @t_eprocessno nvarchar(20)
declare @t_xgroupano nvarchar(90)
set @t_xgroupano = case when '#non' = [19] then '' else [19] end
set @t_bdate = case when '#non' = [3] then '' else [3] end
set @t_edate = case when '#non' = [4] then CHAR(255) else [4] end
set @t_bproductno = case when '#non' = [11] then '' else [11] end
set @t_eproductno = case when '#non' = [12] then CHAR(255) else [12] end
set @t_bprocessno = case when '#non' = [14] then '' else [14] end
set @t_eprocessno = case when '#non' = [15] then CHAR(255) else [15] end
----------------------------------------------------------------------------------------------------------
declare @tmp table(
	gno nvarchar(1),
	datea nvarchar(10),
	noa  nvarchar(20),
	workno  nvarchar(50),
	processno nvarchar(50),
	processs nvarchar(90),
	productno nvarchar(50),
	products nvarchar(90),
	unit nvarchar(10),
	cmount float,
	dmount float,
	memo nvarchar(MAX)
)

insert into @tmp
select
	'0' gno,a.trandatea,a.noa,a.workno,a.siprocessno,a.siprocess,
	a.productno,a.product,a.unit,a.checkmount,a.discardmount,a.memo
from view_workx a
left join uca b on a.productno=b.noa
where (a.trandatea between @t_bdate and @t_edate) and (a.productno between @t_bproductno and @t_eproductno)
and (a.siprocessno between @t_bprocessno and @t_eprocessno)
and (len(@t_xgroupano)=0 or isnull(b.groupano,'')=@t_xgroupano)

insert into @tmp
select '1'gno,'999/99/99','','',processno,MAX(processs),productno,max(products),MAX(unit),sum(cmount),sum(dmount),''
from @tmp group by processno,productno

select gno,datea,noa,workno,processno,processs,productno,products,unit,memo
,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,isnull(cmount,0)),1)),0,15)) cmount 
,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,isnull(dmount,0)),1)),0,15)) dmount 
,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,isnull(round((dmount/cmount)*100,2),0)),1)),0,15)) rate
,@t_bdate bdxate,@t_edate edxate from @tmp order by processno,productno,datea,gno;
--------------------------------------------------------------------------------------------------------
z_work14:--z_work14
declare @t_bproductno nvarchar(20)
declare @t_eproductno nvarchar(20)
declare @t_xcuano nvarchar(20)
declare @t_xworkno nvarchar(20)
declare @t_xorder nvarchar(20)
declare @t_xgroupano nvarchar(90)
set @t_xgroupano = case when '#non' = [19] then '' else [19] end
set @t_bproductno = case when '#non' = [11] then '' else [11] end
set @t_eproductno = case when '#non' = [12] then CHAR(255) else [12] end
set @t_xcuano = case when '#non' = [16] then '' else [16] end
set @t_xworkno = case when '#non' = [17] then '' else [17] end
set @t_xorder = case when '#non' = [18] then '1' else [18] end

declare @tmp table(
	gno nvarchar(1),
	recno int,
	xnoa  nvarchar(90),
	workno nvarchar(90),
	levels nvarchar(10),
	cuano nvarchar(90),
	cuanoq nvarchar(10),
	bpno nvarchar(90),
	bps nvarchar(90),
	bunit nvarchar(10),
	bmount float,
	bgmount float,
	mpno nvarchar(90),
	mps nvarchar(90),
	munit nvarchar(10),
	mmount float,
	mimount float,
	tpno nvarchar(90),
	tps nvarchar(90),
	tunit nvarchar(10),
	tmount float,
	timount float,
	ordeno nvarchar(90),
	tworkno nvarchar(90)
)

insert @tmp(gno,recno,xnoa,workno,levels,cuano,cuanoq,bpno,bps,bunit,bmount,bgmount,ordeno)
	select
		'9' gno,1,b.productno+'__'+a.noa,a.noa,a.rank+1,a.cuano,a.cuanoq,b.productno,
		b.product,b.unit,b.mount,b.gmount,a.ordeno
	from view_work a 
	left join view_works b on a.noa=b.noa 
	left join uca c on a.productno=c.noa
	where a.enda!='1' and  (b.productno between @t_bproductno and @t_eproductno)
	and (len(@t_xcuano)=0 or  a.cuano=@t_xcuano) and (len(@t_xworkno)=0 or  a.noa=@t_xworkno)
	and (len(@t_xgroupano)=0 or isnull(c.groupano,'')=@t_xgroupano)

insert @tmp(gno,recno,xnoa,workno,levels,cuano,cuanoq,mpno,mps,munit,mmount,mimount,ordeno)
	select
		'9' gno,2,b.productno+'__'+a.noa,a.noa,a.rank,a.cuano,a.cuanoq,a.productno,
		a.product,a.unit,a.mount,a.inmount,a.ordeno
	from view_work a 
	left join view_works b on a.noa=b.noa
	left join uca c on a.productno=c.noa
	where a.enda!='1' and (b.productno between @t_bproductno and @t_eproductno)
	and (len(@t_xcuano)=0 or  a.cuano=@t_xcuano) and (len(@t_xworkno)=0 or  a.noa=@t_xworkno)
	and (len(@t_xgroupano)=0 or isnull(c.groupano,'')=@t_xgroupano)
declare @t_xnoa nvarchar(90)
declare @t_cuano nvarchar(90)
declare @t_cuanoq nvarchar(10)

declare cursor_table cursor for
select xnoa,cuano,cuanoq from @tmp where recno=1
open cursor_table
fetch next from cursor_table
into @t_xnoa,@t_cuano,@t_cuanoq
while(@@FETCH_STATUS <> -1)
begin

	insert @tmp(gno,recno,xnoa,workno,levels,cuano,cuanoq,tpno,tps,tunit,tmount,timount,ordeno)
		select
			'9',3,@t_xnoa,noa,rank,cuano,cuanoq,productno,product,unit,mount,inmount,ordeno
		from view_work
		where rank=(select MIN(rank) from view_work where cuano=@t_cuano and cuanoq=@t_cuanoq)
		and cuano=@t_cuano and cuanoq=@t_cuanoq

	fetch next from cursor_table
	into @t_xnoa,@t_cuano,@t_cuanoq
end
close cursor_table
deallocate cursor_table

insert @tmp(gno,recno,xnoa,workno,cuano,cuanoq,bpno,bps,bunit,bmount,bgmount,mpno,mps,munit,mmount,mimount,tpno,tps,tunit,tmount,timount,ordeno,tworkno)
	select
	'0' gno,0 recno,a.xnoa,a.workno,a.cuano,a.cuanoq,a.bpno,a.bps,a.bunit,a.bmount,a.bgmount
	,b.mpno,b.mps,b.munit,b.mmount,b.mimount,c.tpno,c.tps,c.tunit,c.tmount,c.timount,c.ordeno,c.workno
	from(select xnoa,workno,cuano,cuanoq,bpno,bps,bunit,bmount,bgmount,ordeno from @tmp where recno='1') a 
	left join (select xnoa,workno,cuano,cuanoq,mpno,mps,munit,mmount,mimount,ordeno from @tmp where recno='2') b on a.xnoa=b.xnoa
	left join (select xnoa,workno,cuano,cuanoq,tpno,tps,tunit,tmount,timount,ordeno from @tmp where recno='3')c on a.xnoa=c.xnoa

if(@t_xorder='1')
begin
	insert @tmp(gno,recno,xnoa,bpno,bps,bunit,bmount,bgmount,mmount,mimount,tmount,timount)
	select '1',1,bpno+'__'+CHAR(255),bpno,MAX(bps),MAX(bunit),sum(bmount),SUM(bgmount),sum(mmount),SUM(mimount),sum(tmount),SUM(timount)
	from @tmp where gno='0'
	group by bpno
	
	select gno,recno,xnoa,workno,cuano,cuanoq,bpno,bps,bunit,mpno,mps,munit,tpno,tps,ordeno,tworkno,tunit 
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,bmount),1)),0,12)) bmount 
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,bgmount),1)),0,12)) bgmount 
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,mmount),1)),0,12)) mmount 
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,mimount),1)),0,12)) mimount 
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,tmount),1)),0,12)) tmount 
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,timount),1)),0,12)) timount 
	from @tmp where gno!='9' order by xnoa,cuano,cuanoq,recno 
end

if(@t_xorder='2')
begin
	insert @tmp(gno,recno,xnoa,mpno,mps,munit,bmount,bgmount,mmount,mimount,tmount,timount)
	select '2',1,mpno+'__'+CHAR(255),mpno,MAX(mps),MAX(munit),sum(bmount),SUM(bgmount),sum(mmount),SUM(mimount),sum(tmount),SUM(timount)
	from @tmp where gno='0'
	group by mpno
	
	select gno,recno,xnoa,workno,cuano,cuanoq,bpno,bps,bunit,mpno,mps,munit,tpno,tps,ordeno,tworkno,tunit 
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,bmount),1)),0,12)) bmount 
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,bgmount),1)),0,12)) bgmount 
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,mmount),1)),0,12)) mmount 
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,mimount),1)),0,12)) mimount 
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,tmount),1)),0,12)) tmount 
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,timount),1)),0,12)) timount 
	from @tmp where gno!='9' order by mpno,recno 
end

if(@t_xorder='3')
begin
	insert @tmp(gno,recno,xnoa,tpno,tps,tunit,bmount,bgmount,mmount,mimount,tmount,timount)
	select '3',1,tpno+'__'+CHAR(255),tpno,MAX(tps),MAX(tunit),sum(bmount),SUM(bgmount),sum(mmount),SUM(mimount),sum(tmount),SUM(timount)
	from @tmp where gno='0'
	group by tpno
	
	select gno,recno,xnoa,workno,cuano,cuanoq,bpno,bps,bunit,mpno,mps,munit,tpno,tps,ordeno,tworkno,tunit 
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,bmount),1)),0,12)) bmount 
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,bgmount),1)),0,12)) bgmount 
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,mmount),1)),0,12)) mmount 
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,mimount),1)),0,12)) mimount 
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,tmount),1)),0,12)) tmount 
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,timount),1)),0,12)) timount 
	from @tmp where gno!='9' order by tpno,recno 
end;
-------------------------------------------------------------------------------------------------------
z_work15:--z_work15
declare @t_bdate nvarchar(20)
declare @t_edate nvarchar(20)
declare @t_bstationno nvarchar(20)
declare @t_estationno nvarchar(20)
set @t_bdate = case when '#non' = [3] then '' else [3] end
set @t_edate = case when '#non' = [4] then CHAR(255) else [4] end
set @t_bstationno = case when '#non' = [7] then '' else [7] end
set @t_estationno = case when '#non' = [8] then CHAR(255) else [8] end
declare @tmp table(
	gno nvarchar(1),
	datea nvarchar(10),
	stationno nvarchar(30),
	stations nvarchar(50),
	activation float,
	borntime float,
	inmount float,
	errmount float,
	chgmo float,
	fault float,
	delay float,
	waittime float,
	waitfedtime float,
	lacksss float
)
insert into @tmp(gno,datea,stationno,stations,borntime,inmount,errmount,chgmo,
					   fault,delay,waittime,waitfedtime,lacksss)
	select
		'0',b.datea,a.noa,a.station,isnull(c.borntime,0),isnull(b.inmount,0),isnull(b.errmount,0),
		isnull(c.chgtime,0),isnull(c.faulttime,0),isnull(c.delaytime,0),isnull(c.waittime,0),
		isnull(c.waitfedtime,0),isnull(c.lacksss,0)
	from station a 
	left join (
		select datea,stationno,sum(inmount) inmount,sum(errmount)errmount from (
			select b.datea,b.stationno,b.station,a.mount inmount,0 errmount 
			from view_workbs a 
			left join view_workb b on a.noa = b.noa 
			left join view_work c on a.workno=c.noa 
			where c.isrework=0 or c.isrework is null and b.datea between @t_bdate and @t_edate 
			union all
			select b.datea,b.stationno,b.station,0 inmount,a.mount errmount 
			from view_workbs a 
			left join view_workb b on a.noa = b.noa 
			left join view_work c on a.workno=c.noa 
			where c.isrework=1 and b.datea between @t_bdate and @t_edate 
		)tmp group by datea,stationno
	) b on (a.noa = b.stationno)
	left join (
		select b.datea,a.mechno,sum(a.borntime) borntime,sum(a.chgtime) chgtime,sum(a.faulttime) faulttime,
				 sum(a.delaytime) delaytime,sum(a.waittime) waittime,sum(a.waitfedtime) waitfedtime,
				 sum(a.lacksss) lacksss
		from view_cuws a
		left join view_cuw b on a.noa = b.noa
		where b.datea between @t_bdate and @t_edate 
		group by b.datea,a.mechno
	) c on (a.noa = c.mechno) and (c.datea = b.datea)
	where (b.datea between @t_bdate and @t_edate) and (a.noa between @t_bstationno and @t_estationno)
	order by b.datea
update @tmp set activation = case when borntime > 0 then (borntime-(chgmo+fault+delay+waittime+waitfedtime+lacksss))/borntime
										 else 0 end
update @tmp set activation = round(activation,4)
insert into @tmp
	select '1',datea,'','',sum(activation),sum(borntime),sum(inmount),sum(errmount),
			 sum(chgmo),sum(fault),sum(delay),sum(waittime),sum(waitfedtime),sum(lacksss)
	from @tmp
	group by datea
select
	gno,datea,stationno,stations,activation,@t_bdate bdate,@t_edate edate,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,borntime),1)),4,12)) borntime,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,inmount),1)),4,12)) inmount,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,errmount),1)),4,12)) errmount,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,chgmo),1)),4,12)) chgmo,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,fault),1)),4,12)) fault,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,delay),1)),4,12)) delay,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,waittime),1)),4,12)) waittime,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,waitfedtime),1)),4,12)) waitfedtime,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,lacksss),1)),4,12)) lacksss
from @tmp order by datea,gno,stationno;
--------------------------------------------------------------------------------------------------------